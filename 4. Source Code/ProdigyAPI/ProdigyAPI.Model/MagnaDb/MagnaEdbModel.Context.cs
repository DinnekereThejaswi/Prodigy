//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProdigyAPI.Model.MagnaDb
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MagnaDbEntities : DbContext
    {
        public MagnaDbEntities()
            : base("name=MagnaDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccType> AccTypes { get; set; }
        public virtual DbSet<APP_CONFIG_TABLE> APP_CONFIG_TABLE { get; set; }
        public virtual DbSet<ApplicationErrorLog> ApplicationErrorLogs { get; set; }
        public virtual DbSet<BarcodeStoneData> BarcodeStoneDatas { get; set; }
        public virtual DbSet<GSTComponent> GSTComponents { get; set; }
        public virtual DbSet<GSTGroup> GSTGroups { get; set; }
        public virtual DbSet<GSTLedgerEntry> GSTLedgerEntries { get; set; }
        public virtual DbSet<GSTPostingSetup> GSTPostingSetups { get; set; }
        public virtual DbSet<HSNSUC> HSNSUCs { get; set; }
        public virtual DbSet<KSTS_ACC_CODE_MASTER> KSTS_ACC_CODE_MASTER { get; set; }
        public virtual DbSet<KSTS_ACC_CURRENT_BALANCE> KSTS_ACC_CURRENT_BALANCE { get; set; }
        public virtual DbSet<KSTS_ACC_FINANCIAL_BALANCE> KSTS_ACC_FINANCIAL_BALANCE { get; set; }
        public virtual DbSet<KSTS_ACC_GROUP_BALANCE> KSTS_ACC_GROUP_BALANCE { get; set; }
        public virtual DbSet<KSTS_ACC_JOURNAL_SEQ> KSTS_ACC_JOURNAL_SEQ { get; set; }
        public virtual DbSet<KSTS_ACC_POSTING_SETUP> KSTS_ACC_POSTING_SETUP { get; set; }
        public virtual DbSet<KSTS_ACC_SEQ_NOS> KSTS_ACC_SEQ_NOS { get; set; }
        public virtual DbSet<KSTS_ACC_VOUCHER_SEQ_NOS> KSTS_ACC_VOUCHER_SEQ_NOS { get; set; }
        public virtual DbSet<KSTS_APP_SETTING> KSTS_APP_SETTING { get; set; }
        public virtual DbSet<KSTS_BARCODE_PORT_SETTINGS> KSTS_BARCODE_PORT_SETTINGS { get; set; }
        public virtual DbSet<KSTS_BARCODE_SEQ_NOS> KSTS_BARCODE_SEQ_NOS { get; set; }
        public virtual DbSet<KSTS_BARCODE_TAG_WEIGHT> KSTS_BARCODE_TAG_WEIGHT { get; set; }
        public virtual DbSet<KSTS_CARD_MASTER> KSTS_CARD_MASTER { get; set; }
        public virtual DbSet<KSTS_CURRENCY_DETAILS> KSTS_CURRENCY_DETAILS { get; set; }
        public virtual DbSet<KSTS_CUSTOMER_ID_PROOF_MASTER> KSTS_CUSTOMER_ID_PROOF_MASTER { get; set; }
        public virtual DbSet<KSTS_DAY_END> KSTS_DAY_END { get; set; }
        public virtual DbSet<KSTS_DISCOUNT_PERIOD> KSTS_DISCOUNT_PERIOD { get; set; }
        public virtual DbSet<KSTS_FINYEAR_MASTER> KSTS_FINYEAR_MASTER { get; set; }
        public virtual DbSet<KSTS_FY_ACCESS_MASTER> KSTS_FY_ACCESS_MASTER { get; set; }
        public virtual DbSet<KSTS_GS_ITEM_ENTRY> KSTS_GS_ITEM_ENTRY { get; set; }
        public virtual DbSet<KSTS_GST_MASTER> KSTS_GST_MASTER { get; set; }
        public virtual DbSet<KSTS_GST_TYPES> KSTS_GST_TYPES { get; set; }
        public virtual DbSet<KSTS_ITEM_COUNTER_LIST> KSTS_ITEM_COUNTER_LIST { get; set; }
        public virtual DbSet<KSTS_ITEMSIZE_MASTER> KSTS_ITEMSIZE_MASTER { get; set; }
        public virtual DbSet<KSTS_KARAT_MASTER> KSTS_KARAT_MASTER { get; set; }
        public virtual DbSet<KSTS_MASTERS_SEQ_NOS> KSTS_MASTERS_SEQ_NOS { get; set; }
        public virtual DbSet<KSTS_MC_TYPES> KSTS_MC_TYPES { get; set; }
        public virtual DbSet<KSTS_RELIGION_MASTER> KSTS_RELIGION_MASTER { get; set; }
        public virtual DbSet<KSTS_SEQ_NOS> KSTS_SEQ_NOS { get; set; }
        public virtual DbSet<KSTS_STATE_MASTER> KSTS_STATE_MASTER { get; set; }
        public virtual DbSet<KSTS_TDS_MASTER> KSTS_TDS_MASTER { get; set; }
        public virtual DbSet<KSTS_WASTAGE_MASTER> KSTS_WASTAGE_MASTER { get; set; }
        public virtual DbSet<KSTU_ACC_CHEQUE_MASTER> KSTU_ACC_CHEQUE_MASTER { get; set; }
        public virtual DbSet<KSTU_ACC_CLOSING> KSTU_ACC_CLOSING { get; set; }
        public virtual DbSet<KSTU_ACC_CREDITCARD_MASTER> KSTU_ACC_CREDITCARD_MASTER { get; set; }
        public virtual DbSet<KSTU_ACC_EXCHANGE_ENTRY_DETAILS> KSTU_ACC_EXCHANGE_ENTRY_DETAILS { get; set; }
        public virtual DbSet<KSTU_ACC_FY_MASTER> KSTU_ACC_FY_MASTER { get; set; }
        public virtual DbSet<KSTU_ACC_GROUP_MASTER> KSTU_ACC_GROUP_MASTER { get; set; }
        public virtual DbSet<KSTU_ACC_GST_GROUPING> KSTU_ACC_GST_GROUPING { get; set; }
        public virtual DbSet<KSTU_ACC_LEDGER_MASTER> KSTU_ACC_LEDGER_MASTER { get; set; }
        public virtual DbSet<KSTU_ACC_NARRATION_MASTER> KSTU_ACC_NARRATION_MASTER { get; set; }
        public virtual DbSet<KSTU_ACC_SUBLEDGER_MASTER> KSTU_ACC_SUBLEDGER_MASTER { get; set; }
        public virtual DbSet<KSTU_ACC_SUBSIDIARY_VOUCHER_TRANSACTIONS> KSTU_ACC_SUBSIDIARY_VOUCHER_TRANSACTIONS { get; set; }
        public virtual DbSet<KSTU_ACC_TDS_GROUPING> KSTU_ACC_TDS_GROUPING { get; set; }
        public virtual DbSet<KSTU_ACC_VCH_TRANS_HISTORY> KSTU_ACC_VCH_TRANS_HISTORY { get; set; }
        public virtual DbSet<KSTU_ACC_VOUCHER_TRANSACTIONS> KSTU_ACC_VOUCHER_TRANSACTIONS { get; set; }
        public virtual DbSet<KSTU_ALLOY_MASTER> KSTU_ALLOY_MASTER { get; set; }
        public virtual DbSet<KSTU_BRANCH_MASTER> KSTU_BRANCH_MASTER { get; set; }
        public virtual DbSet<KSTU_CHARGES_MASTER> KSTU_CHARGES_MASTER { get; set; }
        public virtual DbSet<KSTU_CHIT_TABLE> KSTU_CHIT_TABLE { get; set; }
        public virtual DbSet<KSTU_COMPANY_MASTER> KSTU_COMPANY_MASTER { get; set; }
        public virtual DbSet<KSTU_COUNTER_MASTER> KSTU_COUNTER_MASTER { get; set; }
        public virtual DbSet<KSTU_CURRENCY_MASTER> KSTU_CURRENCY_MASTER { get; set; }
        public virtual DbSet<KSTU_CUSTOMER_MASTER> KSTU_CUSTOMER_MASTER { get; set; }
        public virtual DbSet<KSTU_DEPARTMENT_MASTER> KSTU_DEPARTMENT_MASTER { get; set; }
        public virtual DbSet<KSTU_DESIGNATION_MASTER> KSTU_DESIGNATION_MASTER { get; set; }
        public virtual DbSet<KSTU_DIAMOND_MASTER> KSTU_DIAMOND_MASTER { get; set; }
        public virtual DbSet<KSTU_DIAMOND_RATE_MASTER> KSTU_DIAMOND_RATE_MASTER { get; set; }
        public virtual DbSet<KSTU_GRADE_MASTER> KSTU_GRADE_MASTER { get; set; }
        public virtual DbSet<KSTU_GROUP_GS> KSTU_GROUP_GS { get; set; }
        public virtual DbSet<KSTU_GS_GROUPING> KSTU_GS_GROUPING { get; set; }
        public virtual DbSet<KSTU_HALLMARK_CENTER> KSTU_HALLMARK_CENTER { get; set; }
        public virtual DbSet<KSTU_ISSUERECEIPTS_TYPES> KSTU_ISSUERECEIPTS_TYPES { get; set; }
        public virtual DbSet<KSTU_ITEM_ENTRY_MASTER> KSTU_ITEM_ENTRY_MASTER { get; set; }
        public virtual DbSet<KSTU_ITEM_LIST_GROUP_MASTER> KSTU_ITEM_LIST_GROUP_MASTER { get; set; }
        public virtual DbSet<KSTU_ITEM_TYPE> KSTU_ITEM_TYPE { get; set; }
        public virtual DbSet<KSTU_ITEMDESIGN_MASTER> KSTU_ITEMDESIGN_MASTER { get; set; }
        public virtual DbSet<KSTU_MAILID_MASTER> KSTU_MAILID_MASTER { get; set; }
        public virtual DbSet<KSTU_MASTER_DESIGN> KSTU_MASTER_DESIGN { get; set; }
        public virtual DbSet<KSTU_METALS_MASTER> KSTU_METALS_MASTER { get; set; }
        public virtual DbSet<KSTU_PROFESSION_MASTER> KSTU_PROFESSION_MASTER { get; set; }
        public virtual DbSet<KSTU_PUBLIC_HOLIDAY> KSTU_PUBLIC_HOLIDAY { get; set; }
        public virtual DbSet<KSTU_RATE_MASTER> KSTU_RATE_MASTER { get; set; }
        public virtual DbSet<KSTU_RATE_MASTER_HIS> KSTU_RATE_MASTER_HIS { get; set; }
        public virtual DbSet<KSTU_SALESMAN_MASTER> KSTU_SALESMAN_MASTER { get; set; }
        public virtual DbSet<KSTU_SALUTATION_MASTER> KSTU_SALUTATION_MASTER { get; set; }
        public virtual DbSet<KSTU_SETTINGS> KSTU_SETTINGS { get; set; }
        public virtual DbSet<KSTU_STONE_DIAMOND_MASTER> KSTU_STONE_DIAMOND_MASTER { get; set; }
        public virtual DbSet<KSTU_STONE_MASTER> KSTU_STONE_MASTER { get; set; }
        public virtual DbSet<KSTU_SUPPLIER_GROUP> KSTU_SUPPLIER_GROUP { get; set; }
        public virtual DbSet<KSTU_SUPPLIER_MASTER> KSTU_SUPPLIER_MASTER { get; set; }
        public virtual DbSet<KSTU_TOLERANCE_MASTER> KSTU_TOLERANCE_MASTER { get; set; }
        public virtual DbSet<KSTU_VA_MASTER> KSTU_VA_MASTER { get; set; }
        public virtual DbSet<KSTU_VOUCHER_MASTER> KSTU_VOUCHER_MASTER { get; set; }
        public virtual DbSet<KTTS_CARD_COMMISSION> KTTS_CARD_COMMISSION { get; set; }
        public virtual DbSet<KTTS_EMPLOYEE_MASTER> KTTS_EMPLOYEE_MASTER { get; set; }
        public virtual DbSet<KTTS_PAYMENT_MASTER> KTTS_PAYMENT_MASTER { get; set; }
        public virtual DbSet<KTTU_BARCODE_IMAGE> KTTU_BARCODE_IMAGE { get; set; }
        public virtual DbSet<KTTU_BARCODE_MASTER> KTTU_BARCODE_MASTER { get; set; }
        public virtual DbSet<KTTU_BARCODE_STONE_DETAILS> KTTU_BARCODE_STONE_DETAILS { get; set; }
        public virtual DbSet<KTTU_CASH_IN_HAND_DETAILS> KTTU_CASH_IN_HAND_DETAILS { get; set; }
        public virtual DbSet<KTTU_COUNTER_ISSUE> KTTU_COUNTER_ISSUE { get; set; }
        public virtual DbSet<KTTU_COUNTER_RECEIPT> KTTU_COUNTER_RECEIPT { get; set; }
        public virtual DbSet<KTTU_COUNTER_STOCK> KTTU_COUNTER_STOCK { get; set; }
        public virtual DbSet<KTTU_CREDIT_BILL_DETAILS> KTTU_CREDIT_BILL_DETAILS { get; set; }
        public virtual DbSet<KTTU_DESIGN_MASTER> KTTU_DESIGN_MASTER { get; set; }
        public virtual DbSet<KTTU_GS_SALES_STOCK> KTTU_GS_SALES_STOCK { get; set; }
        public virtual DbSet<KTTU_ITEM_STOCK> KTTU_ITEM_STOCK { get; set; }
        public virtual DbSet<KTTU_NOTE> KTTU_NOTE { get; set; }
        public virtual DbSet<KTTU_OFFER_DISCOUNT_DETAILS> KTTU_OFFER_DISCOUNT_DETAILS { get; set; }
        public virtual DbSet<KTTU_ORDER_IMAGE> KTTU_ORDER_IMAGE { get; set; }
        public virtual DbSet<KTTU_ORDER_RECEIPT_DETAILS> KTTU_ORDER_RECEIPT_DETAILS { get; set; }
        public virtual DbSet<KTTU_PAYMENT_DETAILS> KTTU_PAYMENT_DETAILS { get; set; }
        public virtual DbSet<KTTU_PITTY_CASH_ENTRY> KTTU_PITTY_CASH_ENTRY { get; set; }
        public virtual DbSet<KTTU_PURCHASE_DETAILS> KTTU_PURCHASE_DETAILS { get; set; }
        public virtual DbSet<KTTU_PURCHASE_MASTER> KTTU_PURCHASE_MASTER { get; set; }
        public virtual DbSet<KTTU_PURCHASE_RETURN_DETAILS> KTTU_PURCHASE_RETURN_DETAILS { get; set; }
        public virtual DbSet<KTTU_PURCHASE_RETURN_MASTER> KTTU_PURCHASE_RETURN_MASTER { get; set; }
        public virtual DbSet<KTTU_PURCHASE_STONE_DETAILS> KTTU_PURCHASE_STONE_DETAILS { get; set; }
        public virtual DbSet<KTTU_REPAIR_ISSUE_DETAILS> KTTU_REPAIR_ISSUE_DETAILS { get; set; }
        public virtual DbSet<KTTU_REPAIR_ISSUE_MASTER> KTTU_REPAIR_ISSUE_MASTER { get; set; }
        public virtual DbSet<KTTU_REPAIR_RECEIPT_DETAILS> KTTU_REPAIR_RECEIPT_DETAILS { get; set; }
        public virtual DbSet<KTTU_REPAIR_RECEIPT_MASTER> KTTU_REPAIR_RECEIPT_MASTER { get; set; }
        public virtual DbSet<KTTU_SALES_DETAILS> KTTU_SALES_DETAILS { get; set; }
        public virtual DbSet<KTTU_SALES_EST_DETAILS> KTTU_SALES_EST_DETAILS { get; set; }
        public virtual DbSet<KTTU_SALES_EST_MASTER> KTTU_SALES_EST_MASTER { get; set; }
        public virtual DbSet<KTTU_SALES_MASTER> KTTU_SALES_MASTER { get; set; }
        public virtual DbSet<KTTU_SALES_STOCK_DETAILS> KTTU_SALES_STOCK_DETAILS { get; set; }
        public virtual DbSet<KTTU_SALES_STOCK_MASTER> KTTU_SALES_STOCK_MASTER { get; set; }
        public virtual DbSet<KTTU_SALES_STONE_DETAILS> KTTU_SALES_STONE_DETAILS { get; set; }
        public virtual DbSet<KTTU_SR_DETAILS> KTTU_SR_DETAILS { get; set; }
        public virtual DbSet<KTTU_SR_ISSUE_DETAILS> KTTU_SR_ISSUE_DETAILS { get; set; }
        public virtual DbSet<KTTU_SR_ISSUE_MASTER> KTTU_SR_ISSUE_MASTER { get; set; }
        public virtual DbSet<KTTU_SR_ISSUE_STONE_DETAILS> KTTU_SR_ISSUE_STONE_DETAILS { get; set; }
        public virtual DbSet<KTTU_SR_MASTER> KTTU_SR_MASTER { get; set; }
        public virtual DbSet<KTTU_SR_RECEIPT_DETAILS> KTTU_SR_RECEIPT_DETAILS { get; set; }
        public virtual DbSet<KTTU_SR_RECEIPT_MASTER> KTTU_SR_RECEIPT_MASTER { get; set; }
        public virtual DbSet<KTTU_SR_RECEIPT_STONE_DETAILS> KTTU_SR_RECEIPT_STONE_DETAILS { get; set; }
        public virtual DbSet<KTTU_SR_STONE_DETAILS> KTTU_SR_STONE_DETAILS { get; set; }
        public virtual DbSet<KTTU_STOCK_TAKING> KTTU_STOCK_TAKING { get; set; }
        public virtual DbSet<LastUpdateTime> LastUpdateTimes { get; set; }
        public virtual DbSet<LOV> LOVs { get; set; }
        public virtual DbSet<LOVKey> LOVKeys { get; set; }
        public virtual DbSet<SDTS_MODULE_MASTER> SDTS_MODULE_MASTER { get; set; }
        public virtual DbSet<SDTS_MODULEFUNCTIONS_MASTER> SDTS_MODULEFUNCTIONS_MASTER { get; set; }
        public virtual DbSet<SDTS_ROLEACTIONS_ROLE> SDTS_ROLEACTIONS_ROLE { get; set; }
        public virtual DbSet<SDTS_SUBMODULE_MASTER> SDTS_SUBMODULE_MASTER { get; set; }
        public virtual DbSet<SDTU_FUNCTION_MASTER> SDTU_FUNCTION_MASTER { get; set; }
        public virtual DbSet<SDTU_OPERATOR_MASTER> SDTU_OPERATOR_MASTER { get; set; }
        public virtual DbSet<SDTU_ROLE_MASTER> SDTU_ROLE_MASTER { get; set; }
        public virtual DbSet<SMSLog> SMSLogs { get; set; }
        public virtual DbSet<TDTU_SETTING_MASTER> TDTU_SETTING_MASTER { get; set; }
        public virtual DbSet<KSTS_HALLMARK_TYPE> KSTS_HALLMARK_TYPE { get; set; }
        public virtual DbSet<KSTS_STONE_BARCODE_SEQ_NOS> KSTS_STONE_BARCODE_SEQ_NOS { get; set; }
        public virtual DbSet<KSTU_ACC_TRANSACTION_TYPES> KSTU_ACC_TRANSACTION_TYPES { get; set; }
        public virtual DbSet<RolePermission> RolePermissions { get; set; }
        public virtual DbSet<ModuleFunction> ModuleFunctions { get; set; }
        public virtual DbSet<ITEM_MASTER> ITEM_MASTER { get; set; }
        public virtual DbSet<OperatorBranchMapping> OperatorBranchMappings { get; set; }
        public virtual DbSet<OperatorDefaultBranch> OperatorDefaultBranches { get; set; }
        public virtual DbSet<PaymentJournal> PaymentJournals { get; set; }
        public virtual DbSet<WebAPITraceLog> WebAPITraceLogs { get; set; }
        public virtual DbSet<vAccountsVoucherType> vAccountsVoucherTypes { get; set; }
        public virtual DbSet<AccTransactionType> AccTransactionTypes { get; set; }
        public virtual DbSet<vLedgerStockType> vLedgerStockTypes { get; set; }
        public virtual DbSet<APIClient> APIClients { get; set; }
        public virtual DbSet<RefreshToken> RefreshTokens { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<Method> Methods { get; set; }
        public virtual DbSet<RoleMethodPermission> RoleMethodPermissions { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerDocument> CustomerDocuments { get; set; }
        public virtual DbSet<BarcodeInclusiveStone> BarcodeInclusiveStones { get; set; }
        public virtual DbSet<ElevatedPermission> ElevatedPermissions { get; set; }
        public virtual DbSet<RoleElevatedPermissionMapping> RoleElevatedPermissionMappings { get; set; }
        public virtual DbSet<UserElevatedPermissionMapping> UserElevatedPermissionMappings { get; set; }
        public virtual DbSet<CHTU_CHIT_CLOSURE> CHTU_CHIT_CLOSURE { get; set; }
        public virtual DbSet<KTTU_PURCHASE_EST_DETAILS> KTTU_PURCHASE_EST_DETAILS { get; set; }
        public virtual DbSet<KTTU_PURCHASE_EST_MASTER> KTTU_PURCHASE_EST_MASTER { get; set; }
        public virtual DbSet<KTTU_COUNTER_STOCK_HIS> KTTU_COUNTER_STOCK_HIS { get; set; }
        public virtual DbSet<KSTS_SCHEDULE_MASTER> KSTS_SCHEDULE_MASTER { get; set; }
        public virtual DbSet<LedgerBalance> LedgerBalances { get; set; }
        public virtual DbSet<KTTU_ORDER_DETAILS> KTTU_ORDER_DETAILS { get; set; }
        public virtual DbSet<KTTU_ORDER_MASTER> KTTU_ORDER_MASTER { get; set; }
        public virtual DbSet<KTTS_APP_PASS> KTTS_APP_PASS { get; set; }
        public virtual DbSet<KSTU_CUSTOMER_ID_PROOF_DETAILS> KSTU_CUSTOMER_ID_PROOF_DETAILS { get; set; }
        public virtual DbSet<KTTU_SALES_MASTER_OLD> KTTU_SALES_MASTER_OLD { get; set; }
        public virtual DbSet<KSTU_ORDER_RATE_MASTER> KSTU_ORDER_RATE_MASTER { get; set; }
        public virtual DbSet<ORDER_TYPE_ACC_POSTING> ORDER_TYPE_ACC_POSTING { get; set; }
        public virtual DbSet<KTTU_PAYMENT_DETAILS_OLD> KTTU_PAYMENT_DETAILS_OLD { get; set; }
        public virtual DbSet<KSTU_COUNTER_MASTER_MAIN> KSTU_COUNTER_MASTER_MAIN { get; set; }
        public virtual DbSet<KTTU_BRANCH_ORDER_MASTER> KTTU_BRANCH_ORDER_MASTER { get; set; }
        public virtual DbSet<MobileOTP> MobileOTPs { get; set; }
        public virtual DbSet<KSTU_PACKING_DETAILS> KSTU_PACKING_DETAILS { get; set; }
        public virtual DbSet<KTTU_ONLINE_INVENTARY_DETAILS> KTTU_ONLINE_INVENTARY_DETAILS { get; set; }
        public virtual DbSet<IntegrationEnvironment> IntegrationEnvironments { get; set; }
        public virtual DbSet<BhimaEcomIntegrationEnvironment> BhimaEcomIntegrationEnvironments { get; set; }
        public virtual DbSet<EcomAPIURL> EcomAPIURLs { get; set; }
        public virtual DbSet<EcomOrderAPILog> EcomOrderAPILogs { get; set; }
        public virtual DbSet<KSTU_SKU_MASTER> KSTU_SKU_MASTER { get; set; }
        public virtual DbSet<OrderItemPickList> OrderItemPickLists { get; set; }
        public virtual DbSet<vBilltype> vBilltypes { get; set; }
        public virtual DbSet<DocumentCreationLog> DocumentCreationLogs { get; set; }
        public virtual DbSet<KTTU_BARCODED_RECEIPT_DETAILS> KTTU_BARCODED_RECEIPT_DETAILS { get; set; }
        public virtual DbSet<KTTU_BARCODED_RECEIPT_MASTER> KTTU_BARCODED_RECEIPT_MASTER { get; set; }
        public virtual DbSet<IPSetting> IPSettings { get; set; }
        public virtual DbSet<KTTU_CASHBACK_OFFER_DETAILS> KTTU_CASHBACK_OFFER_DETAILS { get; set; }
        public virtual DbSet<KTTU_CASHBACK_OFFER_MASTER> KTTU_CASHBACK_OFFER_MASTER { get; set; }
        public virtual DbSet<KTTU_BARCODED_ISSUE_DETAILS> KTTU_BARCODED_ISSUE_DETAILS { get; set; }
        public virtual DbSet<KTTU_BARCODED_ISSUE_MASTER> KTTU_BARCODED_ISSUE_MASTER { get; set; }
        public virtual DbSet<KTTS_TRANSACTION_TYPES_MASTER> KTTS_TRANSACTION_TYPES_MASTER { get; set; }
        public virtual DbSet<vGetexpenseledger> vGetexpenseledgers { get; set; }
        public virtual DbSet<KTTU_TDS_EXPENSE_DETAILS> KTTU_TDS_EXPENSE_DETAILS { get; set; }
        public virtual DbSet<KSTS_CESS_MASTER> KSTS_CESS_MASTER { get; set; }
        public virtual DbSet<KTTU_ISSUE_RECEIPTS_STONE_DETAILS> KTTU_ISSUE_RECEIPTS_STONE_DETAILS { get; set; }
        public virtual DbSet<KTTU_STONE_COUNTER_STOCK> KTTU_STONE_COUNTER_STOCK { get; set; }
        public virtual DbSet<KSTU_MIN_STOCK_MASTER> KSTU_MIN_STOCK_MASTER { get; set; }
        public virtual DbSet<KTTU_OPG_STOCK_ISSUE_DETAILS> KTTU_OPG_STOCK_ISSUE_DETAILS { get; set; }
        public virtual DbSet<KTTU_OPG_STOCK_ISSUE_MASTER> KTTU_OPG_STOCK_ISSUE_MASTER { get; set; }
        public virtual DbSet<KTTU_OPG_STOCK_ISSUE_STONE_DETAILS> KTTU_OPG_STOCK_ISSUE_STONE_DETAILS { get; set; }
        public virtual DbSet<KSTU_FTP_CONFIG> KSTU_FTP_CONFIG { get; set; }
        public virtual DbSet<KTTU_CONFIRMED_BARCODE_MASTER> KTTU_CONFIRMED_BARCODE_MASTER { get; set; }
        public virtual DbSet<KSTU_SUPPLIER_OPN_DETAILS> KSTU_SUPPLIER_OPN_DETAILS { get; set; }
        public virtual DbSet<KTTU_ISSUE_DETAILS> KTTU_ISSUE_DETAILS { get; set; }
        public virtual DbSet<KTTU_ISSUE_MASTER> KTTU_ISSUE_MASTER { get; set; }
        public virtual DbSet<KTTU_OPG_STOCK_SEGGREGATED_DETAILS> KTTU_OPG_STOCK_SEGGREGATED_DETAILS { get; set; }
        public virtual DbSet<KTTU_OPG_STOCK_SEGGREGATED_MASTER> KTTU_OPG_STOCK_SEGGREGATED_MASTER { get; set; }
        public virtual DbSet<KTTU_RECEIPTS_DETAILS> KTTU_RECEIPTS_DETAILS { get; set; }
        public virtual DbSet<KTTU_RECEIPTS_MASTER> KTTU_RECEIPTS_MASTER { get; set; }
        public virtual DbSet<vConversionBatchId> vConversionBatchIds { get; set; }
        public virtual DbSet<KSTU_DIAMOND_CERTIFICATE> KSTU_DIAMOND_CERTIFICATE { get; set; }
        public virtual DbSet<KSTU_DIAMOND_CLARITY> KSTU_DIAMOND_CLARITY { get; set; }
        public virtual DbSet<KSTU_DIAMOND_COLOR> KSTU_DIAMOND_COLOR { get; set; }
        public virtual DbSet<KSTU_DIAMOND_CUT> KSTU_DIAMOND_CUT { get; set; }
        public virtual DbSet<KSTU_DIAMOND_FLUORESCENCE> KSTU_DIAMOND_FLUORESCENCE { get; set; }
        public virtual DbSet<KSTU_DIAMOND_POLISH> KSTU_DIAMOND_POLISH { get; set; }
        public virtual DbSet<KSTU_DIAMOND_SHAPE> KSTU_DIAMOND_SHAPE { get; set; }
        public virtual DbSet<KSTU_DIAMOND_SIZE> KSTU_DIAMOND_SIZE { get; set; }
        public virtual DbSet<KSTU_DIAMOND_SYMMETRY> KSTU_DIAMOND_SYMMETRY { get; set; }
        public virtual DbSet<KTTU_COUNTER_TRANSFER_LOG> KTTU_COUNTER_TRANSFER_LOG { get; set; }
        public virtual DbSet<KTTU_TRAN_MODI_LOG> KTTU_TRAN_MODI_LOG { get; set; }
        public virtual DbSet<KTTU_ORDER_PRODUCTION_ISSUE_DETAILS> KTTU_ORDER_PRODUCTION_ISSUE_DETAILS { get; set; }
        public virtual DbSet<KTTU_ORDER_PRODUCTION_ISSUE_STONE_DETAILS> KTTU_ORDER_PRODUCTION_ISSUE_STONE_DETAILS { get; set; }
        public virtual DbSet<KSTU_TCS_MASTER> KSTU_TCS_MASTER { get; set; }
        public virtual DbSet<CHIT_CONNECTION_TABLE> CHIT_CONNECTION_TABLE { get; set; }
        public virtual DbSet<KSTS_LOG_DETAILS> KSTS_LOG_DETAILS { get; set; }
        public virtual DbSet<PackageHeader> PackageHeaders { get; set; }
        public virtual DbSet<OrderItemShipmentLabel> OrderItemShipmentLabels { get; set; }
        public virtual DbSet<ShipmentDetail> ShipmentDetails { get; set; }
        public virtual DbSet<ShipmentMaster> ShipmentMasters { get; set; }
        public virtual DbSet<APP_AUTH_TABLE> APP_AUTH_TABLE { get; set; }
        public virtual DbSet<KTTU_BARCODE_IMAGE_URL> KTTU_BARCODE_IMAGE_URL { get; set; }
        public virtual DbSet<DiscountRuleConfiguration> DiscountRuleConfigurations { get; set; }
        public virtual DbSet<KSTU_DISCOUNT_ITEM_CATEGORY_GROUPING> KSTU_DISCOUNT_ITEM_CATEGORY_GROUPING { get; set; }
        public virtual DbSet<KSTU_DISCOUNT_MASTER_CATEGORY> KSTU_DISCOUNT_MASTER_CATEGORY { get; set; }
        public virtual DbSet<KSTU_DISCOUNT_MASTER_CATEGORY_DETAILS> KSTU_DISCOUNT_MASTER_CATEGORY_DETAILS { get; set; }
    
        public virtual ObjectResult<string> usp_Counters(string company_code, string branch_code, string gs_code, string item_name)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            var item_nameParameter = item_name != null ?
                new ObjectParameter("item_name", item_name) :
                new ObjectParameter("item_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Counters", company_codeParameter, branch_codeParameter, gs_codeParameter, item_nameParameter);
        }
    
        public virtual ObjectResult<usp_ItemList_Result2> usp_ItemList(string company_code, string branch_code, string gs_code)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ItemList_Result2>("usp_ItemList", company_codeParameter, branch_codeParameter, gs_codeParameter);
        }
    
        public virtual ObjectResult<usp_ItemProperties_Result1> usp_ItemProperties(string company_code, string branch_cdoe, string gs_code, string item_code)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_cdoeParameter = branch_cdoe != null ?
                new ObjectParameter("branch_cdoe", branch_cdoe) :
                new ObjectParameter("branch_cdoe", typeof(string));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            var item_codeParameter = item_code != null ?
                new ObjectParameter("item_code", item_code) :
                new ObjectParameter("item_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ItemProperties_Result1>("usp_ItemProperties", company_codeParameter, branch_cdoeParameter, gs_codeParameter, item_codeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_RateFromKarat(string company_code, string branch_cdoe, string gs_code)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_cdoeParameter = branch_cdoe != null ?
                new ObjectParameter("branch_cdoe", branch_cdoe) :
                new ObjectParameter("branch_cdoe", typeof(string));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_RateFromKarat", company_codeParameter, branch_cdoeParameter, gs_codeParameter);
        }
    
        public virtual ObjectResult<usp_Salesman_Result1> usp_Salesman(string company_code, string branch_cdoe)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_cdoeParameter = branch_cdoe != null ?
                new ObjectParameter("branch_cdoe", branch_cdoe) :
                new ObjectParameter("branch_cdoe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Salesman_Result1>("usp_Salesman", company_codeParameter, branch_cdoeParameter);
        }
    
        public virtual ObjectResult<usp_StoneDiamond_Result1> usp_StoneDiamond(string company_code, string branch_cdoe)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_cdoeParameter = branch_cdoe != null ?
                new ObjectParameter("branch_cdoe", branch_cdoe) :
                new ObjectParameter("branch_cdoe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StoneDiamond_Result1>("usp_StoneDiamond", company_codeParameter, branch_cdoeParameter);
        }
    
        public virtual ObjectResult<string> usp_GetGSTGoodsGroupCode(string company_code, string branch_code, string gs_code, string item_code)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            var item_codeParameter = item_code != null ?
                new ObjectParameter("item_code", item_code) :
                new ObjectParameter("item_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetGSTGoodsGroupCode", company_codeParameter, branch_codeParameter, gs_codeParameter, item_codeParameter);
        }
    
        public virtual ObjectResult<usp_LoadGS_Result1> usp_LoadGS(string companycode, string branchcode, string gSType)
        {
            var companycodeParameter = companycode != null ?
                new ObjectParameter("Companycode", companycode) :
                new ObjectParameter("Companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("Branchcode", branchcode) :
                new ObjectParameter("Branchcode", typeof(string));
    
            var gSTypeParameter = gSType != null ?
                new ObjectParameter("GSType", gSType) :
                new ObjectParameter("GSType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoadGS_Result1>("usp_LoadGS", companycodeParameter, branchcodeParameter, gSTypeParameter);
        }
    
        public virtual ObjectResult<usp_LoadMCTypes_Result1> usp_LoadMCTypes(string companycode, string branchcode, string type)
        {
            var companycodeParameter = companycode != null ?
                new ObjectParameter("Companycode", companycode) :
                new ObjectParameter("Companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("Branchcode", branchcode) :
                new ObjectParameter("Branchcode", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoadMCTypes_Result1>("usp_LoadMCTypes", companycodeParameter, branchcodeParameter, typeParameter);
        }
    
        public virtual int usp_ValidateBarcodeNo(string barcodeNo, Nullable<int> orderno, string companyCode, string branchCode)
        {
            var barcodeNoParameter = barcodeNo != null ?
                new ObjectParameter("BarcodeNo", barcodeNo) :
                new ObjectParameter("BarcodeNo", typeof(string));
    
            var ordernoParameter = orderno.HasValue ?
                new ObjectParameter("orderno", orderno) :
                new ObjectParameter("orderno", typeof(int));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ValidateBarcodeNo", barcodeNoParameter, ordernoParameter, companyCodeParameter, branchCodeParameter);
        }
    
        [DbFunction("MagnaDbEntities", "ufn_getGSTTValues")]
        public virtual IQueryable<ufn_getGSTTValues_Result> ufn_getGSTTValues(string gSTGoodsGroupCode, Nullable<decimal> amount, Nullable<bool> isInterstateAssociate, string companyCode, string branchCode)
        {
            var gSTGoodsGroupCodeParameter = gSTGoodsGroupCode != null ?
                new ObjectParameter("gSTGoodsGroupCode", gSTGoodsGroupCode) :
                new ObjectParameter("gSTGoodsGroupCode", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var isInterstateAssociateParameter = isInterstateAssociate.HasValue ?
                new ObjectParameter("isInterstateAssociate", isInterstateAssociate) :
                new ObjectParameter("isInterstateAssociate", typeof(bool));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_getGSTTValues_Result>("[MagnaDbEntities].[ufn_getGSTTValues](@gSTGoodsGroupCode, @amount, @isInterstateAssociate, @companyCode, @branchCode)", gSTGoodsGroupCodeParameter, amountParameter, isInterstateAssociateParameter, companyCodeParameter, branchCodeParameter);
        }
    
        public virtual ObjectResult<usp_getBarcodeInformation2_Result> usp_getBarcodeInformation(string companyCode, string branchCode, string barcodeNo, string orderNo, Nullable<decimal> rate, Nullable<bool> isInterstate, Nullable<decimal> addWt, Nullable<decimal> dedWt, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var barcodeNoParameter = barcodeNo != null ?
                new ObjectParameter("barcodeNo", barcodeNo) :
                new ObjectParameter("barcodeNo", typeof(string));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("orderNo", orderNo) :
                new ObjectParameter("orderNo", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var isInterstateParameter = isInterstate.HasValue ?
                new ObjectParameter("isInterstate", isInterstate) :
                new ObjectParameter("isInterstate", typeof(bool));
    
            var addWtParameter = addWt.HasValue ?
                new ObjectParameter("addWt", addWt) :
                new ObjectParameter("addWt", typeof(decimal));
    
            var dedWtParameter = dedWt.HasValue ?
                new ObjectParameter("dedWt", dedWt) :
                new ObjectParameter("dedWt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getBarcodeInformation2_Result>("usp_getBarcodeInformation", companyCodeParameter, branchCodeParameter, barcodeNoParameter, orderNoParameter, rateParameter, isInterstateParameter, addWtParameter, dedWtParameter, errorMsg);
        }
    
        public virtual ObjectResult<usp_getBarcodeStoneInformation_Result> usp_getBarcodeStoneInformation(string companyCode, string branchCode, string barcodeNo, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var barcodeNoParameter = barcodeNo != null ?
                new ObjectParameter("barcodeNo", barcodeNo) :
                new ObjectParameter("barcodeNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getBarcodeStoneInformation_Result>("usp_getBarcodeStoneInformation", companyCodeParameter, branchCodeParameter, barcodeNoParameter, errorMsg);
        }
    
        public virtual int usp_ValidateBarcodeNo1(string barcodeNo, Nullable<int> orderno, string companyCode, string branchCode)
        {
            var barcodeNoParameter = barcodeNo != null ?
                new ObjectParameter("BarcodeNo", barcodeNo) :
                new ObjectParameter("BarcodeNo", typeof(string));
    
            var ordernoParameter = orderno.HasValue ?
                new ObjectParameter("orderno", orderno) :
                new ObjectParameter("orderno", typeof(int));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ValidateBarcodeNo1", barcodeNoParameter, ordernoParameter, companyCodeParameter, branchCodeParameter);
        }
    
        public virtual int usp_ValidateBarcodeNo2(string barcodeNo, Nullable<int> orderno, string companyCode, string branchCode)
        {
            var barcodeNoParameter = barcodeNo != null ?
                new ObjectParameter("BarcodeNo", barcodeNo) :
                new ObjectParameter("BarcodeNo", typeof(string));
    
            var ordernoParameter = orderno.HasValue ?
                new ObjectParameter("orderno", orderno) :
                new ObjectParameter("orderno", typeof(int));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ValidateBarcodeNo2", barcodeNoParameter, ordernoParameter, companyCodeParameter, branchCodeParameter);
        }
    
        public virtual int usp_calculateOldPurchase(string companyCode, string branchCode, string gsCode, string itemCode, Nullable<decimal> purchaseRate, Nullable<decimal> netWt, Nullable<decimal> purchasePurity, Nullable<decimal> meltingPercent, Nullable<decimal> meltingLossWt, Nullable<decimal> rateDeduction, ObjectParameter netPurchaseRate, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var gsCodeParameter = gsCode != null ?
                new ObjectParameter("gsCode", gsCode) :
                new ObjectParameter("gsCode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("itemCode", itemCode) :
                new ObjectParameter("itemCode", typeof(string));
    
            var purchaseRateParameter = purchaseRate.HasValue ?
                new ObjectParameter("purchaseRate", purchaseRate) :
                new ObjectParameter("purchaseRate", typeof(decimal));
    
            var netWtParameter = netWt.HasValue ?
                new ObjectParameter("netWt", netWt) :
                new ObjectParameter("netWt", typeof(decimal));
    
            var purchasePurityParameter = purchasePurity.HasValue ?
                new ObjectParameter("purchasePurity", purchasePurity) :
                new ObjectParameter("purchasePurity", typeof(decimal));
    
            var meltingPercentParameter = meltingPercent.HasValue ?
                new ObjectParameter("meltingPercent", meltingPercent) :
                new ObjectParameter("meltingPercent", typeof(decimal));
    
            var meltingLossWtParameter = meltingLossWt.HasValue ?
                new ObjectParameter("meltingLossWt", meltingLossWt) :
                new ObjectParameter("meltingLossWt", typeof(decimal));
    
            var rateDeductionParameter = rateDeduction.HasValue ?
                new ObjectParameter("rateDeduction", rateDeduction) :
                new ObjectParameter("rateDeduction", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_calculateOldPurchase", companyCodeParameter, branchCodeParameter, gsCodeParameter, itemCodeParameter, purchaseRateParameter, netWtParameter, purchasePurityParameter, meltingPercentParameter, meltingLossWtParameter, rateDeductionParameter, netPurchaseRate, errorMsg);
        }
    
        public virtual ObjectResult<usp_OrderReport_Result> usp_OrderReport(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string gscode, string companycode, string branchcode, string orderType, string bookingtype, string customerType, Nullable<int> type)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var gscodeParameter = gscode != null ?
                new ObjectParameter("gscode", gscode) :
                new ObjectParameter("gscode", typeof(string));
    
            var companycodeParameter = companycode != null ?
                new ObjectParameter("companycode", companycode) :
                new ObjectParameter("companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("branchcode", branchcode) :
                new ObjectParameter("branchcode", typeof(string));
    
            var orderTypeParameter = orderType != null ?
                new ObjectParameter("OrderType", orderType) :
                new ObjectParameter("OrderType", typeof(string));
    
            var bookingtypeParameter = bookingtype != null ?
                new ObjectParameter("bookingtype", bookingtype) :
                new ObjectParameter("bookingtype", typeof(string));
    
            var customerTypeParameter = customerType != null ?
                new ObjectParameter("customerType", customerType) :
                new ObjectParameter("customerType", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OrderReport_Result>("usp_OrderReport", startdateParameter, enddateParameter, gscodeParameter, companycodeParameter, branchcodeParameter, orderTypeParameter, bookingtypeParameter, customerTypeParameter, typeParameter);
        }
    
        public virtual ObjectResult<usp_OrderReceiptReport_Result> usp_OrderReceiptReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string gsCode, string companyCode, string branchCode, string bookingtype, string customerType, Nullable<int> type)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var gsCodeParameter = gsCode != null ?
                new ObjectParameter("gsCode", gsCode) :
                new ObjectParameter("gsCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var bookingtypeParameter = bookingtype != null ?
                new ObjectParameter("bookingtype", bookingtype) :
                new ObjectParameter("bookingtype", typeof(string));
    
            var customerTypeParameter = customerType != null ?
                new ObjectParameter("customerType", customerType) :
                new ObjectParameter("customerType", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OrderReceiptReport_Result>("usp_OrderReceiptReport", startDateParameter, endDateParameter, gsCodeParameter, companyCodeParameter, branchCodeParameter, bookingtypeParameter, customerTypeParameter, typeParameter);
        }
    
        public virtual int usp_CreateAccountVoucher(Nullable<int> orderNo, Nullable<int> receiptNum, string branchCode, string companyCode)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(int));
    
            var receiptNumParameter = receiptNum.HasValue ?
                new ObjectParameter("ReceiptNum", receiptNum) :
                new ObjectParameter("ReceiptNum", typeof(int));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CreateAccountVoucher", orderNoParameter, receiptNumParameter, branchCodeParameter, companyCodeParameter);
        }
    
        public virtual int usp_CreateAccountVoucherForOrderClosure(Nullable<int> orderNo, string branchCode, string companyCode)
        {
            var orderNoParameter = orderNo.HasValue ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(int));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CreateAccountVoucherForOrderClosure", orderNoParameter, branchCodeParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<usp_GSTGetGSTTaxValues_Result> usp_GSTGetGSTTaxValues(string gSTGoodsGroupCode, Nullable<decimal> amount, Nullable<bool> isInterstateAssociate, string company_code, string branch_code)
        {
            var gSTGoodsGroupCodeParameter = gSTGoodsGroupCode != null ?
                new ObjectParameter("gSTGoodsGroupCode", gSTGoodsGroupCode) :
                new ObjectParameter("gSTGoodsGroupCode", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var isInterstateAssociateParameter = isInterstateAssociate.HasValue ?
                new ObjectParameter("isInterstateAssociate", isInterstateAssociate) :
                new ObjectParameter("isInterstateAssociate", typeof(bool));
    
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GSTGetGSTTaxValues_Result>("usp_GSTGetGSTTaxValues", gSTGoodsGroupCodeParameter, amountParameter, isInterstateAssociateParameter, company_codeParameter, branch_codeParameter);
        }
    
        public virtual int usp_getBarcodeInformation1(string companyCode, string branchCode, string barcodeNo, string orderNo, Nullable<decimal> rate, Nullable<bool> isInterstate, Nullable<decimal> addWt, Nullable<decimal> dedWt, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var barcodeNoParameter = barcodeNo != null ?
                new ObjectParameter("barcodeNo", barcodeNo) :
                new ObjectParameter("barcodeNo", typeof(string));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("orderNo", orderNo) :
                new ObjectParameter("orderNo", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var isInterstateParameter = isInterstate.HasValue ?
                new ObjectParameter("isInterstate", isInterstate) :
                new ObjectParameter("isInterstate", typeof(bool));
    
            var addWtParameter = addWt.HasValue ?
                new ObjectParameter("addWt", addWt) :
                new ObjectParameter("addWt", typeof(decimal));
    
            var dedWtParameter = dedWt.HasValue ?
                new ObjectParameter("dedWt", dedWt) :
                new ObjectParameter("dedWt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_getBarcodeInformation1", companyCodeParameter, branchCodeParameter, barcodeNoParameter, orderNoParameter, rateParameter, isInterstateParameter, addWtParameter, dedWtParameter, errorMsg);
        }
    
        public virtual ObjectResult<usp_getBarcodeInformation2_Result> usp_getBarcodeInformation2(string companyCode, string branchCode, string barcodeNo, string orderNo, Nullable<decimal> rate, Nullable<bool> isInterstate, Nullable<decimal> addWt, Nullable<decimal> dedWt, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var barcodeNoParameter = barcodeNo != null ?
                new ObjectParameter("barcodeNo", barcodeNo) :
                new ObjectParameter("barcodeNo", typeof(string));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("orderNo", orderNo) :
                new ObjectParameter("orderNo", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var isInterstateParameter = isInterstate.HasValue ?
                new ObjectParameter("isInterstate", isInterstate) :
                new ObjectParameter("isInterstate", typeof(bool));
    
            var addWtParameter = addWt.HasValue ?
                new ObjectParameter("addWt", addWt) :
                new ObjectParameter("addWt", typeof(decimal));
    
            var dedWtParameter = dedWt.HasValue ?
                new ObjectParameter("dedWt", dedWt) :
                new ObjectParameter("dedWt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getBarcodeInformation2_Result>("usp_getBarcodeInformation2", companyCodeParameter, branchCodeParameter, barcodeNoParameter, orderNoParameter, rateParameter, isInterstateParameter, addWtParameter, dedWtParameter, errorMsg);
        }
    
        public virtual int usp_stockCheckClearStockTakingByItemAttributes(string companyCode, string branchCode, string gsCode, string counterCode, string itemCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var gsCodeParameter = gsCode != null ?
                new ObjectParameter("gsCode", gsCode) :
                new ObjectParameter("gsCode", typeof(string));
    
            var counterCodeParameter = counterCode != null ?
                new ObjectParameter("counterCode", counterCode) :
                new ObjectParameter("counterCode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("itemCode", itemCode) :
                new ObjectParameter("itemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_stockCheckClearStockTakingByItemAttributes", companyCodeParameter, branchCodeParameter, gsCodeParameter, counterCodeParameter, itemCodeParameter);
        }
    
        public virtual ObjectResult<usp_stockCheckScannedStockReport_Result> usp_stockCheckScannedStockReport(string companyCode, string branchCode, string gsCode, string counterCode, string itemCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var gsCodeParameter = gsCode != null ?
                new ObjectParameter("gsCode", gsCode) :
                new ObjectParameter("gsCode", typeof(string));
    
            var counterCodeParameter = counterCode != null ?
                new ObjectParameter("counterCode", counterCode) :
                new ObjectParameter("counterCode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("itemCode", itemCode) :
                new ObjectParameter("itemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_stockCheckScannedStockReport_Result>("usp_stockCheckScannedStockReport", companyCodeParameter, branchCodeParameter, gsCodeParameter, counterCodeParameter, itemCodeParameter);
        }
    
        public virtual ObjectResult<usp_stockCheckRemainingTagReport_Result> usp_stockCheckRemainingTagReport(string companyCode, string branchCode, string gsCode, string counterCode, string itemCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var gsCodeParameter = gsCode != null ?
                new ObjectParameter("gsCode", gsCode) :
                new ObjectParameter("gsCode", typeof(string));
    
            var counterCodeParameter = counterCode != null ?
                new ObjectParameter("counterCode", counterCode) :
                new ObjectParameter("counterCode", typeof(string));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("itemCode", itemCode) :
                new ObjectParameter("itemCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_stockCheckRemainingTagReport_Result>("usp_stockCheckRemainingTagReport", companyCodeParameter, branchCodeParameter, gsCodeParameter, counterCodeParameter, itemCodeParameter);
        }
    
        public virtual ObjectResult<usp_BarcodeCounterStockReport_Result> usp_BarcodeCounterStockReport(string companyCode, string branchCode, string gsCode, string counterCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var gsCodeParameter = gsCode != null ?
                new ObjectParameter("gsCode", gsCode) :
                new ObjectParameter("gsCode", typeof(string));
    
            var counterCodeParameter = counterCode != null ?
                new ObjectParameter("counterCode", counterCode) :
                new ObjectParameter("counterCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BarcodeCounterStockReport_Result>("usp_BarcodeCounterStockReport", companyCodeParameter, branchCodeParameter, gsCodeParameter, counterCodeParameter);
        }
    
        public virtual ObjectResult<string> usp_GetGSTHSNCode(string company_code, string branch_code, string gs_code, string item_code)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            var item_codeParameter = item_code != null ?
                new ObjectParameter("item_code", item_code) :
                new ObjectParameter("item_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetGSTHSNCode", company_codeParameter, branch_codeParameter, gs_codeParameter, item_codeParameter);
        }
    
        public virtual ObjectResult<usp_getAllOrdersForAttach_Result> usp_getAllOrdersForAttach(string companyCode, string branchCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getAllOrdersForAttach_Result>("usp_getAllOrdersForAttach", companyCodeParameter, branchCodeParameter);
        }
    
        public virtual ObjectResult<Usp_CashVoucherAccName_Result> Usp_CashVoucherAccName(string companyCode, string branchCode, string accountCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("accountCode", accountCode) :
                new ObjectParameter("accountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_CashVoucherAccName_Result>("Usp_CashVoucherAccName", companyCodeParameter, branchCodeParameter, accountCodeParameter);
        }
    
        public virtual ObjectResult<usp_createRepairPostingVouchers_Result> usp_createRepairPostingVouchers(string companyCode, string branchCode, string repairInvoiceNo, ObjectParameter outValue, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var repairInvoiceNoParameter = repairInvoiceNo != null ?
                new ObjectParameter("repairInvoiceNo", repairInvoiceNo) :
                new ObjectParameter("repairInvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_createRepairPostingVouchers_Result>("usp_createRepairPostingVouchers", companyCodeParameter, branchCodeParameter, repairInvoiceNoParameter, outValue, errorMsg);
        }
    
        public virtual ObjectResult<Usp_getVoucherAccName_Result> Usp_getVoucherAccName(string companyCode, string branchCode, string accountCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("accountCode", accountCode) :
                new ObjectParameter("accountCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_getVoucherAccName_Result>("Usp_getVoucherAccName", companyCodeParameter, branchCodeParameter, accountCodeParameter);
        }
    
        public virtual ObjectResult<usp_LoadDesignMaster_Result> usp_LoadDesignMaster(string companycode, string branchcode, string type)
        {
            var companycodeParameter = companycode != null ?
                new ObjectParameter("Companycode", companycode) :
                new ObjectParameter("Companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("Branchcode", branchcode) :
                new ObjectParameter("Branchcode", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoadDesignMaster_Result>("usp_LoadDesignMaster", companycodeParameter, branchcodeParameter, typeParameter);
        }
    
        public virtual ObjectResult<usp_createCreditReceiptPostingVouchers_Result> usp_createCreditReceiptPostingVouchers(string companyCode, string branchCode, string creditReceiptNo, ObjectParameter outValue, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var creditReceiptNoParameter = creditReceiptNo != null ?
                new ObjectParameter("CreditReceiptNo", creditReceiptNo) :
                new ObjectParameter("CreditReceiptNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_createCreditReceiptPostingVouchers_Result>("usp_createCreditReceiptPostingVouchers", companyCodeParameter, branchCodeParameter, creditReceiptNoParameter, outValue, errorMsg);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_createSRPostingVouchers(string companyCode, string branchCode, string invoiceNo, string trans_type, ObjectParameter outValue, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var trans_typeParameter = trans_type != null ?
                new ObjectParameter("trans_type", trans_type) :
                new ObjectParameter("trans_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_createSRPostingVouchers", companyCodeParameter, branchCodeParameter, invoiceNoParameter, trans_typeParameter, outValue, errorMsg);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_createPurchasePostingVouchers(string companyCode, string branchCode, string invoiceNo, string trans_type, ObjectParameter outValue, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var trans_typeParameter = trans_type != null ?
                new ObjectParameter("trans_type", trans_type) :
                new ObjectParameter("trans_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_createPurchasePostingVouchers", companyCodeParameter, branchCodeParameter, invoiceNoParameter, trans_typeParameter, outValue, errorMsg);
        }
    
        public virtual ObjectResult<usp_ACC_LedgerMaster_Load_Result> usp_ACC_LedgerMaster_Load(string company_code, string branch_code, string type, string searchKey)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var searchKeyParameter = searchKey != null ?
                new ObjectParameter("searchKey", searchKey) :
                new ObjectParameter("searchKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ACC_LedgerMaster_Load_Result>("usp_ACC_LedgerMaster_Load", company_codeParameter, branch_codeParameter, typeParameter, searchKeyParameter);
        }
    
        public virtual ObjectResult<usp_LoadTransType_Result> usp_LoadTransType(string companycode, string branchcode)
        {
            var companycodeParameter = companycode != null ?
                new ObjectParameter("companycode", companycode) :
                new ObjectParameter("companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("branchcode", branchcode) :
                new ObjectParameter("branchcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoadTransType_Result>("usp_LoadTransType", companycodeParameter, branchcodeParameter);
        }
    
        public virtual ObjectResult<CashInHand_Result> CashInHand(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, string company_code, string branch_code)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashInHand_Result>("CashInHand", start_dateParameter, end_dateParameter, company_codeParameter, branch_codeParameter);
        }
    
        public virtual ObjectResult<GetAdjustedPurchaeBill_Result> GetAdjustedPurchaeBill(string companyCode, string branchCode, Nullable<System.DateTime> date, Nullable<int> finYear)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var finYearParameter = finYear.HasValue ?
                new ObjectParameter("FinYear", finYear) :
                new ObjectParameter("FinYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdjustedPurchaeBill_Result>("GetAdjustedPurchaeBill", companyCodeParameter, branchCodeParameter, dateParameter, finYearParameter);
        }
    
        public virtual ObjectResult<GetAdjustedSRBill_Result> GetAdjustedSRBill(string companyCode, string branchCode, Nullable<System.DateTime> date)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("BranchCode", branchCode) :
                new ObjectParameter("BranchCode", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdjustedSRBill_Result>("GetAdjustedSRBill", companyCodeParameter, branchCodeParameter, dateParameter);
        }
    
        public virtual ObjectResult<usp_acc_SubsidiaryToSummaryAccountsPosting_Result> usp_acc_SubsidiaryToSummaryAccountsPosting(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string companyCode, string branch_code)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_acc_SubsidiaryToSummaryAccountsPosting_Result>("usp_acc_SubsidiaryToSummaryAccountsPosting", startDateParameter, endDateParameter, companyCodeParameter, branch_codeParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerList_Result> usp_GetCustomerList(string company_code, string branch_code, string flag, string type)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerList_Result>("usp_GetCustomerList", company_codeParameter, branch_codeParameter, flagParameter, typeParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerList1_Result> usp_GetCustomerList1(string company_code, string flag, string type)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerList1_Result>("usp_GetCustomerList1", company_codeParameter, flagParameter, typeParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerListCustomer_Result> usp_GetCustomerListCustomer(string company_code, string flag, string type)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var flagParameter = flag != null ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerListCustomer_Result>("usp_GetCustomerListCustomer", company_codeParameter, flagParameter, typeParameter);
        }
    
        public virtual int usp_createOrderPostingVouchers(string companyCode, string branchCode, string orderNo, string receiptNo, ObjectParameter errorMessage)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_createOrderPostingVouchers", companyCodeParameter, branchCodeParameter, orderNoParameter, receiptNoParameter, errorMessage);
        }
    
        public virtual ObjectResult<usp_GetCustDetailsValid_Result> usp_GetCustDetailsValid(string mobileNo, string companyCode, string branchCode, string custId, string type)
        {
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("mobileNo", mobileNo) :
                new ObjectParameter("mobileNo", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var custIdParameter = custId != null ?
                new ObjectParameter("custId", custId) :
                new ObjectParameter("custId", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustDetailsValid_Result>("usp_GetCustDetailsValid", mobileNoParameter, companyCodeParameter, branchCodeParameter, custIdParameter, typeParameter);
        }
    
        public virtual ObjectResult<usp_SMSOTP_Result> usp_SMSOTP(string otp, Nullable<int> otpType, Nullable<System.DateTime> otpValidity, string mobileNo, string docno, ObjectParameter smsText, ObjectParameter smsID)
        {
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            var otpTypeParameter = otpType.HasValue ?
                new ObjectParameter("otpType", otpType) :
                new ObjectParameter("otpType", typeof(int));
    
            var otpValidityParameter = otpValidity.HasValue ?
                new ObjectParameter("otpValidity", otpValidity) :
                new ObjectParameter("otpValidity", typeof(System.DateTime));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("mobileNo", mobileNo) :
                new ObjectParameter("mobileNo", typeof(string));
    
            var docnoParameter = docno != null ?
                new ObjectParameter("docno", docno) :
                new ObjectParameter("docno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SMSOTP_Result>("usp_SMSOTP", otpParameter, otpTypeParameter, otpValidityParameter, mobileNoParameter, docnoParameter, smsText, smsID);
        }
    
        public virtual ObjectResult<SendOTPToMobile_Result> SendOTPToMobile(string compaycode, string branchcode, string computername, string operatorcode, string otpType, Nullable<int> otpLength, Nullable<int> otpValidityMinutes, Nullable<int> docno, string authencaticatedby, string custMobileNo, ObjectParameter smsText, ObjectParameter mobileNo, ObjectParameter smsID, ObjectParameter errorMsg)
        {
            var compaycodeParameter = compaycode != null ?
                new ObjectParameter("compaycode", compaycode) :
                new ObjectParameter("compaycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("branchcode", branchcode) :
                new ObjectParameter("branchcode", typeof(string));
    
            var computernameParameter = computername != null ?
                new ObjectParameter("computername", computername) :
                new ObjectParameter("computername", typeof(string));
    
            var operatorcodeParameter = operatorcode != null ?
                new ObjectParameter("operatorcode", operatorcode) :
                new ObjectParameter("operatorcode", typeof(string));
    
            var otpTypeParameter = otpType != null ?
                new ObjectParameter("otpType", otpType) :
                new ObjectParameter("otpType", typeof(string));
    
            var otpLengthParameter = otpLength.HasValue ?
                new ObjectParameter("otpLength", otpLength) :
                new ObjectParameter("otpLength", typeof(int));
    
            var otpValidityMinutesParameter = otpValidityMinutes.HasValue ?
                new ObjectParameter("otpValidityMinutes", otpValidityMinutes) :
                new ObjectParameter("otpValidityMinutes", typeof(int));
    
            var docnoParameter = docno.HasValue ?
                new ObjectParameter("docno", docno) :
                new ObjectParameter("docno", typeof(int));
    
            var authencaticatedbyParameter = authencaticatedby != null ?
                new ObjectParameter("authencaticatedby", authencaticatedby) :
                new ObjectParameter("authencaticatedby", typeof(string));
    
            var custMobileNoParameter = custMobileNo != null ?
                new ObjectParameter("custMobileNo", custMobileNo) :
                new ObjectParameter("custMobileNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SendOTPToMobile_Result>("SendOTPToMobile", compaycodeParameter, branchcodeParameter, computernameParameter, operatorcodeParameter, otpTypeParameter, otpLengthParameter, otpValidityMinutesParameter, docnoParameter, authencaticatedbyParameter, custMobileNoParameter, smsText, mobileNo, smsID, errorMsg);
        }
    
        public virtual int usp_ValidateOTPUserApprove(string companyCode, string branchCode, string mobileNo, string otp, Nullable<int> otpType, string computerName, Nullable<int> docNo, string operaorCode, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("mobileNo", mobileNo) :
                new ObjectParameter("mobileNo", typeof(string));
    
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            var otpTypeParameter = otpType.HasValue ?
                new ObjectParameter("otpType", otpType) :
                new ObjectParameter("otpType", typeof(int));
    
            var computerNameParameter = computerName != null ?
                new ObjectParameter("computerName", computerName) :
                new ObjectParameter("computerName", typeof(string));
    
            var docNoParameter = docNo.HasValue ?
                new ObjectParameter("docNo", docNo) :
                new ObjectParameter("docNo", typeof(int));
    
            var operaorCodeParameter = operaorCode != null ?
                new ObjectParameter("operaorCode", operaorCode) :
                new ObjectParameter("operaorCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ValidateOTPUserApprove", companyCodeParameter, branchCodeParameter, mobileNoParameter, otpParameter, otpTypeParameter, computerNameParameter, docNoParameter, operaorCodeParameter, errorMsg);
        }
    
        public virtual ObjectResult<SendOTPToMobile1_Result> SendOTPToMobile1(string compaycode, string branchcode, string computername, string operatorcode, string otpType, Nullable<int> otpLength, Nullable<int> otpValidityMinutes, Nullable<int> docno, string authencaticatedby, string custMobileNo)
        {
            var compaycodeParameter = compaycode != null ?
                new ObjectParameter("compaycode", compaycode) :
                new ObjectParameter("compaycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("branchcode", branchcode) :
                new ObjectParameter("branchcode", typeof(string));
    
            var computernameParameter = computername != null ?
                new ObjectParameter("computername", computername) :
                new ObjectParameter("computername", typeof(string));
    
            var operatorcodeParameter = operatorcode != null ?
                new ObjectParameter("operatorcode", operatorcode) :
                new ObjectParameter("operatorcode", typeof(string));
    
            var otpTypeParameter = otpType != null ?
                new ObjectParameter("otpType", otpType) :
                new ObjectParameter("otpType", typeof(string));
    
            var otpLengthParameter = otpLength.HasValue ?
                new ObjectParameter("otpLength", otpLength) :
                new ObjectParameter("otpLength", typeof(int));
    
            var otpValidityMinutesParameter = otpValidityMinutes.HasValue ?
                new ObjectParameter("otpValidityMinutes", otpValidityMinutes) :
                new ObjectParameter("otpValidityMinutes", typeof(int));
    
            var docnoParameter = docno.HasValue ?
                new ObjectParameter("docno", docno) :
                new ObjectParameter("docno", typeof(int));
    
            var authencaticatedbyParameter = authencaticatedby != null ?
                new ObjectParameter("authencaticatedby", authencaticatedby) :
                new ObjectParameter("authencaticatedby", typeof(string));
    
            var custMobileNoParameter = custMobileNo != null ?
                new ObjectParameter("custMobileNo", custMobileNo) :
                new ObjectParameter("custMobileNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SendOTPToMobile1_Result>("SendOTPToMobile1", compaycodeParameter, branchcodeParameter, computernameParameter, operatorcodeParameter, otpTypeParameter, otpLengthParameter, otpValidityMinutesParameter, docnoParameter, authencaticatedbyParameter, custMobileNoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_SalesDiscountChanges(Nullable<int> estno, string companycode, string branchcode)
        {
            var estnoParameter = estno.HasValue ?
                new ObjectParameter("estno", estno) :
                new ObjectParameter("estno", typeof(int));
    
            var companycodeParameter = companycode != null ?
                new ObjectParameter("companycode", companycode) :
                new ObjectParameter("companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("branchcode", branchcode) :
                new ObjectParameter("branchcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_SalesDiscountChanges", estnoParameter, companycodeParameter, branchcodeParameter);
        }
    
        public virtual ObjectResult<usp_SalesDiscountRevert_Result> usp_SalesDiscountRevert(Nullable<int> estno, string companycode, string branchcode)
        {
            var estnoParameter = estno.HasValue ?
                new ObjectParameter("estno", estno) :
                new ObjectParameter("estno", typeof(int));
    
            var companycodeParameter = companycode != null ?
                new ObjectParameter("companycode", companycode) :
                new ObjectParameter("companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("branchcode", branchcode) :
                new ObjectParameter("branchcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SalesDiscountRevert_Result>("usp_SalesDiscountRevert", estnoParameter, companycodeParameter, branchcodeParameter);
        }
    
        public virtual ObjectResult<usp_GetPickupAssignmentDetails_Result> usp_GetPickupAssignmentDetails(string company_code, string branch_code, Nullable<int> assignment_no, string detailsType)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var assignment_noParameter = assignment_no.HasValue ?
                new ObjectParameter("assignment_no", assignment_no) :
                new ObjectParameter("assignment_no", typeof(int));
    
            var detailsTypeParameter = detailsType != null ?
                new ObjectParameter("detailsType", detailsType) :
                new ObjectParameter("detailsType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPickupAssignmentDetails_Result>("usp_GetPickupAssignmentDetails", company_codeParameter, branch_codeParameter, assignment_noParameter, detailsTypeParameter);
        }
    
        public virtual ObjectResult<GetOrderItemsForPacking_Result> GetOrderItemsForPacking(string company_code, string branch_code, Nullable<int> assignmentNo)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var assignmentNoParameter = assignmentNo.HasValue ?
                new ObjectParameter("AssignmentNo", assignmentNo) :
                new ObjectParameter("AssignmentNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderItemsForPacking_Result>("GetOrderItemsForPacking", company_codeParameter, branch_codeParameter, assignmentNoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_CalculatePurchaseDiscount(Nullable<int> estno, Nullable<decimal> totalSalesAmount, string companycode, string branchcode)
        {
            var estnoParameter = estno.HasValue ?
                new ObjectParameter("estno", estno) :
                new ObjectParameter("estno", typeof(int));
    
            var totalSalesAmountParameter = totalSalesAmount.HasValue ?
                new ObjectParameter("totalSalesAmount", totalSalesAmount) :
                new ObjectParameter("totalSalesAmount", typeof(decimal));
    
            var companycodeParameter = companycode != null ?
                new ObjectParameter("companycode", companycode) :
                new ObjectParameter("companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("branchcode", branchcode) :
                new ObjectParameter("branchcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_CalculatePurchaseDiscount", estnoParameter, totalSalesAmountParameter, companycodeParameter, branchcodeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_SalesDiscountChanges1(Nullable<int> estno, string companycode, string branchcode)
        {
            var estnoParameter = estno.HasValue ?
                new ObjectParameter("estno", estno) :
                new ObjectParameter("estno", typeof(int));
    
            var companycodeParameter = companycode != null ?
                new ObjectParameter("companycode", companycode) :
                new ObjectParameter("companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("branchcode", branchcode) :
                new ObjectParameter("branchcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_SalesDiscountChanges1", estnoParameter, companycodeParameter, branchcodeParameter);
        }
    
        public virtual ObjectResult<usp_SalesDiscountRevert1_Result> usp_SalesDiscountRevert1(Nullable<int> estno, string companycode, string branchcode)
        {
            var estnoParameter = estno.HasValue ?
                new ObjectParameter("estno", estno) :
                new ObjectParameter("estno", typeof(int));
    
            var companycodeParameter = companycode != null ?
                new ObjectParameter("companycode", companycode) :
                new ObjectParameter("companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("branchcode", branchcode) :
                new ObjectParameter("branchcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SalesDiscountRevert1_Result>("usp_SalesDiscountRevert1", estnoParameter, companycodeParameter, branchcodeParameter);
        }
    
        public virtual ObjectResult<usp_createOrderPostingVouchers1_Result> usp_createOrderPostingVouchers1(string companyCode, string branchCode, string orderNo, string receiptNo, ObjectParameter outValue, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_createOrderPostingVouchers1_Result>("usp_createOrderPostingVouchers1", companyCodeParameter, branchCodeParameter, orderNoParameter, receiptNoParameter, outValue, errorMsg);
        }
    
        public virtual int usp_createSubsidiarySalesVouchers_FuncImport(string companyCode, string branchCode, string salesInvoiceNo, ObjectParameter outValue, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var salesInvoiceNoParameter = salesInvoiceNo != null ?
                new ObjectParameter("salesInvoiceNo", salesInvoiceNo) :
                new ObjectParameter("salesInvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_createSubsidiarySalesVouchers_FuncImport", companyCodeParameter, branchCodeParameter, salesInvoiceNoParameter, outValue, errorMsg);
        }
    
        public virtual int usp_createPurchasePostingVouchers_FuncImport(string companyCode, string branchCode, string invoiceNo, string trans_type, ObjectParameter outValue, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var trans_typeParameter = trans_type != null ?
                new ObjectParameter("trans_type", trans_type) :
                new ObjectParameter("trans_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_createPurchasePostingVouchers_FuncImport", companyCodeParameter, branchCodeParameter, invoiceNoParameter, trans_typeParameter, outValue, errorMsg);
        }
    
        public virtual int usp_createOrderPostingVouchers_FuncImport(string companyCode, string branchCode, string orderNo, string receiptNo, ObjectParameter outValue, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_createOrderPostingVouchers_FuncImport", companyCodeParameter, branchCodeParameter, orderNoParameter, receiptNoParameter, outValue, errorMsg);
        }
    
        public virtual int usp_createSRPostingVouchers_FuncImport(string companyCode, string branchCode, string invoiceNo, string trans_type, ObjectParameter outValue, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var trans_typeParameter = trans_type != null ?
                new ObjectParameter("trans_type", trans_type) :
                new ObjectParameter("trans_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_createSRPostingVouchers_FuncImport", companyCodeParameter, branchCodeParameter, invoiceNoParameter, trans_typeParameter, outValue, errorMsg);
        }
    
        public virtual int usp_createRepairPostingVouchers_FuncImport(string companyCode, string branchCode, string repairInvoiceNo, ObjectParameter outValue, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var repairInvoiceNoParameter = repairInvoiceNo != null ?
                new ObjectParameter("repairInvoiceNo", repairInvoiceNo) :
                new ObjectParameter("repairInvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_createRepairPostingVouchers_FuncImport", companyCodeParameter, branchCodeParameter, repairInvoiceNoParameter, outValue, errorMsg);
        }
    
        public virtual int usp_createCreditReceiptPostingVouchers_FuncImport(string companyCode, string branchCode, string creditReceiptNo, ObjectParameter outValue, ObjectParameter errorMsg)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var creditReceiptNoParameter = creditReceiptNo != null ?
                new ObjectParameter("CreditReceiptNo", creditReceiptNo) :
                new ObjectParameter("CreditReceiptNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_createCreditReceiptPostingVouchers_FuncImport", companyCodeParameter, branchCodeParameter, creditReceiptNoParameter, outValue, errorMsg);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_GetCashBackOfferDetails(string companyCode, string branchCode, Nullable<int> docNo, Nullable<decimal> invoiceAmount)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var docNoParameter = docNo.HasValue ?
                new ObjectParameter("docNo", docNo) :
                new ObjectParameter("docNo", typeof(int));
    
            var invoiceAmountParameter = invoiceAmount.HasValue ?
                new ObjectParameter("invoiceAmount", invoiceAmount) :
                new ObjectParameter("invoiceAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_GetCashBackOfferDetails", companyCodeParameter, branchCodeParameter, docNoParameter, invoiceAmountParameter);
        }
    
        public virtual ObjectResult<usp_GetSRItemsForIssue_Result> usp_GetSRItemsForIssue(string company_code, string branch_code, string gs_code, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSRItemsForIssue_Result>("usp_GetSRItemsForIssue", company_codeParameter, branch_codeParameter, gs_codeParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<usp_GetSRStoneItemsForIssue_Result> usp_GetSRStoneItemsForIssue(string company_code, string branch_code, string gs_code, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSRStoneItemsForIssue_Result>("usp_GetSRStoneItemsForIssue", company_codeParameter, branch_codeParameter, gs_codeParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<usp_GetSRItemsForIssue1_Result> usp_GetSRItemsForIssue1(string company_code, string branch_code, string gs_code, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSRItemsForIssue1_Result>("usp_GetSRItemsForIssue1", company_codeParameter, branch_codeParameter, gs_codeParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<usp_GetSRStoneItemsForIssue1_Result> usp_GetSRStoneItemsForIssue1(string company_code, string branch_code, string gs_code, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSRStoneItemsForIssue1_Result>("usp_GetSRStoneItemsForIssue1", company_codeParameter, branch_codeParameter, gs_codeParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<usp_GetOPGItemsForIssue_Result> usp_GetOPGItemsForIssue(string company_code, string branch_code, string gs_code, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOPGItemsForIssue_Result>("usp_GetOPGItemsForIssue", company_codeParameter, branch_codeParameter, gs_codeParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<usp_GetOPGStoneItemsForIssue_Result> usp_GetOPGStoneItemsForIssue(string company_code, string branch_code, string gs_code, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOPGStoneItemsForIssue_Result>("usp_GetOPGStoneItemsForIssue", company_codeParameter, branch_codeParameter, gs_codeParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<usp_GetSRItemsToBeBarcoded_Result> usp_GetSRItemsToBeBarcoded(string companyCode, string branchCode)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSRItemsToBeBarcoded_Result>("usp_GetSRItemsToBeBarcoded", companyCodeParameter, branchCodeParameter);
        }
    
        public virtual ObjectResult<usp_LoadTDS_Result> usp_LoadTDS(string companycode, string branchcode, string loadtype)
        {
            var companycodeParameter = companycode != null ?
                new ObjectParameter("Companycode", companycode) :
                new ObjectParameter("Companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("Branchcode", branchcode) :
                new ObjectParameter("Branchcode", typeof(string));
    
            var loadtypeParameter = loadtype != null ?
                new ObjectParameter("Loadtype", loadtype) :
                new ObjectParameter("Loadtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LoadTDS_Result>("usp_LoadTDS", companycodeParameter, branchcodeParameter, loadtypeParameter);
        }
    
        public virtual ObjectResult<usp_SupplyMetalTypes_Result> usp_SupplyMetalTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SupplyMetalTypes_Result>("usp_SupplyMetalTypes");
        }
    
        public virtual ObjectResult<usp_OPG_StockIssue_details_Branch_Result> usp_OPG_StockIssue_details_Branch(string company_code, string branch_code, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string gs_code)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OPG_StockIssue_details_Branch_Result>("usp_OPG_StockIssue_details_Branch", company_codeParameter, branch_codeParameter, startDateParameter, endDateParameter, gs_codeParameter);
        }
    
        public virtual ObjectResult<usp_OPG_StockIssue_stone_details_Branch_Result> usp_OPG_StockIssue_stone_details_Branch(string company_code, string branch_code, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string gs_code)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var gs_codeParameter = gs_code != null ?
                new ObjectParameter("gs_code", gs_code) :
                new ObjectParameter("gs_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OPG_StockIssue_stone_details_Branch_Result>("usp_OPG_StockIssue_stone_details_Branch", company_codeParameter, branch_codeParameter, startDateParameter, endDateParameter, gs_codeParameter);
        }
    
        public virtual ObjectResult<usp_getorderissuedetails_Result> usp_getorderissuedetails(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string companycode, string branchcode, string gscode, string ordertype, string countercode, string karat)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var companycodeParameter = companycode != null ?
                new ObjectParameter("companycode", companycode) :
                new ObjectParameter("companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("branchcode", branchcode) :
                new ObjectParameter("branchcode", typeof(string));
    
            var gscodeParameter = gscode != null ?
                new ObjectParameter("gscode", gscode) :
                new ObjectParameter("gscode", typeof(string));
    
            var ordertypeParameter = ordertype != null ?
                new ObjectParameter("ordertype", ordertype) :
                new ObjectParameter("ordertype", typeof(string));
    
            var countercodeParameter = countercode != null ?
                new ObjectParameter("countercode", countercode) :
                new ObjectParameter("countercode", typeof(string));
    
            var karatParameter = karat != null ?
                new ObjectParameter("karat", karat) :
                new ObjectParameter("karat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getorderissuedetails_Result>("usp_getorderissuedetails", startdateParameter, enddateParameter, companycodeParameter, branchcodeParameter, gscodeParameter, ordertypeParameter, countercodeParameter, karatParameter);
        }
    
        public virtual ObjectResult<usp_getorderStonedetails_Result> usp_getorderStonedetails(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string companycode, string branchcode, string gscode, string ordertype, string countercode, string karat)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var companycodeParameter = companycode != null ?
                new ObjectParameter("companycode", companycode) :
                new ObjectParameter("companycode", typeof(string));
    
            var branchcodeParameter = branchcode != null ?
                new ObjectParameter("branchcode", branchcode) :
                new ObjectParameter("branchcode", typeof(string));
    
            var gscodeParameter = gscode != null ?
                new ObjectParameter("gscode", gscode) :
                new ObjectParameter("gscode", typeof(string));
    
            var ordertypeParameter = ordertype != null ?
                new ObjectParameter("ordertype", ordertype) :
                new ObjectParameter("ordertype", typeof(string));
    
            var countercodeParameter = countercode != null ?
                new ObjectParameter("countercode", countercode) :
                new ObjectParameter("countercode", typeof(string));
    
            var karatParameter = karat != null ?
                new ObjectParameter("karat", karat) :
                new ObjectParameter("karat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getorderStonedetails_Result>("usp_getorderStonedetails", startdateParameter, enddateParameter, companycodeParameter, branchcodeParameter, gscodeParameter, ordertypeParameter, countercodeParameter, karatParameter);
        }
    
        public virtual ObjectResult<usp_OrderItems_ShippingDetails_Result> usp_OrderItems_ShippingDetails(string company_code, string branch_code, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> assignmentNo)
        {
            var company_codeParameter = company_code != null ?
                new ObjectParameter("company_code", company_code) :
                new ObjectParameter("company_code", typeof(string));
    
            var branch_codeParameter = branch_code != null ?
                new ObjectParameter("branch_code", branch_code) :
                new ObjectParameter("branch_code", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var assignmentNoParameter = assignmentNo.HasValue ?
                new ObjectParameter("AssignmentNo", assignmentNo) :
                new ObjectParameter("AssignmentNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OrderItems_ShippingDetails_Result>("usp_OrderItems_ShippingDetails", company_codeParameter, branch_codeParameter, fromDateParameter, toDateParameter, assignmentNoParameter);
        }
    
        public virtual ObjectResult<usp_GetOrdersTobeShipped_Result> usp_GetOrdersTobeShipped(string companyCode, string branchCode, Nullable<int> marketplaceId)
        {
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            var branchCodeParameter = branchCode != null ?
                new ObjectParameter("branchCode", branchCode) :
                new ObjectParameter("branchCode", typeof(string));
    
            var marketplaceIdParameter = marketplaceId.HasValue ?
                new ObjectParameter("marketplaceId", marketplaceId) :
                new ObjectParameter("marketplaceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrdersTobeShipped_Result>("usp_GetOrdersTobeShipped", companyCodeParameter, branchCodeParameter, marketplaceIdParameter);
        }
    }
}
