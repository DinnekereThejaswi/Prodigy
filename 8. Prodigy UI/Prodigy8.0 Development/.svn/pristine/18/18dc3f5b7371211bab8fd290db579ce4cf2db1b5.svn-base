{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../src/app/lib/ngx-select/ngx-select.classes.ts","../src/app/lib/ngx-select/ngx-templates.directive.ts","../src/app/lib/ngx-select/ngx-select.component.ts","../src/app/lib/ngx-select/ngx-select.module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","escapeString","escapeStringNs","NgxSelectOption","text","disabled","data","_parent","this","type","cacheRenderedText","defineProperty","prototype","renderText","sanitizer","highlightText","cacheHighlightText","bypassSecurityTrustHtml","replace","RegExp","NgxSelectOptGroup","label","options","filter","callbackFn","optionsFiltered","option","template","Directive","args","selector","TemplateRef","ENavigation","NGX_SELECT_OPTIONS","InjectionToken","propertyExists","obj","propertyName","NgxSelectComponent","iterableDiffers","cd","defaultOptions","cacheExternalValue","_this","optionValueField","optionTextField","optGroupLabelField","optGroupOptionsField","multiple","allowClear","placeholder","noAutoComplete","defaultValue","autoSelectSingleOption","autoClearSearch","noResultsFound","size","autoActiveOnMouseEnter","showOptionNotFoundForEmptyItems","isFocused","keepSelectMenuOpened","autocomplete","dropDownMenuOtherClasses","keyCodeToRemoveSelected","keyCodeToOptionsOpen","keyCodeToOptionsClose","keyCodeToOptionsSelect","keyCodeToNavigateFirst","keyCodeToNavigatePrevious","keyCodeToNavigateNext","keyCodeToNavigateLast","typed","EventEmitter","focus","blur","open","close","select","remove","navigated","selectionChanges","optionsOpened","actualValue","subjOptions","BehaviorSubject","subjSearchText","subjOptionsSelected","subjExternalValue","subjDefaultValue","subjRegisterOnChange","Subject","_focusToInput","onChange","v","onTouched","assign","itemsDiffer","find","defaultValueDiffer","subscribe","emit","subjActualValue","combineLatest","merge","pipe","map","concat","_a","_b","eVal","dVal","newVal","isEqual","length","distinctUntilChanged","x","y","share","mergeMap","from","of","EMPTY","toArray","optionsFlat","optionsSelected","forEach","selectedOption","keepSelectedItems","optionValues_1","keptSelectedOptions","selOption","indexOf","apply","arguments","__spread","markForCheck","selectedOptions","search","filterOptions","highlightedText","highlightOption","subOption","cacheOptionsFilteredFlat","navigateOption","firstIfOptionActiveInvisible","optionsFilteredFlat","flatOptions","inputElRef","nativeElement","setFormControlSize","otherClassNames","useFormControl","formControlExtraClasses","form-control-sm input-sm","form-control-lg input-lg","setBtnSize","btn-sm","btn-lg","mainClicked","event","clickedSelectComponent","documentClick","optionsClose","detectChanges","tap","navigation","newActiveIdx","index","activeOption","filteredOptionList","first","previous","optionActive","last","firstSelected","idxOfOptionActive","newNavigated","optionActivate","ngDoCheck","diff","items","buildOptions","defVal","ngAfterContentChecked","checkInputVisibility","document","activeElement","choiceMenuElRef","element","querySelector","offsetHeight","ensureVisibleElement","ngOnDestroy","detach","canClearNotMultiple","focusToInput","inputKeyDown","keysForOpenedState","keysForClosedState","code","preventDefault","stopPropagation","optionSelect","optionsOpen","optionRemove","trackByOption","inputKeyUp","inputClick","sanitize","html","active","onMouseEnter","regExp","filterOption","searchCallback","test","subOp","cacheElementOffsetTop","offsetTop","container","scrollTop","clientHeight","showChoiceMenu","result","Array","isArray","item","optGroup_1","opt","buildOption","parent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","Component","changeDetection","ChangeDetectionStrategy","OnPush","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","IterableDiffers","DomSanitizer","ChangeDetectorRef","Inject","Optional","Input","Output","ViewChild","static","ContentChild","NgxSelectOptionDirective","read","NgxSelectOptionSelectedDirective","NgxSelectOptionNotFoundDirective","HostListener","NgxSelectModule","forRoot","ngModule","useValue","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport * as escapeStringNs from 'escape-string-regexp';\nimport { INgxSelectOptGroup, INgxSelectOption, INgxSelectOptionBase, TNgxSelectOptionType } from './ngx-select.interfaces';\n\nconst escapeString = escapeStringNs;\n\nexport class NgxSelectOption implements INgxSelectOption, INgxSelectOptionBase {\n    public readonly type: TNgxSelectOptionType = 'option';\n\n    public highlightedText: SafeHtml;\n    public active: boolean;\n\n    constructor(public value: number | string,\n                public text: string,\n                public disabled: boolean,\n                public data: any,\n                private _parent: NgxSelectOptGroup = null) {\n    }\n\n    public get parent(): NgxSelectOptGroup {\n        return this._parent;\n    }\n\n    private cacheHighlightText: string;\n    private cacheRenderedText: SafeHtml = null;\n\n    public renderText(sanitizer: DomSanitizer, highlightText: string): SafeHtml {\n        if (this.cacheHighlightText !== highlightText || this.cacheRenderedText === null) {\n            this.cacheHighlightText = highlightText;\n            if (this.cacheHighlightText) {\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml((this.text + '').replace(\n                    new RegExp(escapeString(this.cacheHighlightText), 'gi'), '<strong>$&</strong>'\n                ));\n            } else {\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml(this.text);\n            }\n        }\n        return this.cacheRenderedText;\n    }\n}\n\nexport class NgxSelectOptGroup implements INgxSelectOptGroup, INgxSelectOptionBase {\n    public readonly type: TNgxSelectOptionType = 'optgroup';\n\n    public optionsFiltered: NgxSelectOption[];\n\n    constructor(public label: string,\n                public options: NgxSelectOption[] = []) {\n        this.filter(() => true);\n    }\n\n    public filter(callbackFn: (value: NgxSelectOption) => any): void {\n        this.optionsFiltered = this.options.filter((option: NgxSelectOption) => callbackFn(option));\n    }\n}\n\nexport type TSelectOption = NgxSelectOptGroup | NgxSelectOption;\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[ngx-select-option]'})\nexport class NgxSelectOptionDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n@Directive({selector: '[ngx-select-option-selected]'})\nexport class NgxSelectOptionSelectedDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n@Directive({selector: '[ngx-select-option-not-found]'})\nexport class NgxSelectOptionNotFoundDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n","import {\n    AfterContentChecked,\n    DoCheck,\n    Input,\n    Output,\n    ViewChild,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    IterableDiffer,\n    IterableDiffers,\n    ChangeDetectorRef,\n    ContentChild,\n    TemplateRef,\n    Optional,\n    Inject,\n    InjectionToken,\n    ChangeDetectionStrategy,\n    OnDestroy\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Observable, Subject, BehaviorSubject, EMPTY, of, from, merge, combineLatest } from 'rxjs';\nimport { tap, filter, map, share, toArray, distinctUntilChanged, mergeMap } from 'rxjs/operators';\nimport isEqual from 'lodash.isequal';\nimport * as escapeStringNs from 'escape-string-regexp';\nimport { NgxSelectOptGroup, NgxSelectOption, TSelectOption } from './ngx-select.classes';\nimport {\n    NgxSelectOptionDirective,\n    NgxSelectOptionNotFoundDirective,\n    NgxSelectOptionSelectedDirective\n} from './ngx-templates.directive';\nimport { INgxOptionNavigated, INgxSelectOption, INgxSelectOptions } from './ngx-select.interfaces';\n\nconst escapeString = escapeStringNs;\n\nexport const NGX_SELECT_OPTIONS = new InjectionToken<any>('NGX_SELECT_OPTIONS');\n\nexport interface INgxSelectComponentMouseEvent extends MouseEvent {\n    clickedSelectComponent?: NgxSelectComponent;\n}\n\nenum ENavigation {\n    first, previous, next, last,\n    firstSelected, firstIfOptionActiveInvisible,\n}\n\nfunction propertyExists(obj: object, propertyName: string) {\n    return propertyName in obj;\n}\n\n@Component({\n    selector: 'ngx-select',\n    templateUrl: './ngx-select.component.html',\n    styleUrls: ['./ngx-select.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxSelectComponent),\n            multi: true,\n        },\n    ],\n})\nexport class NgxSelectComponent implements INgxSelectOptions, ControlValueAccessor, DoCheck, AfterContentChecked, OnDestroy {\n    @Input() public items: any[];\n    @Input() public optionValueField = 'id';\n    @Input() public optionTextField = 'text';\n    @Input() public optGroupLabelField = 'label';\n    @Input() public optGroupOptionsField = 'options';\n    @Input() public multiple = false;\n    @Input() public allowClear = false;\n    @Input() public placeholder = '';\n    @Input() public noAutoComplete = false;\n    @Input() public disabled = false;\n    @Input() public defaultValue: any[] = [];\n    @Input() public autoSelectSingleOption = false;\n    @Input() public autoClearSearch = false;\n    @Input() public noResultsFound = 'No results found';\n    @Input() public keepSelectedItems: false;\n    @Input() public size: 'small' | 'default' | 'large' = 'default';\n    @Input() public searchCallback: (search: string, item: INgxSelectOption) => boolean;\n    @Input() public autoActiveOnMouseEnter = true;\n    @Input() public showOptionNotFoundForEmptyItems = false;\n    @Input() public isFocused = false;\n    @Input() public keepSelectMenuOpened = false;\n    @Input() public autocomplete = 'off';\n    @Input() public dropDownMenuOtherClasses = '';\n    public keyCodeToRemoveSelected = 'Delete';\n    public keyCodeToOptionsOpen = ['Enter', 'NumpadEnter'];\n    public keyCodeToOptionsClose = 'Escape';\n    public keyCodeToOptionsSelect = ['Enter', 'NumpadEnter'];\n    public keyCodeToNavigateFirst = 'ArrowLeft';\n    public keyCodeToNavigatePrevious = 'ArrowUp';\n    public keyCodeToNavigateNext = 'ArrowDown';\n    public keyCodeToNavigateLast = 'ArrowRight';\n\n    @Output() public typed = new EventEmitter<string>();\n    @Output() public focus = new EventEmitter<void>();\n    @Output() public blur = new EventEmitter<void>();\n    @Output() public open = new EventEmitter<void>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public select = new EventEmitter<any>();\n    @Output() public remove = new EventEmitter<any>();\n    @Output() public navigated = new EventEmitter<INgxOptionNavigated>();\n    @Output() public selectionChanges = new EventEmitter<INgxSelectOption[]>();\n\n    @ViewChild('main', {static: true}) protected mainElRef: ElementRef;\n    @ViewChild('input') public inputElRef: ElementRef;\n    @ViewChild('choiceMenu') protected choiceMenuElRef: ElementRef;\n\n    @ContentChild(NgxSelectOptionDirective, {read: TemplateRef, static: true}) public templateOption: NgxSelectOptionDirective;\n\n    @ContentChild(NgxSelectOptionSelectedDirective, {read: TemplateRef, static: true})\n    public templateSelectedOption: NgxSelectOptionSelectedDirective;\n\n    @ContentChild(NgxSelectOptionNotFoundDirective, {read: TemplateRef, static: true})\n    public templateOptionNotFound: NgxSelectOptionNotFoundDirective;\n\n    public optionsOpened = false;\n    public optionsFiltered: TSelectOption[];\n\n    private optionActive: NgxSelectOption;\n    private itemsDiffer: IterableDiffer<any>;\n    private defaultValueDiffer: IterableDiffer<any[]>;\n    private actualValue: any[] = [];\n\n    public subjOptions = new BehaviorSubject<TSelectOption[]>([]);\n    private subjSearchText = new BehaviorSubject<string>('');\n\n    private subjOptionsSelected = new BehaviorSubject<NgxSelectOption[]>([]);\n    private subjExternalValue = new BehaviorSubject<any[]>([]);\n    private subjDefaultValue = new BehaviorSubject<any[]>([]);\n    private subjRegisterOnChange = new Subject();\n\n    private cacheOptionsFilteredFlat: NgxSelectOption[];\n    private cacheElementOffsetTop: number;\n\n    private _focusToInput = false;\n\n    /** @internal */\n    public get inputText() {\n        if (this.inputElRef && this.inputElRef.nativeElement) {\n            return this.inputElRef.nativeElement.value;\n        }\n        return '';\n    }\n\n    constructor(iterableDiffers: IterableDiffers, private sanitizer: DomSanitizer, private cd: ChangeDetectorRef,\n                @Inject(NGX_SELECT_OPTIONS) @Optional() defaultOptions: INgxSelectOptions) {\n        Object.assign(this, defaultOptions);\n\n        // DIFFERS\n        this.itemsDiffer = iterableDiffers.find([]).create<any>(null);\n        this.defaultValueDiffer = iterableDiffers.find([]).create<any>(null);\n\n        // OBSERVERS\n        this.typed.subscribe((text: string) => this.subjSearchText.next(text));\n        this.subjOptionsSelected.subscribe((options: NgxSelectOption[]) => this.selectionChanges.emit(options));\n        let cacheExternalValue: any[];\n\n        // Get actual value\n        const subjActualValue = combineLatest([\n            merge(\n                this.subjExternalValue.pipe(map(\n                    (v: any[]) => cacheExternalValue = v === null ? [] : [].concat(v)\n                )),\n                this.subjOptionsSelected.pipe(map(\n                    (options: NgxSelectOption[]) => options.map((o: NgxSelectOption) => o.value)\n                ))\n            ),\n            this.subjDefaultValue,\n        ]).pipe(\n            map(([eVal, dVal]: [any[], any[]]) => {\n                const newVal = isEqual(eVal, dVal) ? [] : eVal;\n                return newVal.length ? newVal : dVal;\n            }),\n            distinctUntilChanged((x, y) => isEqual(x, y)),\n            share()\n        );\n\n        // Export actual value\n        combineLatest([subjActualValue, this.subjRegisterOnChange])\n            .pipe(map(([actualValue]: [any[], any[]]) => actualValue))\n            .subscribe((actualValue: any[]) => {\n                this.actualValue = actualValue;\n                if (!isEqual(actualValue, cacheExternalValue)) {\n                    cacheExternalValue = actualValue;\n                    if (this.multiple) {\n                        this.onChange(actualValue);\n                    } else {\n                        this.onChange(actualValue.length ? actualValue[0] : null);\n                    }\n                }\n            });\n\n        // Correct selected options when the options changed\n        combineLatest([\n            this.subjOptions.pipe(\n                mergeMap((options: TSelectOption[]) => from(options).pipe(\n                    mergeMap((option: TSelectOption) => option instanceof NgxSelectOption\n                        ? of(option)\n                        : (option instanceof NgxSelectOptGroup ? from(option.options) : EMPTY)\n                    ),\n                    toArray()\n                ))\n            ),\n            subjActualValue,\n        ]).pipe(\n            map(([optionsFlat, actualValue]: [NgxSelectOption[], any[]]) => {\n                const optionsSelected = [];\n\n                actualValue.forEach((value: any) => {\n                    const selectedOption = optionsFlat.find((option: NgxSelectOption) => option.value === value);\n                    if (selectedOption) {\n                        optionsSelected.push(selectedOption);\n                    }\n                });\n\n                if (this.keepSelectedItems) {\n                    const optionValues = optionsSelected.map((option: NgxSelectOption) => option.value);\n                    const keptSelectedOptions = this.subjOptionsSelected.value\n                        .filter((selOption: NgxSelectOption) => optionValues.indexOf(selOption.value) === -1);\n                    optionsSelected.push(...keptSelectedOptions);\n                }\n\n                if (!isEqual(optionsSelected, this.subjOptionsSelected.value)) {\n                    this.subjOptionsSelected.next(optionsSelected);\n                    this.cd.markForCheck();\n                }\n\n            })\n        ).subscribe();\n\n        // Ensure working filter by a search text\n        combineLatest([this.subjOptions, this.subjOptionsSelected, this.subjSearchText]).pipe(\n            map(([options, selectedOptions, search]: [TSelectOption[], NgxSelectOption[], string]) => {\n                this.optionsFiltered = this.filterOptions(search, options, selectedOptions).map(option => {\n                    if (option instanceof NgxSelectOption) {\n                        option.highlightedText = this.highlightOption(option);\n                    } else if (option instanceof NgxSelectOptGroup) {\n                        option.options.map(subOption => {\n                            subOption.highlightedText = this.highlightOption(subOption);\n                            return subOption;\n                        });\n                    }\n                    return option;\n                });\n                this.cacheOptionsFilteredFlat = null;\n                this.navigateOption(ENavigation.firstIfOptionActiveInvisible);\n                this.cd.markForCheck();\n                return selectedOptions;\n            }),\n            mergeMap((selectedOptions: NgxSelectOption[]) => this.optionsFilteredFlat().pipe(filter(\n                (flatOptions: NgxSelectOption[]) => this.autoSelectSingleOption && flatOptions.length === 1 && !selectedOptions.length\n            )))\n        ).subscribe((flatOptions: NgxSelectOption[]) => {\n            this.subjOptionsSelected.next(flatOptions);\n            this.cd.markForCheck();\n        });\n    }\n\n    public setFormControlSize(otherClassNames: object = {}, useFormControl: boolean = true) {\n        const formControlExtraClasses = useFormControl ? {\n            'form-control-sm input-sm': this.size === 'small',\n            'form-control-lg input-lg': this.size === 'large',\n        } : {};\n        return Object.assign(formControlExtraClasses, otherClassNames);\n    }\n\n    public setBtnSize() {\n        return {'btn-sm': this.size === 'small', 'btn-lg': this.size === 'large'};\n    }\n\n    public get optionsSelected(): NgxSelectOption[] {\n        return this.subjOptionsSelected.value;\n    }\n\n    public mainClicked(event: INgxSelectComponentMouseEvent) {\n        event.clickedSelectComponent = this;\n        if (!this.isFocused) {\n            this.isFocused = true;\n            this.focus.emit();\n        }\n    }\n\n    @HostListener('document:focusin', ['$event'])\n    @HostListener('document:click', ['$event'])\n    public documentClick(event: INgxSelectComponentMouseEvent) {\n        if (event.clickedSelectComponent !== this) {\n            if (this.optionsOpened) {\n                this.optionsClose();\n                this.cd.detectChanges(); // fix error because of delay between different events\n            }\n            if (this.isFocused) {\n                this.isFocused = false;\n                this.blur.emit();\n            }\n        }\n    }\n\n    private optionsFilteredFlat(): Observable<NgxSelectOption[]> {\n        if (this.cacheOptionsFilteredFlat) {\n            return of(this.cacheOptionsFilteredFlat);\n        }\n\n        return from(this.optionsFiltered).pipe(\n            mergeMap<TSelectOption, any>((option: TSelectOption) =>\n                option instanceof NgxSelectOption ? of(option) :\n                    (option instanceof NgxSelectOptGroup ? from(option.optionsFiltered) : EMPTY)\n            ),\n            filter((optionsFilteredFlat: NgxSelectOption) => !optionsFilteredFlat.disabled),\n            toArray(),\n            tap((optionsFilteredFlat: NgxSelectOption[]) => this.cacheOptionsFilteredFlat = optionsFilteredFlat)\n        );\n    }\n\n    private navigateOption(navigation: ENavigation) {\n        this.optionsFilteredFlat().pipe(\n            map<NgxSelectOption[], INgxOptionNavigated>((options: NgxSelectOption[]) => {\n                const navigated: INgxOptionNavigated = {index: -1, activeOption: null, filteredOptionList: options};\n                let newActiveIdx;\n                switch (navigation) {\n                    case ENavigation.first:\n                        navigated.index = 0;\n                        break;\n                    case ENavigation.previous:\n                        newActiveIdx = options.indexOf(this.optionActive) - 1;\n                        navigated.index = newActiveIdx >= 0 ? newActiveIdx : options.length - 1;\n                        break;\n                    case ENavigation.next:\n                        newActiveIdx = options.indexOf(this.optionActive) + 1;\n                        navigated.index = newActiveIdx < options.length ? newActiveIdx : 0;\n                        break;\n                    case ENavigation.last:\n                        navigated.index = options.length - 1;\n                        break;\n                    case ENavigation.firstSelected:\n                        if (this.subjOptionsSelected.value.length) {\n                            navigated.index = options.indexOf(this.subjOptionsSelected.value[0]);\n                        }\n                        break;\n                    case ENavigation.firstIfOptionActiveInvisible:\n                        let idxOfOptionActive = -1;\n                        if (this.optionActive) {\n                            idxOfOptionActive = options.indexOf(options.find(x => x.value === this.optionActive.value));\n                        }\n                        navigated.index = idxOfOptionActive > 0 ? idxOfOptionActive : 0;\n                        break;\n                }\n                navigated.activeOption = options[navigated.index];\n                return navigated;\n            })\n        ).subscribe((newNavigated: INgxOptionNavigated) => this.optionActivate(newNavigated));\n    }\n\n    public ngDoCheck(): void {\n        if (this.itemsDiffer.diff(this.items)) {\n            this.subjOptions.next(this.buildOptions(this.items));\n        }\n\n        const defVal = this.defaultValue ? [].concat(this.defaultValue) : [];\n        if (this.defaultValueDiffer.diff(defVal)) {\n            this.subjDefaultValue.next(defVal);\n        }\n    }\n\n    public ngAfterContentChecked(): void {\n        if (this._focusToInput && this.checkInputVisibility() && this.inputElRef &&\n            this.inputElRef.nativeElement !== document.activeElement) {\n            this._focusToInput = false;\n            this.inputElRef.nativeElement.focus();\n        }\n\n        if (this.choiceMenuElRef) {\n            const ulElement = this.choiceMenuElRef.nativeElement as HTMLUListElement;\n            const element = ulElement.querySelector('a.ngx-select__item_active.active') as HTMLLinkElement;\n\n            if (element && element.offsetHeight > 0) {\n                this.ensureVisibleElement(element);\n            }\n\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.cd.detach();\n    }\n\n    public canClearNotMultiple(): boolean {\n        return this.allowClear && !!this.subjOptionsSelected.value.length &&\n            (!this.subjDefaultValue.value.length || this.subjDefaultValue.value[0] !== this.actualValue[0]);\n    }\n\n    public focusToInput(): void {\n        this._focusToInput = true;\n    }\n\n    public inputKeyDown(event: KeyboardEvent) {\n        const keysForOpenedState = [].concat(\n            this.keyCodeToOptionsSelect,\n            this.keyCodeToNavigateFirst,\n            this.keyCodeToNavigatePrevious,\n            this.keyCodeToNavigateNext,\n            this.keyCodeToNavigateLast\n        );\n        const keysForClosedState = [].concat(this.keyCodeToOptionsOpen, this.keyCodeToRemoveSelected);\n\n        if (this.optionsOpened && keysForOpenedState.indexOf(event.code) !== -1) {\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.code) {\n                case ([].concat(this.keyCodeToOptionsSelect).indexOf(event.code) + 1) && event.code:\n                    this.optionSelect(this.optionActive);\n                    this.navigateOption(ENavigation.next);\n                    break;\n                case this.keyCodeToNavigateFirst:\n                    this.navigateOption(ENavigation.first);\n                    break;\n                case this.keyCodeToNavigatePrevious:\n                    this.navigateOption(ENavigation.previous);\n                    break;\n                case this.keyCodeToNavigateLast:\n                    this.navigateOption(ENavigation.last);\n                    break;\n                case this.keyCodeToNavigateNext:\n                    this.navigateOption(ENavigation.next);\n                    break;\n            }\n        } else if (!this.optionsOpened && keysForClosedState.indexOf(event.code) !== -1) {\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.code) {\n                case ([].concat(this.keyCodeToOptionsOpen).indexOf(event.code) + 1) && event.code:\n                    this.optionsOpen();\n                    break;\n                case this.keyCodeToRemoveSelected:\n                    if (this.multiple || this.canClearNotMultiple()) {\n                        this.optionRemove(this.subjOptionsSelected.value[this.subjOptionsSelected.value.length - 1], event);\n                    }\n                    break;\n            }\n        }\n    }\n\n    public trackByOption(index: number, option: TSelectOption) {\n        return option instanceof NgxSelectOption ? option.value :\n            (option instanceof NgxSelectOptGroup ? option.label : option);\n    }\n\n    public checkInputVisibility(): boolean {\n        return (this.multiple === true) || (this.optionsOpened && !this.noAutoComplete);\n    }\n\n    /** @internal */\n    public inputKeyUp(value: string = '', event: KeyboardEvent) {\n        if (event.code === this.keyCodeToOptionsClose) {\n            this.optionsClose(/*true*/);\n        } else if (this.optionsOpened && (['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowDown'].indexOf(event.code) === -1)/*ignore arrows*/) {\n            this.typed.emit(value);\n        } else if (!this.optionsOpened && value) {\n            this.optionsOpen(value);\n        }\n    }\n\n    /** @internal */\n    public inputClick(value: string = '') {\n        if (!this.optionsOpened) {\n            this.optionsOpen(value);\n        }\n    }\n\n    /** @internal */\n    public sanitize(html: string): SafeHtml {\n        return html ? this.sanitizer.bypassSecurityTrustHtml(html) : null;\n    }\n\n    /** @internal */\n    public highlightOption(option: NgxSelectOption): SafeHtml {\n        if (this.inputElRef) {\n            return option.renderText(this.sanitizer, this.inputElRef.nativeElement.value);\n        }\n        return option.renderText(this.sanitizer, '');\n    }\n\n    /** @internal */\n    public optionSelect(option: NgxSelectOption, event: Event = null): void {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (option && !option.disabled) {\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).concat([option]));\n            this.select.emit(option.value);\n            if (!this.keepSelectMenuOpened) {\n                this.optionsClose(/*true*/);\n            }\n            this.onTouched();\n        }\n    }\n\n    /** @internal */\n    public optionRemove(option: NgxSelectOption, event: Event): void {\n        if (!this.disabled && option) {\n            event.stopPropagation();\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).filter(o => o !== option));\n            this.remove.emit(option.value);\n        }\n    }\n\n    /** @internal */\n    public optionActivate(navigated: INgxOptionNavigated): void {\n        if ((this.optionActive !== navigated.activeOption) &&\n            (!navigated.activeOption || !navigated.activeOption.disabled)) {\n            if (this.optionActive) {\n                this.optionActive.active = false;\n            }\n\n            this.optionActive = navigated.activeOption;\n\n            if (this.optionActive) {\n                this.optionActive.active = true;\n            }\n            this.navigated.emit(navigated);\n            this.cd.detectChanges();\n        }\n    }\n\n    /** @internal */\n    public onMouseEnter(navigated: INgxOptionNavigated): void {\n        if (this.autoActiveOnMouseEnter) {\n            this.optionActivate(navigated);\n        }\n    }\n\n    private filterOptions(search: string, options: TSelectOption[], selectedOptions: NgxSelectOption[]): TSelectOption[] {\n        const regExp = new RegExp(escapeString(search), 'i');\n        const filterOption = (option: NgxSelectOption) => {\n            if (this.searchCallback) {\n                return this.searchCallback(search, option);\n            }\n            return (!search || regExp.test(option.text)) && (!this.multiple || selectedOptions.indexOf(option) === -1);\n        };\n\n        return options.filter((option: TSelectOption) => {\n            if (option instanceof NgxSelectOption) {\n                return filterOption(option as NgxSelectOption);\n            } else if (option instanceof NgxSelectOptGroup) {\n                const subOp = option as NgxSelectOptGroup;\n                subOp.filter((subOption: NgxSelectOption) => filterOption(subOption));\n                return subOp.optionsFiltered.length;\n            }\n        });\n    }\n\n    private ensureVisibleElement(element: HTMLElement) {\n        if (this.choiceMenuElRef && this.cacheElementOffsetTop !== element.offsetTop) {\n            this.cacheElementOffsetTop = element.offsetTop;\n            const container: HTMLElement = this.choiceMenuElRef.nativeElement;\n            if (this.cacheElementOffsetTop < container.scrollTop) {\n                container.scrollTop = this.cacheElementOffsetTop;\n            } else if (this.cacheElementOffsetTop + element.offsetHeight > container.scrollTop + container.clientHeight) {\n                container.scrollTop = this.cacheElementOffsetTop + element.offsetHeight - container.clientHeight;\n            }\n        }\n    }\n\n    public showChoiceMenu(): boolean {\n        return this.optionsOpened && (!!this.subjOptions.value.length || this.showOptionNotFoundForEmptyItems);\n    }\n\n    public optionsOpen(search: string = '') {\n        if (!this.disabled) {\n            this.optionsOpened = true;\n            this.subjSearchText.next(search);\n            if (!this.multiple && this.subjOptionsSelected.value.length) {\n                this.navigateOption(ENavigation.firstSelected);\n            } else {\n                this.navigateOption(ENavigation.first);\n            }\n            this.focusToInput();\n            this.open.emit();\n            this.cd.markForCheck();\n        }\n    }\n\n    public optionsClose(/*focusToHost: boolean = false*/) {\n        this.optionsOpened = false;\n        // if (focusToHost) {\n        //     const x = window.scrollX, y = window.scrollY;\n        //     this.mainElRef.nativeElement.focus();\n        //     window.scrollTo(x, y);\n        // }\n        this.close.emit();\n\n        if (this.autoClearSearch && this.multiple && this.inputElRef) {\n            this.inputElRef.nativeElement.value = null;\n        }\n    }\n\n    private buildOptions(data: any[]): Array<NgxSelectOption | NgxSelectOptGroup> {\n        const result: Array<NgxSelectOption | NgxSelectOptGroup> = [];\n        if (Array.isArray(data)) {\n            data.forEach((item: any) => {\n                const isOptGroup = typeof item === 'object' && item !== null &&\n                    propertyExists(item, this.optGroupLabelField) && propertyExists(item, this.optGroupOptionsField) &&\n                    Array.isArray(item[this.optGroupOptionsField]);\n                if (isOptGroup) {\n                    const optGroup = new NgxSelectOptGroup(item[this.optGroupLabelField]);\n                    item[this.optGroupOptionsField].forEach((subOption: NgxSelectOption) => {\n                        const opt = this.buildOption(subOption, optGroup);\n                        if (opt) {\n                            optGroup.options.push(opt);\n                        }\n                    });\n                    result.push(optGroup);\n                } else {\n                    const option = this.buildOption(item, null);\n                    if (option) {\n                        result.push(option);\n                    }\n                }\n            });\n        }\n        return result;\n    }\n\n    private buildOption(data: any, parent: NgxSelectOptGroup): NgxSelectOption {\n        let value;\n        let text;\n        let disabled;\n        if (typeof data === 'string' || typeof data === 'number') {\n            value = text = data;\n            disabled = false;\n        } else if (typeof data === 'object' && data !== null &&\n            (propertyExists(data, this.optionValueField) || propertyExists(data, this.optionTextField))) {\n            value = propertyExists(data, this.optionValueField) ? data[this.optionValueField] : data[this.optionTextField];\n            text = propertyExists(data, this.optionTextField) ? data[this.optionTextField] : data[this.optionValueField];\n            disabled = propertyExists(data, 'disabled') ? data.disabled : false;\n        } else {\n            return null;\n        }\n        return new NgxSelectOption(value, text, disabled, data, parent);\n    }\n\n    //////////// interface ControlValueAccessor ////////////\n    public onChange = (v: any) => v;\n\n    public onTouched: () => void = () => null;\n\n    public writeValue(obj: any): void {\n        this.subjExternalValue.next(obj);\n    }\n\n    public registerOnChange(fn: (_: any) => {}): void {\n        this.onChange = fn;\n        this.subjRegisterOnChange.next();\n    }\n\n    public registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.cd.markForCheck();\n    }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NGX_SELECT_OPTIONS, NgxSelectComponent } from './ngx-select.component';\nimport { NgxSelectOptionDirective, NgxSelectOptionNotFoundDirective, NgxSelectOptionSelectedDirective } from './ngx-templates.directive';\nimport { INgxSelectOptions } from './ngx-select.interfaces';\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [NgxSelectComponent,\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective,\n    ],\n    exports: [NgxSelectComponent,\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective,\n    ],\n})\nexport class NgxSelectModule {\n    public static forRoot(options: INgxSelectOptions): ModuleWithProviders<NgxSelectModule> {\n        return {\n            ngModule: NgxSelectModule,\n            providers: [{provide: NGX_SELECT_OPTIONS, useValue: options}],\n        };\n    }\n}\n"]}