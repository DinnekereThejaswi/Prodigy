{"version":3,"file":"ng-keyboard-shortcuts.service.d.ts","sources":["E:/MagnaWeb-Angular8.0/node_modules/ng-keyboard-shortcuts/lib/ng-keyboard-shortcuts.service.d.ts"],"sourcesContent":["import { OnDestroy } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ShortcutEventOutput, ShortcutInput } from \"./ng-keyboard-shortcuts.interfaces\";\nexport declare class KeyboardShortcutsService implements OnDestroy {\n    /**\n     * Parsed shortcuts\n     * for each key create a predicate function\n     */\n    private _shortcuts;\n    /**\n     * Throttle the keypress event.\n     */\n    private throttleTime;\n    private _pressed;\n    /**\n     * Streams of pressed events, can be used instead or with a command.\n     */\n    pressed$: Observable<ShortcutEventOutput>;\n    /**\n     * Disable all keyboard shortcuts\n     */\n    private disabled;\n    private _ignored;\n    /**\n     * Subscription for on destroy.\n     */\n    private readonly subscription;\n    private isAllowed;\n    private mapEvent;\n    private keydown$;\n    private readonly shortcuts;\n    constructor();\n    /**\n     * Remove subscription.\n     */\n    ngOnDestroy(): void;\n    /**\n     * Enable all keyboard shortcuts\n     */\n    enable(): KeyboardShortcutsService;\n    /**\n     * Disable all keyboard shortcuts\n     */\n    disable(): KeyboardShortcutsService;\n    /**\n     * Check if all keyboard shortcuts are disabled.\n     */\n    isDisabled(): boolean;\n    /**\n     * Add new shortcut/s\n     */\n    add(shortcuts: ShortcutInput[] | ShortcutInput, instance?: any): KeyboardShortcutsService;\n    /**\n     * bind to the component ngOnDestroy to remove related keys\n     * when component is destroyed.\n     * @param instance - component to remove keys when ngOnDestroy is called.\n     * @param keys\n     */\n    private bindOnDestroy(instance, keys);\n    /**\n     * Remove a command based on key or array of keys.\n     * can be used for cleanup.\n     * @param key\n     * @returns\n     */\n    remove(key: string | string[]): KeyboardShortcutsService;\n    /**\n     * Returns an observable of keyboard shortcut filtered by a specific key.\n     * @param key - the key to filter the observable by.\n     */\n    select(key: string): Observable<ShortcutEventOutput>;\n    /**\n     * transforms a shortcut to:\n     * a predicate function\n     */\n    private getKeys;\n    /**\n     * Parse each command using getKeys function\n     */\n    private parseCommand(command);\n}\n"],"names":[],"mappings":"AAAA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;"}