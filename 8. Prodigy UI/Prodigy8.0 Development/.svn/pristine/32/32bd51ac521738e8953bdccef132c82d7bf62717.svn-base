(window.webpackJsonp=window.webpackJsonp||[]).push([[34,46,47],{Ig6Q:function(t,e,n){"use strict";n.r(e);var a=n("mrSG"),s=n("fXoL"),l=n("ofXK"),i=n("tk/3"),o=n("NFKh"),r=n("qlSq");let d=class{constructor(t,e){this._http=t,this.appConfigService=e,this.ccode="",this.bcode="",this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=o.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(o.enc.Utf8),this.bcode=o.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(o.enc.Utf8)}getTagSplitDesignAPI(){return this._http.get(this.apiBaseUrl+"api/TagSplit/Design/"+this.ccode+"/"+this.bcode)}getTagSplitSizeAPI(){return this._http.get(this.apiBaseUrl+"api/TagSplit/Size/"+this.ccode+"/"+this.bcode)}getTagSplitStoneGSTypeAPI(){return this._http.get(this.apiBaseUrl+"api/TagSplit/StoneGSType/"+this.ccode+"/"+this.bcode)}getTagSplitStoneNameAPI(t,e){return this._http.get(this.apiBaseUrl+"api/TagSplit/StoneName/"+this.ccode+"/"+this.bcode+"/"+t+"/"+e)}getTagSplitTagInfoAPI(t){return this._http.get(this.apiBaseUrl+"api/TagSplit/TagInfo/"+this.ccode+"/"+this.bcode+"/"+t)}getItemfromAPI(t){return this._http.get(this.apiBaseUrl+"api/Masters/GetItems?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsCode="+t)}postSplitBarcode(t){var e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/TagSplit/SplitBarcode/"+this.ccode+"/"+this.bcode,e)}postGenerateBarcode(t){var e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/TagSplit/GenerateBarcode",e)}GetSupplier(){return this._http.get(this.apiBaseUrl+"api/Master/SellingMCMaster/SupplierNames/"+this.ccode+"/"+this.bcode)}};d.ctorParameters=()=>[{type:i.b},{type:r.a}],d=a.a([Object(s.Injectable)({providedIn:"root"}),a.c("design:paramtypes",[i.b,r.a])],d);var c=n("tyNb"),p=n("eya4"),h=n("3Pt+"),u=n("qLqq"),g=n("GUC0"),m=n.n(g),b=n("5eHb");let S=class{constructor(t,e,n,a,s){this._tagSplitService=t,this._masterService=e,this.formBuilder=n,this._router=a,this.toastr=s,this.EnableTag1Details=!1,this.EnableTag2Details=!1,this.EnableSubmitCancel=!1,this.BarCodeNo="",this.password=u.a.Pwd,this.EnableStone1Dets=!1,this.GrWt=0,this.NtWt=0,this.TagNo=0,this.TagInfo=[],this.DesignList=[],this.CounterList=[],this.SizeList=[],this.StoneGsTypeList=[],this.ItemList=[],this.SupplierList=[],this.MCTypeList=[],this.StoneNameAPI=[],this.HeaderItemName="",this.SupplierName="",this.Tag1ItemName="",this.Tag2ItemName="",this.Tag1DesignName="",this.Tag2DesignName="",this.HeaderDesignName="",this.HeaderMcType="",this.Tag1GsCode="",this.Tag1Type="",this.Tag2GsCode="",this.Tag2Type="",this.Tag1DetailsJson={ObjID:null,CompanyCode:null,BranchCode:null,BarcodeNo:null,BatchNo:null,SalCode:null,OperatorCode:null,Date:null,CouterCode:null,GSCode:null,ItemName:null,Gwt:null,Swt:null,Nwt:null,Grade:null,CatalogID:null,MakingChargePerRs:null,WastePercent:null,Qty:null,ItemSize:null,DesignNo:null,PieceRate:null,DiamondAmount:null,StoneAmount:null,OrderNo:null,SoldFlag:null,ProductCode:null,HallmarkCharges:null,Remarks:null,SupplierCode:null,OrderedCompanyCode:null,OrderedBranchCode:null,Karat:null,McAmount:null,WastageGrams:null,McPercent:null,McType:null,OldBarcodeNo:null,ProdIda:null,ProdTagno:null,UpdateOn:null,LotNo:null,TagWt:null,IsConfirmed:null,ConfirmedBy:null,ConfirmedDate:null,CurrentWt:null,MCFor:null,DiamondNo:null,BatchId:null,AddWt:null,WeightRead:null,ConfirmedweightRead:null,PartyName:null,DesignName:null,ItemSizeName:null,MasterDesignCode:null,MasterDesignName:null,VendorModelNo:null,PurMcGram:null,McPerPiece:null,TaggingType:null,BReceiptNo:null,BSNo:null,IssueTo:null,PurMcAmount:null,PurMcType:null,PurRate:null,SRBatchID:null,TotalSellingMC:null,PurDiamondAmount:null,TotalPurchaseMc:null,PurStoneAmount:null,PurPurityPercentage:null,PurWastageType:null,PurWastageTypeValue:null,UniqRowID:null,CertificationNo:null,RefNo:null,ReceiptType:null,EntryDocType:null,EntryDate:null,EntryDocNo:null,ExitDocType:null,ExitDate:null,ExitDocNo:null,OnlineStock:null,IsShuffled:null,Shuffled_date:null,Collections:null,lstOfStone:[{ObjID:null,CompanyCode:null,BranchCode:null,BillNo:null,SlNo:null,EstNo:null,EstSrNo:null,BarcodeNo:null,Type:null,Name:null,Qty:null,Carrat:null,StoneWt:null,Rate:null,Amount:null,Tax:null,TaxAmount:null,TotalAmount:null,BillType:null,DealerSalesNo:null,BillDet11PK:null,UpdateOn:null,FinYear:null,Color:null,Clarity:null,Shape:null,Cut:null,Polish:null,Symmetry:null,Fluorescence:null,Certificate:null}]},this.Amount=0,this.SplittedBarcodeData=[],this.SuccessMessage=""}ngOnInit(){this.Tag1Index=-1,this.Tag2Index=-1,this.getSizeList(),this.getStoneGsTypeList(),this.getCounterList(),this.getSupplierList(),this.Stone1Form=this.formBuilder.group({ObjID:null,CompanyCode:null,BranchCode:null,BillNo:null,SlNo:null,EstNo:null,EstSrNo:null,BarcodeNo:null,Type:null,Name:null,Qty:null,Carrat:null,StoneWt:null,Rate:null,Amount:null,Tax:null,TaxAmount:null,TotalAmount:null,BillType:null,DealerSalesNo:null,BillDet11PK:null,UpdateOn:null,FinYear:null,Color:null,Clarity:null,Shape:null,Cut:null,Polish:null,Symmetry:null,Fluorescence:null,Certificate:null,SalCode:null,RateType:null,Item:null,RatePerGram:null}),this.Stone2Form=this.formBuilder.group({ObjID:null,CompanyCode:null,BranchCode:null,BillNo:null,SlNo:null,EstNo:null,EstSrNo:null,BarcodeNo:null,Type:null,Name:null,Qty:null,Carrat:null,StoneWt:null,Rate:null,Amount:null,Tax:null,TaxAmount:null,TotalAmount:null,BillType:null,DealerSalesNo:null,BillDet11PK:null,UpdateOn:null,FinYear:null,Color:null,Clarity:null,Shape:null,Cut:null,Polish:null,Symmetry:null,Fluorescence:null,Certificate:null,SalCode:null,RateType:null,Item:null,RatePerGram:null})}add(t){""==this.Tag1GsCode||"null"==this.Tag1GsCode?this.toastr.warning("Please select the GS.","Alert!"):""==this.Tag1Type||"null"==this.Tag1Type?this.toastr.warning("Please select the Type.","Alert!"):null==t.value.Type?this.toastr.warning("Please select the Name.","Alert!"):null==t.value.Qty||null==t.value.Qty?this.toastr.warning("Please enter the Qty.","Alert!"):null==t.value.Carrat||0==t.value.Carrat?this.toastr.warning("Please enter the Carrat.","Alert!"):null==t.value.Rate||0==t.value.Rate?this.toastr.warning("Please enter the Selling amt.","Alert!"):(this.Amount=parseFloat(t.value.Carrat)*parseFloat(t.value.Rate),this.Stone1Form.controls.CompanyCode.setValue(o.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(o.enc.Utf8)),this.Stone1Form.controls.BranchCode.setValue(o.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(o.enc.Utf8)),this.Stone1Form.controls.BarcodeNo.setValue(this.BarCodeNo),this.Stone1Form.controls.StoneWt.setValue(this.Tag1DetailsJson.Swt),this.Stone1Form.controls.Amount.setValue(this.Amount),this.Tag1DetailsJson[0].lstOfStone.push(this.Stone1Form.value),this.Stone1Form.reset())}add1(t){""==this.Tag2GsCode||"null"==this.Tag2GsCode?this.toastr.warning("Please select the GS.","Alert!"):""==this.Tag2Type||"null"==this.Tag2Type?this.toastr.warning("Please select the Type.","Alert!"):null==t.value.Type?this.toastr.warning("Please select the Name.","Alert!"):null==t.value.Qty||null==t.value.Qty?this.toastr.warning("Please enter the Qty.","Alert!"):null==t.value.Carrat||0==t.value.Carrat?this.toastr.warning("Please enter the Carrat.","Alert!"):null==t.value.Rate||0==t.value.Rate?this.toastr.warning("Please enter the Selling amt.","Alert!"):(this.Amount=parseFloat(t.value.Carrat)*parseFloat(t.value.Rate),this.Stone2Form.controls.CompanyCode.setValue(o.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(o.enc.Utf8)),this.Stone2Form.controls.BranchCode.setValue(o.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(o.enc.Utf8)),this.Stone2Form.controls.BarcodeNo.setValue(this.BarCodeNo),this.Stone2Form.controls.StoneWt.setValue(this.Tag1DetailsJson.Swt),this.Stone2Form.controls.Amount.setValue(this.Amount),this.Tag1DetailsJson[1].lstOfStone.push(this.Stone2Form.value),this.Stone2Form.reset())}GetSplitBarcodeDetails(){this.SplitBarcode()}getTagDetails(t){null==t?alert("Please enter barcode"):null!=t&&""!=t&&(0==this.AlphaNumericValidations(t)?alert("Please enter valid Barcode No"):(this.BarCodeNo=t,this._tagSplitService.getTagSplitTagInfoAPI(t).subscribe(t=>{this.TagInfo=t,null!=this.TagInfo&&(this.Tag1DetailsJson=this.TagInfo,this.SupplierName=this.Tag1DetailsJson[0].SupplierCode,this.GrWt=this.Tag1DetailsJson[0].Gwt,this.NtWt=this.Tag1DetailsJson[0].Nwt,this.EnableTag1Details=!0,this.getItemName(this.Tag1DetailsJson[0].GSCode),this.TagInfo=[],this.EnableTag2Details=!1)})))}AlphaNumericValidations(t){if(null!=t&&""!=t){return/^[a-zA-Z0-9]+$/g.test(t)}return!0}deleteStone1FieldValue(t,e){confirm("Do you want to delete")&&this.Tag1DetailsJson[0].lstOfStone.splice(this.Tag1DetailsJson[0].lstOfStone.indexOf(e),1)}getDesignList(){this._tagSplitService.getTagSplitDesignAPI().subscribe(t=>{this.DesignList=t,this.HeaderDesignName=this.Tag1DetailsJson[0].DesignNo,this.Tag1DesignName=this.Tag1DetailsJson[0].DesignNo,this.Tag2DesignName=this.Tag1DetailsJson[0].DesignNo})}getSizeList(){this._tagSplitService.getTagSplitSizeAPI().subscribe(t=>{this.SizeList=t})}getStoneGsTypeList(){this._tagSplitService.getTagSplitStoneGSTypeAPI().subscribe(t=>{this.StoneGsTypeList=t})}getItemName(t){this._tagSplitService.getItemfromAPI(t).subscribe(t=>{this.ItemList=t,this.HeaderItemName=this.Tag1DetailsJson[0].ItemName,this.Tag1ItemName=this.Tag1DetailsJson[0].ItemName,this.Tag2ItemName=this.Tag1DetailsJson[0].ItemName,this.getDesignList(),this.getMCType()})}getTagSplitStoneNameAPI(t,e){this._tagSplitService.getTagSplitStoneNameAPI(t,e).subscribe(t=>{this.StoneNameAPI=t})}getMCType(){this._masterService.getMCTypes().subscribe(t=>{this.MCTypeList=t,this.HeaderMcType=this.Tag1DetailsJson[0].McType})}getSupplierList(){this._tagSplitService.GetSupplier().subscribe(t=>{this.SupplierList=t})}getCounterList(){this._masterService.GetCounterForBarcode().subscribe(t=>{this.CounterList=t})}getGScodeTag1(t){this.Tag1GsCode=t}getGScodeTag2(t){this.Tag2GsCode=t}getTypeTag1(t){this.Tag1Type=t,this.getTagSplitStoneNameAPI(this.Tag1GsCode,this.Tag1Type)}getTypeTag2(t){this.Tag2Type=t,this.getTagSplitStoneNameAPI(this.Tag2GsCode,this.Tag2Type)}Tag1StoneDets(t){0!=this.Tag1DetailsJson[0].lstOfStone.length?this.Tag1Index=t===this.Tag1Index?-1:t:this.toastr.error("Stone details not available.","Alert!")}Tag2StoneDets(t){0!=this.Tag1DetailsJson[1].lstOfStone.length?this.Tag2Index=t===this.Tag2Index?-1:t:this.toastr.error("Stone details not available.","Alert!")}SplitBarcode(){this._tagSplitService.postSplitBarcode(this.Tag1DetailsJson).subscribe(t=>{this.SplittedBarcodeData=t,this.Tag1DetailsJson=this.SplittedBarcodeData,this.SplittedBarcodeData.length>=2&&(this.EnableTag2Details=!0,this.EnableSubmitCancel=!0)})}SubmitBarcode(){""==this.Tag1DetailsJson[0].ItemName||"null"==this.Tag1DetailsJson[0].ItemName?this.toastr.warning("Please select the Tag 1 Item.","Alert!"):""==this.Tag1DetailsJson[0].DesignNo||"null"==this.Tag1DetailsJson[0].DesignNo?this.toastr.warning("Please select the Tag 1 Design.","Alert!"):1==this.EnableTag2Details?""==this.Tag1DetailsJson[1].ItemName||"null"==this.Tag1DetailsJson[0].ItemName?this.toastr.warning("Please select the Tag 2 Item.","Alert!"):""==this.Tag1DetailsJson[1].DesignNo||"null"==this.Tag1DetailsJson[0].DesignNo?this.toastr.warning("Please select the Tag 2 Design.","Alert!"):this.SubmitDetails():this.SubmitDetails()}SubmitDetails(){this._tagSplitService.postGenerateBarcode(this.Tag1DetailsJson).subscribe(t=>{this.SuccessMessage=t,m()("Success!",this.SuccessMessage,"success"),this._router.navigateByUrl("/redirect",{skipLocationChange:!0}).then(()=>{this._router.navigate(["/tag-split"])})},t=>{if(400===t.status){const e=t.error;m()("Warning!",e.description,"warning")}})}CancelBarcode(){this.EnableTag1Details=!1,this.EnableTag2Details=!1}};S.ctorParameters=()=>[{type:d},{type:p.a},{type:h.FormBuilder},{type:c.c},{type:b.b}],S=a.a([Object(s.Component)({selector:"app-tag-split",template:a.b(n("Uw4f")).default,styles:[a.b(n("huk7")).default]}),a.c("design:paramtypes",[d,p.a,h.FormBuilder,c.c,b.b])],S);var T=n("5nbR");const v=[{path:"",canActivate:[T.a],canActivateChild:[T.a],component:S,data:{title:"Tag Split",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Tag Split"}]}}];let f=class{};f=a.a([Object(s.NgModule)({imports:[c.d.forChild(v)],exports:[c.d]})],f),n.d(e,"TagSplitModule",(function(){return y}));let y=class{};y=a.a([Object(s.NgModule)({declarations:[S],imports:[l.CommonModule,f,h.FormsModule,h.ReactiveFormsModule],exports:[S],schemas:[s.CUSTOM_ELEMENTS_SCHEMA]})],y)},Uw4f:function(t,e,n){"use strict";n.r(e),e.default='<div class="card">\n  <div class="card-body">\n    <form class="form-horizontal">\n      <div class="row">\n        <div class="col-md-3">\n          <div class="form-group">\n            <label for="">Tag No:</label>\n            \x3c!-- <input type="number" class="form-control" name="TagNo" #TagNo (keyup.enter)="getTagDetails(TagNo.value)"> --\x3e\n            <input class="form-control" name="TagNo" type="text" (keyup.enter)="getTagDetails(TagNo.value)" onKeyPress="if(this.value.length==10) return false;" #TagNo>            \n          </div>\n        </div>\n        <ng-container *ngIf="EnableTag1Details">\n        <div class="col-md-3">\n          <div><span class="text-muted">\n              Gr.Wt:</span>\n            <h2 class="font-light">{{GrWt | number : \'1.3-3\'}}</h2>\n          </div>\n        </div>\n        <div class="col-md-3">\n          <div><span class="text-muted">\n              Supplier:</span>\n            <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="Tag1DetailsJson[0].SupplierCode"\n              [ngModelOptions]="{standalone: true}">\n              <option value="null" [disabled]="true">Select</option>\n              <option [disabled]="true" *ngFor="let _supplierList of SupplierList" [value]="_supplierList.SupplierCode">\n                {{_supplierList.SupplierName}}\n              </option>\n            </select>\n          </div>\n        </div>\n        <div class="col-md-3">\n          <div><span class="text-muted">\n              Item:</span>\n            <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="HeaderItemName"\n              [ngModelOptions]="{standalone: true}">\n              <option value="null" [disabled]="true">Select</option>\n              <option [disabled]="true" *ngFor="let _itemList of ItemList" [value]="_itemList.Item_code">\n                {{_itemList.Item}}\n              </option>\n            </select>\n          </div>\n        </div>\n        </ng-container>\n      </div>\n      <ng-container *ngIf="EnableTag1Details">\n      <div class="row">\n        <div class="col-md-3">\n          <div><span class="text-muted">\n              St.Wt:</span>\n            <h2 class="font-light">{{Tag1DetailsJson[0].Swt | number : \'1.3-3\'}}</h2>\n          </div>\n        </div>\n        <div class="col-md-3">\n          <div><span class="text-muted">\n              Pur MC Type:</span>\n            <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="HeaderMcType"\n              [ngModelOptions]="{standalone: true}">\n              <option value="null" [disabled]="true">Select</option>\n              <option [disabled]="true" *ngFor="let _mcTypeList of MCTypeList" [value]="_mcTypeList.MC_ID">\n                {{_mcTypeList.MC_NAME}}\n              </option>\n            </select>\n          </div>\n        </div>\n        <div class="col-md-3">\n          <div><span class="text-muted">\n              Design:</span>\n            <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="HeaderDesignName"\n              [ngModelOptions]="{standalone: true}">\n              <option value="null" [disabled]="true">Select</option>\n              <option [disabled]="true" *ngFor="let _designList of DesignList" [value]="_designList.Code">\n                {{_designList.Name}}\n              </option>\n            </select>\n          </div>\n        </div>\n        <div class="col-md-3">\n          <div><span class="text-muted">\n              Net.Wt:</span>\n            <h2 class="font-light">{{NtWt | number : \'1.3-3\'}}</h2>\n          </div>\n        </div>\n      </div>\n      </ng-container>\n      <ng-container *ngIf="EnableTag1Details">\n      <div class="row">\n        <div class="col-md-3">\n          <div><span class="text-muted">\n              Pur MC/grm:</span>\n            <h2 class="font-light">{{Tag1DetailsJson[0].PurMcGram | number : \'1.2-2\'}}</h2>\n          </div>\n        </div>\n        <div class="col-md-3">\n          <div><span class="text-muted">\n              Pur MC/Piece:</span>\n            <h2 class="font-light">{{Tag1DetailsJson[0].McPerPiece | number : \'1.2-2\'}}</h2>\n          </div>\n        </div>\n      </div>\n      </ng-container>\n    </form>\n  </div>\n</div>\n\n<ng-container *ngIf="EnableTag1Details">\n<div id="accordian" class="accordion">\n  <div class="card mb-0">\n    <div class="card-header Pointer" href="#Tag1Dets" [ngClass]="EnableTag1DetsTab ? \'collapsed\' : \'\'"\n      (click)="ToggleTag1Dets()" style="background-color: #fdfdfd; box-shadow: -1px 0px 2px 0px rgba(0, 0, 0, 0.36);"\n      [attr.data-toggle]="EnableTag1DetsTab ? \'\':\'collapse\'">\n      <div class="row">\n        <div class="col-md-2 ">\n          <a class="card-title align-middle" style="color:#005BFF">\n            <i class="fas fa-tags fa-2x mr-2 align-middle"></i>\n            <span class="align-middle Pointer"><ins>Tag 1 Details</ins></span>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div id="Tag1Dets" class="card-body collapse" [hidden]="EnableTag1DetsTab"\n      [ngClass]="EnableTag1DetsTab ? \'hide\' : \'show\'">\n      <div class="table-responsive">\n        <table class="table table-bordered" style="width: 2000px;">\n          <thead class="topbar">\n            <tr>\n              <th></th>\n              <th>Item</th>\n              <th>Design</th>\n              <th>Qty</th>\n              <th>Karat</th>\n              <th>Gr.Wt</th>\n              <th>St.Wt</th>\n              <th>Nt.Wt</th>\n              <th>Counter</th>\n              <th>Size</th>\n              <th>MC Type</th>\n              <th>MC/grm</th>\n              <th>MC/Piece</th>\n              <th>VA%</th>\n              <th>Wast%</th>\n              <th>Wast grams</th>\n              <th>Piece Rate</th>\n              <th>St.Amt</th>\n              <th>Dm.Amt</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <h3><a href="javascript:void(0)" (click)="Tag1StoneDets(i)" data-toggle="collapse"\n                    [attr.data-target]="\'#collapse\'+ i" id=\'panels\'>Stone Details</a>\n                </h3>\n              </td>\n              <td style="width:200px;">\n                <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="Tag1DetailsJson[0].ItemName"\n                  [ngModelOptions]="{standalone: true}">\n                  <option value="null">Select</option>\n                  <option *ngFor="let _itemList of ItemList" [value]="_itemList.Item_code">\n                    {{_itemList.Item}}\n                  </option>\n                </select>\n              </td>\n              <td style="width:200px;">\n                <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="Tag1DetailsJson[0].DesignNo"\n                  [ngModelOptions]="{standalone: true}">\n                  <option value="null">Select</option>\n                  <option *ngFor="let _designList of DesignList" [value]="_designList.Code">\n                    {{_designList.Name}}\n                  </option>\n                </select>\n              </td>\n              <td>\n                <input class="form-control" type="number" [(ngModel)]="Tag1DetailsJson[0].Qty" min="0"\n                  placeholder="0.00" />\n              </td>\n              <td>\n                <h3 class="align-middle">{{Tag1DetailsJson[0].Karat}}</h3>\n              </td>\n              <td>\n                <input class="form-control" type="number" [(ngModel)]="Tag1DetailsJson[0].Gwt" min="0"\n                  placeholder="0.00" (change)="GetSplitBarcodeDetails()" />\n              </td>\n              <td>\n                <input class="form-control" type="number" [(ngModel)]="Tag1DetailsJson[0].Swt" min="0"\n                  placeholder="0.00" (change)="GetSplitBarcodeDetails()" />\n              </td>\n              <td>\n                <h3 class="align-middle">{{Tag1DetailsJson[0].Nwt | number : \'1.3-3\'}}</h3>\n              </td>\n              <td style="width:200px;">\n                <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="Tag1DetailsJson[0].CounterCode"\n                  [ngModelOptions]="{standalone: true}">\n                  <option value="null" [disabled]="true">Select</option>\n                  <option [disabled]="true" *ngFor="let _counterList of CounterList" [value]="_counterList.CounterCode">\n                    {{_counterList.CounterName}}\n                  </option>\n                </select>\n              </td>\n              <td style="width:150px;">\n                <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="Tag1DetailsJson[0].ItemSize"\n                  [ngModelOptions]="{standalone: true}">\n                  <option value="null" [disabled]="true">Select</option>\n                  <option [disabled]="true" *ngFor="let _sizeList of SizeList" [value]="_sizeList.Code">\n                    {{_sizeList.Name}}\n                  </option>\n                </select>\n              </td>\n              <td>\n                <h3 class="align-middle">{{Tag1DetailsJson[0].McType}}</h3>\n              </td>\n              <td>\n                <input class="form-control" type="number" [(ngModel)]="Tag1DetailsJson[0].Qty" min="0"\n                  placeholder="0.00" />\n              </td>\n              <td>\n                <h3 class="align-middle">{{Tag1DetailsJson[0].McPerPiece}}</h3>\n              </td>\n              <td>\n                <h3 class="align-middle">{{Tag1DetailsJson[0].McPercent}}</h3>\n              </td>\n              <td>\n                <input class="form-control" type="number" [(ngModel)]="Tag1DetailsJson[0].WastePercent" min="0"\n                  placeholder="0.00" />\n              </td>\n              <td>\n                <h3 class="align-middle">{{Tag1DetailsJson[0].WastageGrams | number : \'1.3-3\'}}</h3>\n              </td>\n              <td>\n                <h3 class="align-middle">{{Tag1DetailsJson[0].PieceRate | number : \'1.2-2\'}}</h3>\n              </td>\n              <td>\n                <h3 class="align-middle">{{Tag1DetailsJson[0].StoneAmount | number : \'1.2-2\'}}</h3>\n              </td>\n              <td>\n                <h3 class="align-middle">{{Tag1DetailsJson[0].DiamondAmount | number : \'1.2-2\'}}</h3>\n              </td>\n            </tr>\n            <br>\n            <tr>\n              <td colspan="20" class="hiddenRow" *ngIf="i === Tag1Index">\n                <fieldset class="scheduler-border">\n                  <legend class="scheduler-border"><i class="fas fa-gem align-middle"></i> Stone Details</legend>\n                  <div class="wrapper">\n                    <form [formGroup]="Stone1Form" class="form-horizontal">\n                      <div class="row">\n                        <div class="col-md-1">\n                          <div class="form-group">\n                            <label for="">GS</label>\n                            <div class="form-group">\n                              <select class="form-control mr-auto mt-2 mt-lg-0" #GS (change)="getGScodeTag1(GS.value)">\n                                <option value="null">Select</option>\n                                <option *ngFor="let _stoneGsTypeList of StoneGsTypeList"\n                                  [value]="_stoneGsTypeList.Code">\n                                  {{_stoneGsTypeList.Name}}\n                                </option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n                        <div class="col-md-2 ">\n                          <div class="form-group">\n                            <label for="">Type</label>\n                            <div class="form-group">\n                              <select class="form-control mr-auto mt-2 mt-lg-0" #Type (change)="getTypeTag1(Type.value)">\n                                <option value="null">Select</option>\n                                <option value="Ordinary">Ordinary</option>\n                                <option value="Precious">Precious</option>\n                                <option value="Semi Precious">Semi Precious</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n                        <div class="col-md-2">\n                          <div class="form-group">\n                            <label for="Type">Name</label>\n                            <div class="form-group">\n                              <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="Type">\n                                <option value="null">Select</option>\n                                <option *ngFor="let _stoneNameAPI of StoneNameAPI" [value]="_stoneNameAPI.Code">\n                                  {{_stoneNameAPI.Name}}\n                                </option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n                        <div class="col-md-1">\n                          <div class="form-group">\n                            <label for="Qty">Qty</label>\n                            <div class="form-group">\n                              <input class="form-control" type="number" formControlName="Qty" placeholder="0.00" />\n                            </div>\n                          </div>\n                        </div>\n                        <div class="col-md-1">\n                          <div class="form-group">\n                            <label for="Carrat">Carat</label>\n                            <div class="form-group">\n                              <input class="form-control" formControlName="Carrat" type="number" placeholder="0.00" />\n                            </div>\n                          </div>\n                        </div>\n                        <div class="col-md-1">\n                          <div class="form-group">\n                            <label for="Rate">Selling Rate</label>\n                            <div class="form-group">\n                              <input class="form-control" formControlName="Rate" type="number" placeholder="0.00" />\n                            </div>\n                          </div>\n                        </div>\n                        <div class="col-md-2">\n                          <div class="form-group float-left" style="margin-top: 2px;">\n                            <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary pull-right"\n                              style="margin-top: 1.2rem !important;" (click)="add(Stone1Form)">\n                              <i class="far fa-plus-circle"></i> Add</button>\n                          </div>\n                          <div class="form-group float-left" style="margin-top: 2px;">\n                            <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary pull-right"\n                              style="margin-top: 1.2rem !important;" (click)="cancel(Stone1Form)">\n                              <i class="fa fa-times-circle"></i> Cancel</button>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n\n                    <div>\n                      <table class="table table-bordered" style="width: 1500px;">\n                        <thead class="topbar">\n                          <tr>\n                            <th>Action</th>\n                            <th>SNo</th>\n                            <th>Name</th>\n                            <th>Qty</th>\n                            <th>Carat</th>\n                            <th>Selling Amount</th>\n                          </tr>\n                        </thead>\n                        <tbody *ngFor="let Tag1StoneDets of Tag1DetailsJson[0].lstOfStone; let i=index">\n                          <tr>\n                            <td>\n                              <button class="btn btn-danger btn-rounded" type="button"\n                                (click)="deleteStone1FieldValue(i,Tag1StoneDets)"><i class="fal fa-trash-alt"></i>\n                                Delete</button>\n                            </td>\n                            <td style="width:200px;">\n                              <h3 class="align-middle">{{i+1}}</h3>\n                            </td>\n                            <td>\n                              <h3 class="align-middle">{{Tag1StoneDets.Name}}</h3>\n                            </td>\n                            <td>\n                              <h3 class="align-middle">{{Tag1StoneDets.Qty}}</h3>\n                            </td>\n                            <td>\n                              <h3 class="align-middle">{{Tag1StoneDets.Carrat | number : \'1.3-3\'}}</h3>\n                            </td>\n                            <td>\n                              <h3 class="align-middle">{{Tag1StoneDets.Amount | number : \'1.2-2\'}}</h3>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </fieldset>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n</ng-container>\n<br>\n\n\x3c!--Tag 2 Details--\x3e\n<ng-container *ngIf="EnableTag2Details">\n  <div id="accordian" class="accordion">\n    <div class="card mb-0">\n      <div class="card-header Pointer" href="#Tag2Dets" [ngClass]="EnableTag2DetsTab ? \'collapsed\' : \'\'"\n        (click)="ToggleTag2Dets()" style="background-color: #fdfdfd; box-shadow: -1px 0px 2px 0px rgba(0, 0, 0, 0.36);"\n        [attr.data-toggle]="EnableTag2DetsTab ? \'\':\'collapse\'">\n        <div class="row">\n          <div class="col-md-2 ">\n            <a class="card-title align-middle" style="color:rgb(255, 0, 221)">\n              <i class="fas fa-tags fa-2x mr-2 align-middle"></i>\n              <span class="align-middle Pointer"><ins>Tag 2 Details</ins></span>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div id="Tag2Dets" class="card-body collapse" [hidden]="EnableTag2DetsTab"\n        [ngClass]="EnableTag2DetsTab ? \'hide\' : \'show\'">\n        <div class="table-responsive">\n          <table class="table table-bordered" style="width: 2000px;">\n            <thead class="topbar">\n              <tr>\n                <th></th>\n                <th>Item</th>\n                <th>Design</th>\n                <th>Qty</th>\n                <th>Karat</th>\n                <th>Gr.Wt</th>\n                <th>St.Wt</th>\n                <th>Nt.Wt</th>\n                <th>Counter</th>\n                <th>Size</th>\n                <th>MC Type</th>\n                <th>MC/grm</th>\n                <th>MC/Piece</th>\n                <th>VA%</th>\n                <th>Wast%</th>\n                <th>Wast grams</th>\n                <th>Piece Rate</th>\n                <th>St.Amt</th>\n                <th>Dm.Amt</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <h3><a href="javascript:void(0)" (click)="Tag2StoneDets(i)" data-toggle="collapse"\n                      [attr.data-target]="\'#collapse\'+ i" id=\'panels\'>Stone Details</a>\n                  </h3>\n                </td>\n                <td style="width:200px;">\n                  <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="Tag1DetailsJson[1].ItemName"\n                    [ngModelOptions]="{standalone: true}">\n                    <option value="null">Select</option>\n                    <option *ngFor="let _itemList of ItemList" [value]="_itemList.Item_code">\n                      {{_itemList.Item}}\n                    </option>\n                  </select>\n                </td>\n                <td style="width:200px;">\n                  <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="Tag1DetailsJson[1].DesignNo"\n                    [ngModelOptions]="{standalone: true}">\n                    <option value="null">Select</option>\n                    <option *ngFor="let _designList of DesignList" [value]="_designList.Code">\n                      {{_designList.Name}}\n                    </option>\n                  </select>\n                </td>\n                <td>\n                  <input class="form-control" type="number" [(ngModel)]="Tag1DetailsJson[1].Qty" min="0"\n                    placeholder="0.00" />\n                </td>\n                <td>\n                  <h3 class="align-middle">{{Tag1DetailsJson[1].Karat}}</h3>\n                </td>\n                <td>\n                  <h3 class="align-middle">{{Tag1DetailsJson[1].Gwt | number : \'1.3-3\'}}</h3>\n                </td>\n                <td>\n                  <h3 class="align-middle">{{Tag1DetailsJson[1].Swt | number : \'1.3-3\'}}</h3>\n                </td>\n                <td>\n                  <h3 class="align-middle">{{Tag1DetailsJson[1].Nwt | number : \'1.3-3\'}}</h3>\n                </td>\n                <td style="width:200px;">\n                    <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="Tag1DetailsJson[0].CounterCode"\n                    [ngModelOptions]="{standalone: true}">\n                    <option value="null" [disabled]="true">Select</option>\n                    <option [disabled]="true" *ngFor="let _counterList of CounterList" [value]="_counterList.CounterCode">\n                      {{_counterList.CounterName}}\n                    </option>\n                  </select>\n                </td>\n                <td style="width:150px;">\n                  <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="Tag1DetailsJson[1].ItemSize"\n                    [ngModelOptions]="{standalone: true}">\n                    <option value="null" [disabled]="true">Select</option>\n                    <option [disabled]="true" *ngFor="let _sizeList of SizeList" [value]="_sizeList.Code">\n                      {{_sizeList.Name}}\n                    </option>\n                  </select>\n                </td>\n                <td>\n                  <h3 class="align-middle">{{Tag1DetailsJson[1].McType}}</h3>\n                </td>\n                <td>\n                  <input class="form-control" type="number" [(ngModel)]="Tag1DetailsJson[1].Qty" min="0"\n                    placeholder="0.00" />\n                </td>\n                <td>\n                  <h3 class="align-middle">{{Tag1DetailsJson[1].McPerPiece}}</h3>\n                </td>\n                <td>\n                  <input class="form-control" type="number" [(ngModel)]="Tag1DetailsJson[1].McPercent" min="0"\n                    placeholder="0.00" />\n                </td>\n                <td>\n                  <input class="form-control" type="number" [(ngModel)]="Tag1DetailsJson[1].WastePercent" min="0"\n                    placeholder="0.00" />\n                </td>\n                <td>\n                  <h3 class="align-middle">{{Tag1DetailsJson[1].WastageGrams | number : \'1.3-3\'}}</h3>\n                </td>\n                <td>\n                  <h3 class="align-middle">{{Tag1DetailsJson[1].PieceRate | number : \'1.2-2\'}}</h3>\n                </td>\n                <td>\n                  <h3 class="align-middle">{{Tag1DetailsJson[1].StoneAmount | number : \'1.2-2\'}}</h3>\n                </td>\n                <td>\n                  <h3 class="align-middle">{{Tag1DetailsJson[1].DiamondAmount | number : \'1.2-2\'}}</h3>\n                </td>\n              </tr>\n              <br>\n              <tr>\n                <td colspan="20" class="hiddenRow" *ngIf="i === Tag2Index">\n                  <fieldset class="scheduler-border">\n                    <legend class="scheduler-border"><i class="fas fa-gem align-middle"></i> Stone Details</legend>\n                    <div class="wrapper">\n                      <form [formGroup]="Stone2Form" class="form-horizontal">\n                        <div class="row">\n                          <div class="col-md-1">\n                            <div class="form-group">\n                              <label for="">GS</label>\n                              <div class="form-group">\n                                <select class="form-control mr-auto mt-2 mt-lg-0" #GS (change)="getGScodeTag2(GS.value)">\n                                  <option value="null">Select</option>\n                                  <option *ngFor="let _stoneGsTypeList of StoneGsTypeList"\n                                    [value]="_stoneGsTypeList.Code">\n                                    {{_stoneGsTypeList.Name}}\n                                  </option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div class="col-md-2 ">\n                            <div class="form-group">\n                              <label for="">Type</label>\n                              <div class="form-group">\n                                <select class="form-control mr-auto mt-2 mt-lg-0" #Type (change)="getTypeTag2(Type.value)">\n                                  <option value="null">Select</option>\n                                  <option value="Ordinary">Ordinary</option>\n                                  <option value="Precious">Precious</option>\n                                  <option value="Semi Precious">Semi Precious</option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div class="col-md-2">\n                            <div class="form-group">\n                              <label for="Type">Name</label>\n                              <div class="form-group">\n                                <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="Type">\n                                  <option value="null">Select</option>\n                                  <option *ngFor="let _stoneNameAPI of StoneNameAPI" [value]="_stoneNameAPI.Code">\n                                    {{_stoneNameAPI.Name}}\n                                  </option>\n                                </select>\n                              </div>\n                            </div>\n                          </div>\n                          <div class="col-md-1">\n                            <div class="form-group">\n                              <label for="Qty">Qty</label>\n                              <div class="form-group">\n                                <input class="form-control" type="number" formControlName="Qty" placeholder="0.00" />\n                              </div>\n                            </div>\n                          </div>\n                          <div class="col-md-1">\n                            <div class="form-group">\n                              <label for="Carrat">Carat</label>\n                              <div class="form-group">\n                                <input class="form-control" formControlName="Carrat" type="number" placeholder="0.00" />\n                              </div>\n                            </div>\n                          </div>\n                          <div class="col-md-1">\n                            <div class="form-group">\n                              <label for="Rate">Selling Rate</label>\n                              <div class="form-group">\n                                <input class="form-control" formControlName="Rate" type="number" placeholder="0.00" />\n                              </div>\n                            </div>\n                          </div>\n                          <div class="col-md-2">\n                            <div class="form-group float-left" style="margin-top: 2px;">\n                              <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary pull-right"\n                                style="margin-top: 1.2rem !important;" (click)="add1(Stone2Form)">\n                                <i class="far fa-plus-circle"></i> Add</button>\n                            </div>\n                            <div class="form-group float-left" style="margin-top: 2px;">\n                              <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary pull-right"\n                                style="margin-top: 1.2rem !important;" (click)="cancel(Stone2Form)">\n                                <i class="fa fa-times-circle"></i> Cancel</button>\n                            </div>\n                          </div>\n                        </div>\n                      </form>\n\n                      <div>\n                        <table class="table table-bordered" style="width: 1500px;">\n                          <thead class="topbar">\n                            <tr>\n                              <th>Action</th>\n                              <th>SNo</th>\n                              <th>Name</th>\n                              <th>Qty</th>\n                              <th>Carat</th>\n                              <th>Selling Amount</th>\n                            </tr>\n                          </thead>\n                          <tbody *ngFor="let Tag2StoneDets of Tag1DetailsJson[1].lstOfStone; let i=index">\n                            <tr>\n                              <td>\n                                <button class="btn btn-danger btn-rounded" type="button"\n                                  (click)="deleteStone2FieldValue(i,Tag2StoneDets)"><i class="fal fa-trash-alt"></i>\n                                  Delete</button>\n                              </td>\n                              <td style="width:200px;">\n                                <h3 class="align-middle">{{i+1}}</h3>\n                              </td>\n                              <td>\n                                <h3 class="align-middle">{{Tag2StoneDets.Name}}</h3>\n                              </td>\n                              <td>\n                                <h3 class="align-middle">{{Tag2StoneDets.Qty}}</h3>\n                              </td>\n                              <td>\n                                <h3 class="align-middle">{{Tag2StoneDets.Carrat | number : \'1.3-3\'}}</h3>\n                              </td>\n                              <td>\n                                <h3 class="align-middle">{{Tag2StoneDets.Amount | number : \'1.2-2\'}}</h3>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </fieldset>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<br>\n<ng-container *ngIf="EnableSubmitCancel">\n<div class="row pt-1">\n  <div class="col-md-4">\n    <button class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary "\n      (click)="SubmitBarcode()">\n      <i class="far fa-save"></i> Submit</button>\n    <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" type="button" (click)="CancelBarcode()">\n      <i class="far fa-window-close"></i>\n      Cancel</button>\n  </div>\n</div>\n</ng-container>\n\x3c!-- <pre>{{Tag1DetailsJson | json}}</pre> --\x3e'},eya4:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var a=n("mrSG"),s=n("fXoL"),l=n("tk/3"),i=n("qlSq"),o=n("NFKh");let r=class{constructor(t,e){this.http=t,this.appConfigService=e,this.ccode="",this.bcode="",this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=o.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(o.enc.Utf8),this.bcode=o.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(o.enc.Utf8)}getSalesMan(){return this.http.get(this.apiBaseUrl+"api/Masters/Salesman?companyCode="+this.ccode+"&branchCode="+this.bcode)}getGsList(t){return this.http.get(this.apiBaseUrl+"api/Masters/LoadGS?companyCode="+this.ccode+"&branchCode="+this.bcode+"&type="+t)}getNewGsList(){return this.http.get(this.apiBaseUrl+"api/purchase/GS/"+this.ccode+"/"+this.bcode)}getMCTypes(){return this.http.get(this.apiBaseUrl+"api/Masters/MCTypes?companyCode="+this.ccode+"&branchCode="+this.bcode)}getCounter(t,e){return this.http.get(this.apiBaseUrl+"api/Masters/Counter?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsName="+t+"&itemCode="+e)}getKarat(){return this.http.get(this.apiBaseUrl+"api/Masters/Karat?companyCode="+this.ccode+"&branchCode="+this.bcode)}getRate(t){return this.http.get(this.apiBaseUrl+"api/Masters/GetRatePerGramForSales?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsCode="+t.GsCode+"&karat="+t.Karat)}getRateforAddBarcode(t){return this.http.get(this.apiBaseUrl+"api/Masters/GetRatePerGramForSales?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsCode="+t.GsCode+"&karat="+t.Karat)}getItemName(t){return this.http.get(this.apiBaseUrl+"api/Masters/Item?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsName="+t)}getItemfromAPI(t){return this.http.get(this.apiBaseUrl+"api/Masters/GetItems?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsCode="+t.GS)}getItemfromExistingAPI(t){return this.http.get(this.apiBaseUrl+"api/Masters/GetItems?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsCode="+t)}getkaratAndPieceItem(t,e){return this.http.get(this.apiBaseUrl+"api/Masters/GetItemDet?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsCode="+t+"&itemCode="+e)}getRateperGram(t){return this.http.get(this.apiBaseUrl+"api/Masters/RatePerGram?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsCode="+t.GS+"&karat="+t.Item+"&rateType="+t.RateType)}RefreshRateperGram(t,e){return this.http.get(this.apiBaseUrl+"api/Masters/RatePerGram?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsCode="+t.GS+"&karat="+e+"&rateType="+t.RateType)}getPaymentMode(t){return this.http.get(this.apiBaseUrl+"api/Masters/PayMode?companyCode="+this.ccode+"&branchCode="+this.bcode+"&moduleName="+t)}getApplicationDate(){return this.http.get(this.apiBaseUrl+"api/Masters/GetApplicationDate/"+this.ccode+"/"+this.bcode)}getGSTPercent(t,e){return this.http.get(this.apiBaseUrl+"api/Masters/GetGSTPercent?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsCode="+t+"&itemCode="+e)}GetCounterForBarcode(){return this.http.get(this.apiBaseUrl+"api/Stock/StockTaking/Counter?companyCode="+this.ccode+"&branchCode="+this.bcode)}getCardType(){return this.http.get(this.apiBaseUrl+"api/Masters/CardType/"+this.ccode+"/"+this.bcode)}getCompanyMaster(){return this.http.get(this.apiBaseUrl+"api/Master/CompanyMaster/Get/"+this.ccode+"/"+this.bcode)}getManagerList(){return this.http.get(this.apiBaseUrl+"api/order/ManagerList/"+this.ccode+"/"+this.bcode)}getBookingTypeList(){return this.http.get(this.apiBaseUrl+"api/order/BookingType/"+this.ccode+"/"+this.bcode)}getLastDocNum(t){return this.http.get(this.apiBaseUrl+"api/docmgmt/last-series?companyCode="+this.ccode+"&branchCode="+this.bcode+"&docType="+t)}printPlainText(t){let e=[{type:"raw",data:t}];qz.websocket.connect().then(qz.printers.getDefault).then((function(t){let n=qz.configs.create(t);return qz.print(n,e)})).then(()=>qz.websocket.disconnect()).catch(t=>{console.error(t)})}getPermissions(){return this.http.get(this.apiBaseUrl+"api/permission-role-map/Permissions")}getRoles(){return this.http.get(this.apiBaseUrl+"api/permission-role-map/Roles?companyCode="+this.ccode+"&branchCode="+this.bcode)}getRolesPermissionList(){return this.http.get(this.apiBaseUrl+"api/permission-role-map/List?companyCode="+this.ccode+"&branchCode="+this.bcode)}postPermissions(t){const e=JSON.stringify(t);return this.http.post(this.apiBaseUrl+"api/permission-role-map/Post",e)}putActivatePermissions(t){const e=JSON.stringify(t);return this.http.put(this.apiBaseUrl+"api/permission-role-map/Activate",e)}putDeactivatePermissions(t){const e=JSON.stringify(t);return this.http.put(this.apiBaseUrl+"api/permission-role-map/De-activate",e)}getUserPermissions(){return this.http.get(this.apiBaseUrl+"api/permission-user-map/Permissions")}getusers(){return this.http.get(this.apiBaseUrl+"api/permission-user-map/Users?companyCode="+this.ccode+"&branchCode="+this.bcode)}getUsersPermissionList(){return this.http.get(this.apiBaseUrl+"api/permission-user-map/List?companyCode="+this.ccode+"&branchCode="+this.bcode)}postUsersPermissions(t){const e=JSON.stringify(t);return this.http.post(this.apiBaseUrl+"api/permission-user-map/Post",e)}putUsersActivatePermissions(t){const e=JSON.stringify(t);return this.http.put(this.apiBaseUrl+"api/permission-user-map/Activate",e)}putUsersDeactivatePermissions(t){const e=JSON.stringify(t);return this.http.put(this.apiBaseUrl+"api/permission-user-map/De-activate",e)}postelevatedpermission(t){const e=JSON.stringify(t);return this.http.post(this.apiBaseUrl+"api/elevatedpermission/post",e)}};r.ctorParameters=()=>[{type:l.b},{type:i.a}],r=a.a([Object(s.Injectable)({providedIn:"root"}),a.c("design:paramtypes",[l.b,i.a])],r)},huk7:function(t,e,n){"use strict";n.r(e),e.default='body{\r\n    font-size: 5px;\r\n    line-height: 18px;\r\n}\r\n.watermark {\r\n  transform: rotate(331deg);\r\n  font-size: 10em;\r\n  color: rgba(255, 5, 5, 0.37);\r\n  position: absolute;\r\n  text-transform:uppercase;\r\n  padding-left: 10%;\r\n}\r\n.modal-header{\r\npadding-left: 20rem !important;\r\n}\r\n.material-switch > input[type="checkbox"] {\r\ndisplay: none;   \r\n}\r\ntr.spaceUnder>td {\r\npadding-bottom: 0px;\r\n}\r\n.material-switch > label {\r\ncursor: pointer;\r\nheight: 0px;\r\nposition: relative; \r\nwidth: 40px;  \r\n}\r\n.material-switch > label::before {\r\nbackground: rgb(0, 0, 0);\r\nbox-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.5);\r\nborder-radius: 8px;\r\ncontent: \'\';\r\nheight: 16px;\r\nmargin-top: -8px;\r\nposition:absolute;\r\nopacity: 0.3;\r\ntransition: all 0.4s ease-in-out;\r\nwidth: 40px;\r\n}\r\n.material-switch > label::after {\r\nbackground: rgb(255, 255, 255);\r\nborder-radius: 16px;\r\nbox-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);\r\ncontent: \'\';\r\nheight: 24px;\r\nleft: -4px;\r\nmargin-top: -8px;\r\nposition: absolute;\r\ntop: -4px;\r\ntransition: all 0.3s ease-in-out;\r\nwidth: 24px;\r\n}\r\n.material-switch > input[type="checkbox"]:checked + label::before {\r\nbackground: inherit;\r\nopacity: 0.5;\r\n}\r\n.material-switch > input[type="checkbox"]:checked + label::after {\r\nbackground: inherit;\r\nleft: 20px;\r\n}\r\n.card-header{\r\n    border-radius: 15px !important;\r\n  }\r\n.card{\r\n    border-radius: 15px !important;\r\n  \r\n  }\r\n.card-body{ \r\n    padding: 10px 30px 0px 30px !important; \r\n    border-bottom: 2px solid black;\r\n    border-radius: 15px;\r\n  }\r\n.p-38 { height: 38px; }\r\n.text-white { color: white;}\r\n.Pointer { cursor: pointer; }\r\n.footer {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n.hiddenRow {\r\n    padding: 0 !important;\r\n  }\r\n.wrapper{\r\n    margin: auto 3em auto 3em;\r\n  }\r\n.table-responsive {\r\n    display: block;\r\n    width: 99.9999% !important;\r\n    overflow-x: auto;\r\n}\r\n.hide{\r\n   display: hide;\r\n  }\r\n.show{\r\n    display: block;\r\n  }\r\n.accordion .card-header.collapsed:after {\r\n    /* symbol for "collapsed" panels */\r\n    content: "\\f067"; \r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    transition: .3s transform ease-in-out;\r\n  }\r\n.accordion .card-header:after {\r\n    font-family: \'FontAwesome\';  \r\n    content: "\\f068";\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    margin-top: -25px;\r\n  }\r\n.text-red{\r\n    color:red;\r\n  }\r\n.text-green{\r\n  color:#16d616; \r\n  }\r\nfieldset.scheduler-border {\r\n\tborder: 2px groove #ddd !important;\r\n\tpadding: 0 1.4em 1.4em 1.4em !important;\r\n\tmargin: 0 0 1.5em 0 !important;\r\n\tbox-shadow:  0px 0px 0px 0px #000;\r\n\t\tborder-radius: 15px;\r\n  }\r\nlegend.scheduler-border {\r\n    font-size: 20px !important;\r\n    text-align: left !important;\r\n    width:auto;\r\n    padding:0 10px;\r\n    border-bottom:none;\r\n  }\r\n@media only screen and (max-width: 600px) {\r\n    .columns {\r\n      width: 100%;\r\n    }\r\n  }\r\n@media (min-width:2200px) and (max-width: 2440px) {\r\n    .table-responsive {\r\n     overflow-x: hidden !important;\r\n  \r\n}\r\n}\r\n@media (min-width: 300px) and (max-width: 2200px) {\r\n  .table-responsive {\r\n  overflow-x: auto !important;\r\n\r\n}}'},qLqq:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));class a{}a.API_ENDPOINT="http://192.168.10.202/Magnawebpos/",a.Pwd="#SDAQ@$%^&*BNHJK"}}]);