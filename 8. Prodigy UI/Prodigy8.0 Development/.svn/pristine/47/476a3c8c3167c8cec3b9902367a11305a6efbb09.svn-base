<div>
  <div>
    <form [formGroup]="AddBarcodeForm" class="form-horizontal">
      <div class="row">
        <div class="col-md-4">
          <label *ngFor="let radiobutton of radioItems" class="form-check-inline">
            <input type="radio" name="options" [disabled]="isDisabled" (click)="OnRadioBtnChnge(radiobutton.name)"
              class="form-check-input" [value]="radiobutton.name" [checked]="radiobutton.name === model.name">
            <h3 style="margin-top: 5px;">{{radiobutton.name}}
              <div class="tooltipdesign"><i class="fal fa-question-circle"></i>
                <span class="tooltiptext tooltip-top">{{radiobutton.Tooltip}}</span>
              </div>
            </h3>
          </label>
        </div>
        <div class="col-md-2">
          <input type="text" class="form-control" id="BarcodeNo" #tagno [(ngModel)]="BarcodeSummaryHeader.BarcodeNo"
            formControlName="BarcodeNo" [readonly]="readOnly" GreenBorder placeholder="Barcode/Tagno"
            (keyup.enter)="getDetails(tagno.value)" autofocu>
        </div>
        <!-- <div class="col-md-4">
          <div class="form-group" style="float:right">F
            <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" type="button"
              (click)="SubmitBarcodeDetails()"><i class="fal fa-save"></i> Submit</button>
            <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" type="button"><i
                class="far fa-window-close"></i>
              Cancel</button>
          </div>
        </div> -->
        <div class="col-md-1">

        </div>
        <ng-container *ngIf="EnableBarcodeAge">
          <div class="col-md-2" style="background: rgb(192, 245, 179);">
            {{BarcodeAge.ItemAge}}
          </div>&nbsp;
          <div class="col-md-2" style="background: rgb(192, 245, 179);">
            {{BarcodeAge.AgeInBranch}}
          </div>
        </ng-container>
      </div>
      <br>
      <div class="row">
        <div class="col-md-9">
          <div class="columns">
            <div class="row">
              <div class="col-md-4">
                <!-- *ngIf="model.option.name == 'Tag'" -->
                <div class="table-responsive">
                  <table class="table">
                    <tbody>
                      <tr class="mt-2">
                        <td class="float-rt">Staff</td>
                        <td><select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="BarcodeSummaryHeader.SalCode"
                            formControlName="SalCode">
                            <option [ngValue]="null">Select</option>
                            <option *ngFor="let _List of StaffList" [value]="_List.sal_code">
                              {{_List.sal_name}}
                            </option>
                          </select></td>
                      </tr>
                      <tr class="mt-2">
                        <td class="float-rt">GS</td>
                        <td><select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="BarcodeSummaryHeader.GsCode"
                            #GsCode (change)="getItemList(AddBarcodeForm.value.GsCode)" formControlName="GsCode">
                            <option [ngValue]="null" [disabled]="model.name === 'Tag'">Select</option>
                            <option *ngFor="let _GSList of GSList" [value]="_GSList.gs_code"
                              [disabled]="model.name === 'Tag'">
                              {{_GSList.GSName}} </option>
                          </select></td>
                      </tr>
                      <tr class="mt-2">
                        <td class="float-rt">Item</td>
                        <td> <select class="form-control mr-auto mt-2 mt-lg-0" #ItemName
                            (change)="getCounter(AddBarcodeForm.value.ItemName)"
                            [(ngModel)]="BarcodeSummaryHeader.ItemName" formControlName="ItemName">
                            <option [disabled]="model.name === 'Tag'" [ngValue]="null">Select</option>
                            <option *ngFor="let _ItemName of ItemList" [value]="_ItemName.Item_code"
                              [disabled]="model.name === 'Tag'">
                              {{_ItemName.Item}}
                            </option>
                          </select></td>
                      </tr>

                      <tr class="mt-2">
                        <td class="float-rt">Counter</td>
                        <td> <select class="form-control mr-auto mt-2 mt-lg-0"
                            [(ngModel)]="BarcodeSummaryHeader.CounterCode" formControlName="CounterCode">
                            <option [disabled]="model.name === 'Tag'" [ngValue]="null">Select</option>
                            <option *ngFor="let _Counter of CounterList" [value]="_Counter"
                              [disabled]="model.name === 'Tag'">
                              {{_Counter}} </option>
                          </select></td>
                      </tr>
                      <tr class="mt-2">
                        <td class="float-rt">Piece Item</td>
                        <td> <select class="form-control mr-auto mt-2 mt-lg-0"
                            [(ngModel)]="BarcodeSummaryHeader.PieceRate" formControlName="PieceRate">
                            <option [disabled]="model.name === 'Tag'" [ngValue]="null">Select</option>
                            <option *ngFor="let item of KaratAndPieceItemList" [value]="item.IsPiece"
                              [disabled]="model.name === 'Tag'">
                              {{item.IsPiece}}
                            </option>
                          </select></td>
                      </tr>
                      <tr class="mt-2">
                        <td class="float-rt">Karat</td>
                        <td> <select class="form-control mr-auto mt-2 mt-lg-0" #Karat formControlName="Karat"
                            (change)="getRate(AddBarcodeForm)" [(ngModel)]="BarcodeSummaryHeader.Karat">
                            <option [disabled]="model.name === 'Tag'" [ngValue]="null">Select</option>
                            <option *ngFor="let Karat of KaratAndPieceItemList" [value]="Karat.Karat"
                              [disabled]="model.name === 'Tag'">
                              {{Karat.Karat}}
                            </option>
                          </select></td>
                      </tr>
                      <tr class="mt-2">
                        <td class="float-rt">Design</td>
                        <td><input type="text" class="form-control" [(ngModel)]="BarcodeSummaryHeader.DesignName"
                            formControlName="DesignName" [readonly]="model.name === 'Tag'"></td>
                      </tr>
                      <tr class="mt-2">
                        <td class="float-rt">Size</td>
                        <td><input type="text" class="form-control"
                            oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                            [(ngModel)]="BarcodeSummaryHeader.ItemSize" formControlName="ItemSize"
                            [readonly]="model.name === 'Tag'"></td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
              <div class="col-md-4">
                <div class="table-responsive">
                  <table class="table">
                    <tbody>
                      <tr class="mt-2">
                        <td class="float-rt">Item Qty</td>
                        <td><input type="text"
                            oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                            class="form-control" (change)="GetBillQty()" BlueBorder
                            [(ngModel)]="BarcodeSummaryHeader.ItemQty" formControlName="ItemQty"
                            [readonly]="model.name === 'Tag'">
                        </td>
                      </tr>
                      <tr class="mt-2">
                        <td class="float-rt">Gr. Wt(g)</td>
                        <td><input type="text"
                            oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                            class="form-control" id="Grosswt" formControlName="Grosswt"
                            [(ngModel)]="BarcodeSummaryHeader.Grosswt" (change)="GetNetWT();" BlueBorder
                            [readonly]="model.name === 'Tag'"></td>
                      </tr>
                      <tr class="mt-2">
                        <td class="float-rt">St Wt(g)</td>
                        <td><input type="text"
                            oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                            class="form-control" id="Stonewt" formControlName="Stonewt"
                            [(ngModel)]="BarcodeSummaryHeader.Stonewt" (change)="GetNetWT();" BlueBorder
                            [readonly]="model.name === 'Tag'"></td>
                      </tr>
                      <tr>
                        <td class="float-rt">N wt(g)</td>
                        <td><input type="text"
                            oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                            class="form-control" id="Netwt" formControlName="Netwt"
                            [(ngModel)]="BarcodeSummaryHeader.Netwt" [readonly]="model.name === 'Tag' || 'Non Tag'">
                        </td>
                      </tr>
                      <tr>
                        <td class="float-rt">Bill Qty</td>
                        <td><input type="number" class="form-control" id="BillQty"
                            [(ngModel)]="BarcodeSummaryHeader.BillQty" formControlName="BillQty" [readonly]="true">
                        </td>
                      </tr>
                      <tr>
                        <td class="float-rt text-red">Rate/Gram</td>
                        <td>
                          <!-- <input type="text" class="form-control" id="Rate" [(ngModel)]="BarcodeSummaryHeader.Rate"
                            formControlName="Rate" [readonly]="model.name === 'Tag' || 'Non Tag'"></td> -->
                          <input type="number" class="form-control" id="Rate" [(ngModel)]="BarcodeSummaryHeader.Rate"
                            formControlName="Rate" [readonly]="EnableRate" (change)="editRateGram()" BlueBorder>
                        </td>
                        <ng-container *ngIf="BarcodeSummaryHeader.PieceRate !='Y'">
                          <button class="btn btn-success btn-rounded" type="button" (click)="EditRate()"><i
                              class="fal fa-edit"></i>Edit</button>
                        </ng-container>
                      </tr>
                    </tbody>
                  </table>
                </div>
                <form [formGroup]="BillForm">
                  <div class="table-responsive">
                    <table class="table">
                      <tbody>
                        <tr>
                          <td class="float-rt">Bill Gr Wt</td>
                          <td><input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="BillGrosswt" [(ngModel)]="BillHeader.BillGrosswt"
                              [readonly]="model.name === 'Tag' || 'Non Tag'">
                          </td>
                        </tr>
                        <tr>
                          <td class="float-rt text-red">Billing N.Wt</td>
                          <td><input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" [(ngModel)]="BillHeader.NW" formControlName="NW" readonly></td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                </form>
              </div>
              <div class="col-md-4">
                <div class="table-responsive" *ngIf="model.name == 'Tag'">
                  <table class="table">
                    <tbody>
                      <tr class="mt-2">
                        <td class="float-rt">Add Qty</td>
                        <td><input type="number" id="AddQty" [(ngModel)]="BarcodeSummaryHeader.AddQty"
                            formControlName="AddQty" class="form-control" readonly> </td>
                      </tr>
                      <tr class="mt-2">
                        <td class="float-rt">Deduct Qty</td>
                        <td><input type="number" class="form-control" id="DeductQty"
                            [(ngModel)]="BarcodeSummaryHeader.DeductQty" formControlName="DeductQty" BlueBorder
                            (change)="DeductWeight(AddBarcodeForm)"></td>
                      </tr>
                      <!-- <tr class="mt-2">
                        <td class="float-rt">Deduct Gr.Wt</td>
                        <td><input type="text" class="form-control" readonly></td> -->
                      <!-- <td><button class="btn btn-danger waves-effect waves-light btn-rounded wd"><i
                                        class="fas fa-minus-circle" style="padding-right:5px"></i>Deduct
                                    </button></td> -->
                      <!-- </tr> -->
                      <tr class="mt-2">
                        <td class="float-rt">Add Wt</td>
                        <td><input type="text"
                            oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                            class="form-control" id="AddWt" (change)="calculateBarcodeDetails()" BlueBorder
                            [(ngModel)]="BarcodeSummaryHeader.AddWt" formControlName="AddWt" readonly></td>
                        <td *ngIf="EnableDisableAddWt">
                          <!-- <a class="btn btn-success waves-effect waves-light btn-rounded wd"
                          (click)="addWeight(AddBarcodeForm)" href="javascript:void(0)">
                          <i class="fas fa-plus-circle" style="padding-right:5px"></i>Add
                        </a> -->
                          <button class="btn btn-success btn-rounded" type="button"
                            (click)="addWeight(AddBarcodeForm)"><i class="fas fa-plus-circle"></i>Add</button>
                        </td>
                      </tr>
                    </tbody>
                  </table>

                </div>
                <table class="table">
                  <tbody>
                    <tr class="mt-2" *ngIf="model.name == 'Tag'">
                      <td class="float-rt">Deduct Gr.Wt</td>
                      <td><input type="text"
                          oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                          class="form-control" (change)="GetDeductWt()" href="javascript:void(0)"
                          [(ngModel)]="BarcodeSummaryHeader.DeductWt" BlueBorder
                          [readonly]="BarcodeSummaryHeader.PieceRate === 'Y'" formControlName="DeductWt"></td>
                      <!-- <td *ngIf="EnableDisableDedGrWt">
                          <a class="btn btn-danger waves-effect waves-light btn-rounded wd" (click)="DeductWeight(AddBarcodeForm)">
                          <i class="fas fa-minus-circle"  style="padding-right:5px"></i>Deduct
                          </a>
                      </td> -->
                    </tr>
                    <tr class="mt-2" *ngIf="model.name == 'Tag'">
                      <td class="float-rt">Deduct St.Wt</td>
                      <td> <input type="text"
                          oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                          class="form-control" [(ngModel)]="BarcodeSummaryHeader.DeductSWt"
                          (change)="DeductStWtCalc(dedstwt.value)" BlueBorder #dedstwt readonly>
                      </td>
                      <button class="btn btn-success btn-rounded" type="button" (click)="EditDedStwt()"><i
                          class="fal fa-edit"></i>Edit</button>
                    </tr>

                  </tbody>
                </table>
              </div>
            </div>
            <ng-container *ngIf="EnableJson">
              <pre>{{SalesPersonModel | json}}</pre>
            </ng-container>
            <ng-container *ngIf="EnableOrderDetails">
              <div class="row">
                <div class="col-md-4 col-lg-4 col-xlg-2">
                  <div class="card card-inverse card-info">
                    <div class="box bg-info text-center">
                      <h2 class="font-light text-white">{{OrderNo}}</h2>
                      <h6 class="text-white">Order No</h6>
                    </div>
                  </div>
                </div>
                <div class="col-md-4 col-lg-4 col-xlg-2">
                  <div class="card card-primary card-inverse">
                    <div class="box text-center">
                      <h2 class="font-light text-white">{{OrderRate}}</h2>
                      <h6 class="text-white">Order Rate</h6>
                    </div>
                  </div>
                </div>
                <div class="col-md-4 col-lg-4 col-xlg-2">
                  <div class="card card-inverse card-success">
                    <div class="box text-center">
                      <h2 class="font-light text-white">{{OrderKarat}}</h2>
                      <h6 class="text-white">Order Karat</h6>
                    </div>
                  </div>
                </div>
              </div>
            </ng-container>
            <br>
            <div class="row">
              <div class="col-md-12">
                <h4 class="modal-title"></h4>
                <fieldset class="scheduler-border">
                  <legend class="scheduler-border"><i class="far fa-wrench align-middle"></i> MC Details
                  </legend>
                  <div class="table-responsive">
                    <table class="table table-bordered">
                      <thead class="topbar">
                        <tr>
                          <th style="width: 180px;">MC Type</th>
                          <th>MC/Gram</th>
                          <th>MC/Piece</th>
                          <th>MC%</th>
                          <th>Wast.%</th>
                          <th>MC Amt</th>
                          <th>Wastage Grams</th>
                          <th *ngIf="model.name === 'Tag'">Action</th>
                        </tr>
                      </thead>
                      <tbody>
                        <tr *ngIf="EnableMCRate">
                          <td>
                            <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="McType"
                              [(ngModel)]="BarcodeSummaryHeader.McType" #OptionMode [disabled]="model.name == 'Tag'"
                              (change)="onchangeOption(OptionMode.value)">
                              <option value="select" [disabled]="model.name === 'Tag'" *ngFor="let MC of MCList"
                                [value]="MC.MC_ID">
                                {{MC.MC_NAME}}
                              </option>
                            </select>
                          </td>
                          <td>
                            <input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="MakingChargePerRs"
                              [(ngModel)]="BarcodeSummaryHeader.MakingChargePerRs" (change)="calculateBarcodeDetails()"
                              [readonly]="true" BlueBorder>
                          </td>
                          <td>
                            <input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="McPerPiece"
                              [disabled]="BarcodeSummaryHeader.PieceRate == 'Y'"
                              [(ngModel)]="BarcodeSummaryHeader.McPerPiece" (change)="calculateBarcodeDetails()"
                              [readonly]="true" BlueBorder>
                          </td>
                          <td>
                            <input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="McPercent"
                              [disabled]="BarcodeSummaryHeader.PieceRate == 'Y'"
                              [(ngModel)]="BarcodeSummaryHeader.McPercent" (change)="calculateBarcodeDetails()"
                              BlueBorder [readonly]="true">
                          </td>
                          <td>
                            <input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="WastPercent"
                              [disabled]="BarcodeSummaryHeader.PieceRate == 'Y'"
                              [(ngModel)]="BarcodeSummaryHeader.WastPercent" (change)="calculateBarcodeDetails()"
                              BlueBorder [readonly]="true">
                          </td>
                          <td>
                            <input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="McAmount"
                              [disabled]="BarcodeSummaryHeader.PieceRate == 'Y'"
                              [(ngModel)]="BarcodeSummaryHeader.McAmount" (change)="calculateBarcodeDetails()"
                              BlueBorder [readonly]="true">
                          </td>
                          <td>
                            <input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="WastageGrms"
                              [disabled]="BarcodeSummaryHeader.PieceRate == 'Y'"
                              [(ngModel)]="BarcodeSummaryHeader.WastageGrms" (change)="calculateBarcodeDetails()"
                              BlueBorder [readonly]="true">
                          </td>
                          <td *ngIf="model.name === 'Tag'">
                            <i class="fal fa-edit" (click)="EditMC()"></i>
                          </td>
                        </tr>
                        <tr *ngIf="!EnableMCRate">
                          <td>
                            <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="McType"
                              [(ngModel)]="BarcodeSummaryHeader.McType" #OptionMode [disabled]="model.name == 'Tag'"
                              (change)="onchangeOption(OptionMode.value)">
                              <option value="select" [disabled]="model.name === 'Tag'" *ngFor="let MC of MCList"
                                [value]="MC.MC_ID">
                                {{MC.MC_NAME}}
                              </option>
                            </select>
                          </td>
                          <td>
                            <input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="MakingChargePerRs"
                              [(ngModel)]="BarcodeSummaryHeader.MakingChargePerRs" (change)="calculateBarcodeDetails()"
                              BlueBorder
                              [readonly]="toggle == 'MC%' || toggle == 'NA' || toggle == 'MC PER PIECE' || toggle == 'MC Amount - Wastg' ">
                          </td>
                          <td>
                            <input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="McPerPiece"
                              [disabled]="BarcodeSummaryHeader.PieceRate == 'Y'" BlueBorder
                              [(ngModel)]="BarcodeSummaryHeader.McPerPiece" (change)="calculateBarcodeDetails()"
                              BlueBorder
                              [readonly]="toggle === 'MC%' || toggle ==='MC PER GRAM' || toggle ==='NA' || toggle == 'MC Amount - Wastg'">
                          </td>
                          <td>
                            <input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="McPercent"
                              [disabled]="BarcodeSummaryHeader.PieceRate == 'Y'"
                              [(ngModel)]="BarcodeSummaryHeader.McPercent" (change)="calculateBarcodeDetails()"
                              BlueBorder
                              [readonly]="toggle === 'MC PER GRAM' || toggle ==='NA' || toggle ==='NA' || toggle == 'MC PER PIECE' || toggle == 'MC Amount - Wastg' ">
                          </td>
                          <td>
                            <input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="WastPercent"
                              [disabled]="BarcodeSummaryHeader.PieceRate == 'Y'"
                              [(ngModel)]="BarcodeSummaryHeader.WastPercent" (change)="calculateBarcodeDetails()"
                              BlueBorder
                              [readonly]="toggle === 'MC%' || toggle ==='NA' || toggle == 'MC PER PIECE' || toggle == 'MC Amount - Wastg'">
                          </td>
                          <td>
                            <input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="McAmount"
                              [disabled]="BarcodeSummaryHeader.PieceRate == 'Y'"
                              [(ngModel)]="BarcodeSummaryHeader.McAmount" (change)="calculateBarcodeDetails()"
                              BlueBorder
                              [readonly]="toggle === 'MC%' || toggle ==='MC PER GRAM' || toggle ==='NA' || toggle == 'MC PER PIECE'">
                          </td>
                          <td>
                            <input type="text"
                              oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                              class="form-control" formControlName="WastageGrms"
                              [disabled]="BarcodeSummaryHeader.PieceRate == 'Y'"
                              [(ngModel)]="BarcodeSummaryHeader.WastageGrms" (change)="calculateBarcodeDetails()"
                              BlueBorder
                              [readonly]="toggle === 'MC%' || toggle ==='MC PER GRAM' || toggle ==='NA' || toggle == 'MC PER PIECE'">
                          </td>
                          <td *ngIf="model.name === 'Tag'">
                            <i class="fal fa-edit" (click)="EditMC()"></i>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                </fieldset>
              </div>
            </div>
          </div>
        </div>

        <div class="col-md-3">

          <div class="table-responsive">
            <ng-container *ngIf="EnableBarcodeAge">
              <div class="row">
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <ul class="price mt-6" [ngStyle]="{ 'background-color': BarcodeAge.BackgroundColour }">
                  <li>
                    <b [ngStyle]="{ 'background-color': BarcodeAge.ForegroundColour }">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                      <a style="background: white;"> {{BarcodeAge.AgeText}}</a>
                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    </b>
                  </li>
                </ul>
              </div>
              <br>
            </ng-container>
            <table class="table">
              <tbody>
                <tr>
                  <td class="float-rt">Vapor Loss</td>
                  <td> <input type="text" class="form-control" formControlName="VaporLossWeight"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" BlueBorder
                      [readonly]="EnableVaporLoss" [(ngModel)]="BarcodeSummaryHeader.VaporLossWeight
" (change)="calculateBarcodeDetails()"></td>
                  <td>
                    <ng-container *ngIf="BarcodeSummaryHeader.PieceRate !='Y'">
                      <i class="fas fa-edit" (click)="EditVaporLoss()"></i>
                    </ng-container>
                  </td>
                </tr>
                <tr *ngIf="toggle == 'MC%'">
                  <td class="float-rt">Discount MC%</td>
                  <td> <input type="text" style="background: yellowgreen;"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" formControlName="DiscountMc" [(ngModel)]="BarcodeSummaryHeader.DiscountMc"
                      (change)="calculateBarcodeDetails()" BlueBorder></td>
                </tr>
                <tr *ngIf="toggle == 'MC PER GRAM'">
                  <td class="float-rt">Discount MC/Grm</td>
                  <td> <input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly></td>
                </tr>
                <tr *ngIf="toggle == 'MC PER PIECE'">
                  <td class="float-rt">Discount MC/Piece</td>
                  <td> <input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly></td>
                </tr>

                <tr *ngIf="toggle == 'MC PER PIECE'">
                  <td class="float-rt">Total Sales Mc/piece</td>
                  <td> <input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" formControlName="McPerPiece" [(ngModel)]="BarcodeSummaryHeader.McPerPiece"
                      readonly></td>
                </tr>

                <tr *ngIf="toggle == 'MC PER GRAM'">
                  <td class="float-rt">Total Sales Mc/Grm</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.TotalSalesMc"
                      formControlName="TotalSalesMc"></td>
                </tr>
                <tr *ngIf="toggle == 'MC%'">
                  <td class="float-rt">Total Sales MC%</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.TotalSalesMc"
                      formControlName="TotalSalesMc"></td>
                </tr>
                <tr>
                  <td class="float-rt">Mc Discount Amt</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.McDiscountAmt"
                      formControlName="McDiscountAmt"></td>
                </tr>
                <tr>
                  <td class="float-rt">Metal Amt</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.GoldValue"
                      formControlName="GoldValue"></td>
                </tr>
                <tr *ngIf="PieceRate == 'Y' && model.name == 'Non Tag'">
                  <td class="float-rt">Piece Rate</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" (change)="calculateBarcodeDetails()" BlueBorder
                      [(ngModel)]="BarcodeSummaryHeader.VaAmount" formControlName="VaAmount"></td>
                <tr>
                <tr *ngIf="PieceRate == 'Y' && model.name == 'Tag'">
                  <td class="float-rt">MC Amt</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.VaAmount"
                      formControlName="VaAmount"></td>
                <tr>
                <tr *ngIf="PieceRate == 'N'">
                  <td class="float-rt">MC Amt</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.VaAmount"
                      formControlName="VaAmount"></td>
                </tr>
                <tr>
                  <td class="float-rt">Stone Amt</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.StoneCharges"
                      formControlName="StoneCharges"></td>
                </tr>
                <tr>
                  <td class="float-rt">Diamond Amt</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.DiamondCharges"
                      formControlName="DiamondCharges"></td>
                </tr>
                <tr>
                  <td class="float-rt">Item Amt</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.ItemTotalAfterDiscount"
                      formControlName="ItemTotalAfterDiscount"></td>
                </tr>
                <tr>
                  <td class="float-rt text-red">SGST Amt</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.SGSTAmount"
                      formControlName="SGSTAmount"></td>
                </tr>
                <tr>
                  <td class="float-rt text-red">CGST Amt</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.CGSTAmount"
                      formControlName="CGSTAmount"></td>
                </tr>
                <tr>
                  <td class="float-rt text-red">IGST Amt</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.IGSTAmount"
                      formControlName="IGSTAmount"></td>
                </tr>
                <tr>
                  <td class="float-rt text-red">CESS Amt</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly></td>
                </tr>
                <tr>
                  <td class="float-rt text-red">Total Amt</td>
                  <td><input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.ItemFinalAmount"
                      formControlName="ItemFinalAmount"></td>
                </tr>
                <tr>
                  <td class="float-rt">Discount</td>
                  <td>
                    <!-- <input type="text" class="form-control" readonly
                      [(ngModel)]="BarcodeSummaryHeader.ItemAdditionalDiscount"
                      formControlName="ItemAdditionalDiscount"> -->
                    <input type="text"
                      oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                      class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.McDiscountAmt"
                      formControlName="McDiscountAmt">
                  </td>
                </tr>
                <tr>
                  <td class="float-rt"></td>
                  <td>
                    <button type="button"
                      class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary"
                      (click)="PrintItemDetails()" id="exampleModalLabel"><i class="fal fa-print"></i> Print</button>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </form>
    <!-- stoneDetails -->
    <br>
    <div class="row">
      <div class="col-md-5">

      </div>
      <div class="col-md-6">

      </div>
      <div class="col-md-1">
        <button class="btn btn-success btn-rounded" type="button" (click)="editStoneDets()"><i
            class="fal fa-edit"></i>Edit</button>
      </div>
    </div>


    <div class="row">
      <div class="col-md-12">
        <h4 class="modal-title"></h4>
        <fieldset class="scheduler-border">
          <legend class="scheduler-border"><i class="fas fa-gem align-middle"></i> Stone Details

          </legend>
          <ng-container *ngIf="EnableStnDets">
            <button (click)="addrow()"
              class=" pull-right btn waves-effect waves-light btn-rounded btn-outline-secondary wd"
              [disabled]="true">Add
            </button>
          </ng-container>
          <ng-container *ngIf="!EnableStnDets">
            <button (click)="addrow()"
              class=" pull-right btn waves-effect waves-light btn-rounded btn-outline-secondary wd"
              [disabled]="EnableAddRow">Add
            </button>
          </ng-container>

          <div class="table-responsive">
            <table class="table table-bordered">
              <thead class="topbar">
                <tr>

                  <th>Type</th>
                  <th>Name</th>
                  <th>Qty</th>
                  <th>Carat</th>
                  <th>Weight</th>
                  <th>Rate/Carat</th>
                  <th>Amount</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody>
                <ng-container *ngIf="EnableStnDets">
                  <tr *ngFor="let field of fieldArray1; let i = index">
                    <td>
                      <select [(ngModel)]="field.Type" name="{{field.Type}}" class="form-control" #gstype
                        [disabled]="EnableStnDets" (change)="getStoneName(gstype.value,i)">
                        <option [ngValue]="null">Select</option>
                        <option *ngFor="let _stoneType of stoneType" [disabled]="EnableStnDets"
                          [value]="_stoneType.gs_code">
                          {{_stoneType.GSName}}
                        </option>
                      </select>
                    </td>
                    <td>
                      <select [(ngModel)]="field.Name" name="{{field.Name}}" class="form-control"
                        [disabled]="EnableStnDets">
                        <option [ngValue]="null">Select</option>
                        <option *ngFor="let _stoneName of stoneName[i]" [disabled]="EnableStnDets"
                          [value]="_stoneName.stone_name">
                          {{_stoneName.stone_name}}
                        </option>
                      </select>
                    </td>
                    <td><input type="number" [(ngModel)]="field.Qty" name="{{field.Qty}}" class="form-control"
                        placeholder="Quantity" [readonly]="EnableStnDets"></td>
                    <td><input type="number" [(ngModel)]="field.Carrat" name="{{field.Carrat}}" class="form-control"
                        placeholder="Carat" [readonly]="EnableStnDets" BlueBorder (change)="getStoneWt(i)"></td>


                    <td><input type="text"
                        oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                        [(ngModel)]="field.StoneWt" name="{{field.StoneWt}}" class="form-control" placeholder="Stone Wt"
                        readonly></td>
                    <td><input type="number" [(ngModel)]="field.Rate" name="{{field.Rate}}" class="form-control"
                        placeholder="Rate/Carat" [readonly]="EnableStnDets" BlueBorder (change)="getAmount(i)"></td>
                    <td><input type="number" [(ngModel)]="field.Amount" name="{{field.Amount}}" class="form-control"
                        placeholder="Amount" readonly></td>

                    <td>
                      <ng-container *ngIf="EnableEditDelbtn[i]">
                        <button class="btn btn-default btn-rounded wd" type="button" [disabled]="EnableStnDets"
                          (click)="editFieldValue(i)"><i class="fal fa-pencil-alt"></i> Edit</button>
                        <button class="btn btn-danger btn-rounded wd" type="button" [disabled]="EnableStnDets"
                          (click)="deleteFieldValue(i)"><i class="fal fa-trash-alt"></i> Delete</button>
                      </ng-container>
                      <ng-container *ngIf="EnableSaveCnlbtn[i]">
                        <button class="btn btn-success btn-rounded wd" type="button" [disabled]="EnableStnDets"
                          (click)="saveDataFieldValue(i)"><i class="fal fa-save"></i> Save</button>
                        <button class="btn btn-warning btn-rounded wd" type="button" [disabled]="EnableStnDets"
                          (click)="cancelDataFieldValue(i)"><i class="far fa-window-close"></i> Cancel</button>
                      </ng-container>
                    </td>
                  </tr>
                </ng-container>
                <ng-container *ngIf="!EnableStnDets">
                  <tr *ngFor="let field of fieldArray1; let i = index">
                    <td>
                      <select [(ngModel)]="field.Type" name="{{field.Type}}" class="form-control" #gstype
                        [disabled]="readonly[i]" (change)="getStoneName(gstype.value,i)">
                        <option [ngValue]="null">Select</option>
                        <option *ngFor="let _stoneType of stoneType" [disabled]="readonly[i]"
                          [value]="_stoneType.gs_code">
                          {{_stoneType.GSName}}
                        </option>
                      </select>
                    </td>
                    <td>
                      <select [(ngModel)]="field.Name" name="{{field.Name}}" class="form-control"
                        [disabled]="readonly[i]">
                        <option [ngValue]="null">Select</option>
                        <option *ngFor="let _stoneName of stoneName[i]" [disabled]="readonly[i]"
                          [value]="_stoneName.stone_name">
                          {{_stoneName.stone_name}}
                        </option>
                      </select>
                    </td>
                    <td><input type="number" [(ngModel)]="field.Qty" name="{{field.Qty}}" class="form-control"
                        placeholder="Quantity" [readonly]="readonly1[i]" BlueBorder (change)="getAmount(i)"></td>
                    <td><input type="number" [(ngModel)]="field.Carrat" name="{{field.Carrat}}" class="form-control"
                        placeholder="Carat" [readonly]="readonly1[i]" BlueBorder (change)="getStoneWt(i)"></td>


                    <td><input type="text"
                        oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                        [(ngModel)]="field.StoneWt" name="{{field.StoneWt}}" class="form-control" placeholder="Stone Wt"
                        readonly></td>
                    <td><input type="number" [(ngModel)]="field.Rate" name="{{field.Rate}}" class="form-control"
                        placeholder="Rate/Carat" [readonly]="readonlyRate[i]" BlueBorder (change)="getAmount(i)"></td>
                    <td><input type="number" [(ngModel)]="field.Amount" name="{{field.Amount}}" class="form-control"
                        placeholder="Amount" readonly></td>

                    <td>
                      <ng-container *ngIf="EnableEditDelbtn[i]">
                        <button class="btn btn-default btn-rounded wd" type="button" (click)="editFieldValue(i)"><i
                            class="fal fa-pencil-alt"></i> Edit</button>
                        <button class="btn btn-danger btn-rounded wd" type="button" (click)="deleteFieldValue(i)"><i
                            class="fal fa-trash-alt"></i> Delete</button>
                      </ng-container>
                      <ng-container *ngIf="EnableSaveCnlbtn[i]">
                        <button class="btn btn-success btn-rounded wd" type="button" (click)="saveDataFieldValue(i)"><i
                            class="fal fa-save"></i> Save</button>
                        <button class="btn btn-warning btn-rounded wd" type="button"
                          (click)="cancelDataFieldValue(i)"><i class="far fa-window-close"></i> Cancel</button>
                      </ng-container>
                    </td>
                  </tr>
                </ng-container>
              </tbody>
            </table>
          </div>
        </fieldset>
      </div>
    </div>
    <div class="row " *ngIf="EnableDisableCtrls">
      <div class="col-md-4">
        <div class="input-group">
          <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" type="button"
            (click)="SubmitBarcodeDetails()"><i class="fal fa-save"></i> Submit</button>
          <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" type="button"
            (click)="refreshExistData()"><i class="far fa-window-close"></i>
            Close</button>
        </div>
      </div>
    </div>
  </div>
  <ng-container *ngIf="EnableJson">
    <pre>{{BarcodeSummaryHeader | json}}</pre>
  </ng-container>
</div>


<!-- Add Weight Modal-->
<div class="modal overlay" id="addWeight" role="dialog" data-backdrop="static" data-keyboard="false">
  <form [formGroup]="AddForm" class="form-horizontal">
    <div class="modal-dialog ">
      <div class="modal-content ">

        <!-- Modal Header -->
        <div class="modal-header">
          <h4 class="modal-title">Sales Weight Addition</h4>
        </div>

        <!-- Modal body -->
        <div class="modal-body">
          <div class="form-group">
            <i class="fal fa-money-bill"></i>&nbsp; <span class="text-muted">Ref Barcode No: <h2 class="font-light">
                {{BarcodeSummaryHeader.BarcodeNo}}</h2></span>
          </div>
          <div class="form-group">
            <label *ngFor="let radiobutton of radioButtons" class="form-check-inline">
              <input type="radio" name="popups" (click)="PopupRadioBtnChnge(radiobutton.name)" class="form-check-input"
                [value]="radiobutton.name" [checked]="radiobutton.name === radiomodel.name">
              <h3 style="margin-top: 5px;">{{radiobutton.name}}
                <div class="tooltipdesign"><i class="fal fa-question-circle"></i>
                  <span class="tooltiptext tooltip-top">{{radiobutton.Tooltip}}</span>
                </div>
              </h3>
            </label>
          </div>
          <table class="table">
            <tbody>
              <tr *ngIf="radiomodel.name == 'Tag'">
                <td class="float-rt">Barcode No</td>
                <td><input type="text"
                    oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                    class="form-control" onKeyPress="if(this.value.length==10) return false;" #barcode
                    (change)="Addwt(barcode.value)" GreenBorder> </td>
              </tr>
              <tr>
                <td class="float-rt">Item Name</td>
                <td>
                  <select class="form-control mr-auto mt-2 mt-lg-0" #ItemName
                    (change)="getAddWtCounter(AddForm.value.ItemName)" [(ngModel)]="BarcodePopupHeader.ItemName"
                    formControlName="ItemName">
                    <option [ngValue]="null">Select</option>
                    <option *ngFor="let _ItemName of ItemList" [value]="_ItemName.Item_code"
                      [disabled]="radiomodel.name === 'Tag'">
                      {{_ItemName.Item}}
                    </option>
                  </select>
                </td>
              </tr>
              <tr>
                <td class="float-rt">Counter Code</td>
                <td><select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="BarcodePopupHeader.CounterCode"
                    formControlName="CounterCode">
                    <option [ngValue]="null">Select</option>
                    <option *ngFor="let _Counter of AddWtCounterList" [value]="_Counter"
                      [disabled]="radiomodel.name === 'Tag'">
                      {{_Counter}} </option>
                  </select></td>
              </tr>
              <tr *ngIf="radiomodel.name == 'Tag'">
                <td class="float-rt"> Qty</td>
                <td><input type="number" class="form-control" readonly [(ngModel)]="BarcodePopupHeader.ItQty"
                    formControlName="ItQty"></td>

              </tr>
              <tr *ngIf="radiomodel.name == 'Tag'">
                <td class="float-rt">Gross Wt</td>
                <td><input type="text"
                    oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                    class="form-control" readonly [(ngModel)]="BarcodePopupHeader.Grwt" formControlName="Grwt"></td>
              </tr>
              <tr *ngIf="radiomodel.name == 'Tag'">
                <td class="float-rt">Stone Wt</td>
                <td> <input type="text"
                    oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                    class="form-control" readonly [(ngModel)]="BarcodePopupHeader.Stwt" formControlName="Stwt"></td>
                <td></td>
              </tr>
              <tr>
              <tr *ngIf="radiomodel.name == 'Tag'">
                <td class="float-rt">Net Wt</td>
                <td> <input type="text"
                    oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                    class="form-control" readonly [(ngModel)]="BarcodePopupHeader.Ntwt" formControlName="Ntwt"></td>
                <td></td>
              </tr>
              <tr>
                <td class="float-rt">Add Qty</td>
                <td> <input type="number" class="form-control" [(ngModel)]="BarcodePopupHeader.AdQty"
                    formControlName="AdQty"></td>
                <td></td>
              </tr>
              <tr>
                <td class="float-rt"> Add Wt</td>
                <td> <input type="text"
                    oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                    class="form-control" [(ngModel)]="BarcodePopupHeader.AdWt" formControlName="AdWt"
                    [disabled]="EnableDisableAddWt"></td>
                <td></td>
              </tr>
            </tbody>
          </table>
        </div>
        <!-- Modal footer -->
        <div class="modal-footer">
          <div class="input-group">
            <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" type="button"
              (click)="SaveAddWt()"><i class="fal fa-save"></i> Save</button>
            <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" type="button"
              (click)="closeModal()"><i class="far fa-window-close"></i>
              Exit</button>
          </div>
        </div>
      </div>
    </div>
  </form>
</div>

<!-- Deduct Weight-->
<div class="modal overlay" id="DeductWeight" role="dialog" data-backdrop="static" data-keyboard="false">
  <form [formGroup]="DeductForm" class="form-horizontal">
    <div class="modal-dialog">
      <div class="modal-content">

        <!-- Modal Header -->
        <div class="modal-header">
          <h4 class="modal-title">Sales Weight Deduction</h4>

        </div>

        <!-- Modal body -->
        <div class="modal-body">
          <table class="table">
            <tbody>
              <tr>
                <td class="float-rt"> Barcode No</td>
                <td><input type="text"
                    oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                    class="form-control" [(ngModel)]="BarcodeSummaryHeader.BarcodeNo" formControlName="TagNo" readonly>
                </td>
              </tr>
              <tr>
                <td class="float-rt">Counter Code</td>
                <td><input type="text" class="form-control" [(ngModel)]="BarcodeSummaryHeader.CounterCode"
                    formControlName="CounterCode" readonly></td>
              </tr>
              <tr>
                <td class="float-rt">Item Name</td>
                <td><input type="text" class="form-control" [(ngModel)]="BarcodeSummaryHeader.ItemName"
                    formControlName="Iname" readonly></td>
              </tr>
              <tr>
                <td class="float-rt">Item Name</td>
                <td>
                  <select class="form-control mr-auto mt-2 mt-lg-0" #ItemName
                    (change)="getDedWtCounter(DeductForm.value.ItemName)" [(ngModel)]="DeductHeader.ItemName"
                    formControlName="ItemName">
                    <option [ngValue]="null">Select</option>
                    <option *ngFor="let _ItemName of ItemList" [value]="_ItemName.Item_code"
                      [disabled]="radiomodel.name === 'Tag'">
                      {{_ItemName.Item}}
                    </option>
                  </select>
                </td>
              </tr>
              <tr>
                <td class="float-rt">Counter Code</td>
                <td><select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="DeductHeader.DDCounter"
                    formControlName="DDCounter">
                    <option [ngValue]="null">Select</option>
                    <option *ngFor="let _Counter of DedWtCounterList" [value]="_Counter">
                      {{_Counter}} </option>
                  </select></td>
              </tr>
              <tr>
                <td class="float-rt">Qty</td>
                <td><input type="number" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.ItemQty"
                    formControlName="ItemQty"></td>
              </tr>
              <tr>
                <td class="float-rt">Gross Wt</td>
                <td><input type="text"
                    oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                    class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.Grosswt" formControlName="GW"></td>
              </tr>
              <tr>
                <td class="float-rt">Stone Wt</td>
                <td> <input type="text"
                    oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                    class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.Stonewt" formControlName="SW"></td>
                <td></td>
              </tr>
              <tr>
              <tr>
                <td class="float-rt">Net Wt</td>
                <td> <input type="text"
                    oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                    class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.Netwt" formControlName="NW"></td>
                <td></td>
              </tr>
              <tr>
                <td class="float-rt">Deduct Qty</td>
                <td> <input type="number" class="form-control" [(ngModel)]="DeductHeader.DedQty"
                    formControlName="DedQty">
                </td>
                <td></td>
              </tr>
              <tr>
                <td class="float-rt"> Deduct Wt</td>
                <td> <input type="text"
                    oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                    class="form-control" [(ngModel)]="DeductHeader.Dedwt" formControlName="Dedwt">
                </td>
                <td></td>
              </tr>
              <tr>
                <td class="float-rt"> Deduct StWt</td>
                <td> <input type="text"
                    oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
                    class="form-control" [(ngModel)]="DeductHeader.DedSW" formControlName="DedSW">
                </td>
                <td></td>
              </tr>
            </tbody>
          </table>
        </div>
        <ng-container *ngIf="EnableJson">
          <pre>{{ BarcodeSummaryHeader| json }}</pre>
        </ng-container>
        <!-- Modal footer -->
        <div class="modal-footer">
          <div class="input-group">
            <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" type="button"
              (click)="SaveDeductWt()"><i class="fal fa-save"></i> Save</button>
            <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" type="button"
              (click)="closeModal()"><i class="far fa-window-close"></i>
              Exit</button>
          </div>
        </div>
      </div>
    </div>
  </form>
</div>

<div id="PermissonModalRateGram" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Prodigy</h4>
        <button type="button" class="close" (click)="close()" aria-label="Close">
          <span aria-hidden="true">&times;</span></button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="OrderNo">2. Password</label>
          <input type="password" min="0" class="form-control" name="pwd" placeholder="Password"
            (keyup.enter)="passWordRateGram(PwdRate.value)" #PwdRate>
        </div>
        <div class="form-group">
          <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary"
            (click)="passWordRateGram(PwdRate.value)">Submit</button>
        </div>
      </div>
    </div>

  </div>
</div>

<div id="PermissonModalVaporLess" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Prodigy</h4>
        <button type="button" class="close" (click)="closeVaporLoss()" aria-label="Close">
          <span aria-hidden="true">&times;</span></button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="OrderNo">751. Password</label>
          <input type="password" min="0" class="form-control" name="pwd" placeholder="Password"
            (keyup.enter)="passWordVaporLess(VaporLossEdit.value)" #VaporLossEdit>
        </div>
        <div class="form-group">
          <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary"
            (click)="passWordVaporLess(VaporLossEdit.value)">Submit</button>
        </div>
      </div>
    </div>

  </div>
</div>




<div id="PermissonMCModal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Prodigy</h4>
        <button type="button" class="close" (click)="closeMC()" aria-label="Close">
          <span aria-hidden="true">&times;</span></button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="OrderNo">51. Password</label>
          <input type="password" min="0" class="form-control" name="pwd" placeholder="Password"
            (keyup.enter)="passWordMC(PwdMC.value)" #PwdMC>
        </div>
        <div class="form-group">
          <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary"
            (click)="passWordMC(PwdMC.value)">Submit</button>
        </div>
      </div>
    </div>

  </div>
</div>

<div id="PermissonStnDetsModal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Prodigy</h4>
        <button type="button" class="close" (click)="closeStnDets()" aria-label="Close">
          <span aria-hidden="true">&times;</span></button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="OrderNo">13. Password</label>
          <input type="password" min="0" class="form-control" name="pwd" placeholder="Password"
            (keyup.enter)="passWordStnDets(PwdStnDet.value)" #PwdStnDet>
        </div>
        <div class="form-group">
          <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary"
            (click)="passWordStnDets(PwdStnDet.value)">Submit</button>
        </div>
      </div>
    </div>

  </div>
</div>


<div class="modal fade" id="PrintDetailsTextTab" tabindex="-1" role="dialog" aria-labelledby="PrintDetailsTextTabLabel"
  aria-hidden="true" data-backdrop="static" data-keyboard="false">
  <div class="modal-dialog modal-lg" role="document" style="max-width: 900px">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary"
          id="PrintDetailsTextTabLabel" (click)=printDetailsPlainText()><i class="fal fa-print"></i> Print</button>
        <button type="button" class="close" (click)="ClosePrint()" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="container invoice-box htmlPrint" id="print-closed-section" style="max-width: 900px;border-width: 2em">
        <pre>{{PrintDetailsTextDetails}}</pre>
      </div>
    </div>
  </div>
</div>