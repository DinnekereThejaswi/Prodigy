(window.webpackJsonp=window.webpackJsonp||[]).push([[5,43,44,45],{"19kq":function(e,t,a){"use strict";a.r(t),t.default='<div>\n  <div>\n    <form [formGroup]="AddBarcodeForm" class="form-horizontal">\n      <div class="row">\n        <div class="col-md-4">\n          <label *ngFor="let radiobutton of radioItems" class="form-check-inline">\n            <input type="radio" name="options" [disabled]="isDisabled" (click)="OnRadioBtnChnge(radiobutton.name)"\n              class="form-check-input" [value]="radiobutton.name" [checked]="radiobutton.name === model.name">\n            <h3 style="margin-top: 5px;">{{radiobutton.name}}\n              <div class="tooltipdesign"><i class="fal fa-question-circle"></i>\n                <span class="tooltiptext tooltip-top">{{radiobutton.Tooltip}}</span>\n              </div>\n            </h3>\n          </label>\n        </div>\n        <div class="col-md-4">\n          <input type="text" class="form-control" id="BarcodeNo" #tagno [(ngModel)]="BarcodeSummaryHeader.BarcodeNo"\n            formControlName="BarcodeNo" [readonly]="readOnly" placeholder="Barcode/Tagno"\n            (keyup.enter)="getDetails(tagno.value)">\n        </div>\n        \x3c!-- <div class="col-md-4">\n          <div class="form-group" style="float:right">F\n            <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" type="button"\n              (click)="SubmitBarcodeDetails()"><i class="fal fa-save"></i> Submit</button>\n            <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" type="button"><i\n                class="far fa-window-close"></i>\n              Cancel</button>\n          </div>\n        </div> --\x3e\n      </div>\n      <div class="row">\n        <div class="col-md-9">\n          <div class="columns">\n            <div class="row">\n              <div class="col-md-4">\n                \x3c!-- *ngIf="model.option.name == \'Tag\'" --\x3e\n                <div class="table-responsive">\n                  <table class="table">\n                    <tbody>\n                      <tr class="mt-2">\n                        <td class="float-rt">Staff</td>\n                        <td><select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="BarcodeSummaryHeader.SalCode"\n                            formControlName="SalCode">\n                            <option [ngValue]="null">Select</option>\n                            <option *ngFor="let _List of StaffList" [value]="_List.sal_code">\n                              {{_List.sal_name}}\n                            </option>\n                          </select></td>\n                      </tr>\n                      <tr class="mt-2">\n                        <td class="float-rt">GS</td>\n                        <td><select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="BarcodeSummaryHeader.GsCode"\n                            #GsCode (change)="getItemList(AddBarcodeForm.value.GsCode)" formControlName="GsCode">\n                            <option [ngValue]="null" [disabled]="model.name === \'Tag\'">Select</option>\n                            <option *ngFor="let _GSList of GSList" [value]="_GSList.gs_code"\n                              [disabled]="model.name === \'Tag\'">\n                              {{_GSList.GSName}} </option>\n                          </select></td>\n                      </tr>\n                      <tr class="mt-2">\n                        <td class="float-rt">Item</td>\n                        <td> <select class="form-control mr-auto mt-2 mt-lg-0" #ItemName\n                            (change)="getCounter(AddBarcodeForm.value.ItemName)"\n                            [(ngModel)]="BarcodeSummaryHeader.ItemName" formControlName="ItemName">\n                            <option [disabled]="model.name === \'Tag\'" [ngValue]="null">Select</option>\n                            <option *ngFor="let _ItemName of ItemList" [value]="_ItemName.Item_code"\n                              [disabled]="model.name === \'Tag\'">\n                              {{_ItemName.Item}}\n                            </option>\n                          </select></td>\n                      </tr>\n\n                      <tr class="mt-2">\n                        <td class="float-rt">Counter</td>\n                        <td> <select class="form-control mr-auto mt-2 mt-lg-0"\n                            [(ngModel)]="BarcodeSummaryHeader.CounterCode" formControlName="CounterCode">\n                            <option [disabled]="model.name === \'Tag\'" [ngValue]="null">Select</option>\n                            <option *ngFor="let _Counter of CounterList" [value]="_Counter"\n                              [disabled]="model.name === \'Tag\'">\n                              {{_Counter}} </option>\n                          </select></td>\n                      </tr>\n                      <tr class="mt-2">\n                        <td class="float-rt">Piece Item</td>\n                        <td> <select class="form-control mr-auto mt-2 mt-lg-0"\n                            [(ngModel)]="BarcodeSummaryHeader.PieceRate" formControlName="PieceRate">\n                            <option [disabled]="model.name === \'Tag\'" [ngValue]="null">Select</option>\n                            <option *ngFor="let item of KaratAndPieceItemList" [value]="item.IsPiece"\n                              [disabled]="model.name === \'Tag\'">\n                              {{item.IsPiece}}\n                            </option>\n                          </select></td>\n                      </tr>\n                      <tr class="mt-2">\n                        <td class="float-rt">Karat</td>\n                        <td> <select class="form-control mr-auto mt-2 mt-lg-0" #Karat formControlName="Karat"\n                            (change)="getRate(AddBarcodeForm)" [(ngModel)]="BarcodeSummaryHeader.Karat">\n                            <option [disabled]="model.name === \'Tag\'" [ngValue]="null">Select</option>\n                            <option *ngFor="let Karat of KaratAndPieceItemList" [value]="Karat.Karat"\n                              [disabled]="model.name === \'Tag\'">\n                              {{Karat.Karat}}\n                            </option>\n                          </select></td>\n                      </tr>\n                      <tr class="mt-2">\n                        <td class="float-rt">Design</td>\n                        <td><input type="text" class="form-control" [(ngModel)]="BarcodeSummaryHeader.DesignName"\n                            formControlName="DesignName" [readonly]="model.name === \'Tag\'"></td>\n                      </tr>\n                      <tr class="mt-2">\n                        <td class="float-rt">Size</td>\n                        <td><input type="text" class="form-control" [(ngModel)]="BarcodeSummaryHeader.ItemSize"\n                            formControlName="ItemSize" [readonly]="model.name === \'Tag\'"></td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <div class="col-md-4">\n                <div class="table-responsive">\n                  <table class="table">\n                    <tbody>\n                      <tr class="mt-2">\n                        <td class="float-rt">Item Qty</td>\n                        <td><input type="number" class="form-control" (change)="GetBillQty()"\n                            [(ngModel)]="BarcodeSummaryHeader.ItemQty" formControlName="ItemQty"\n                            [readonly]="model.name === \'Tag\'">\n                        </td>\n                      </tr>\n                      <tr class="mt-2">\n                        <td class="float-rt">Gr. Wt(g)</td>\n                        <td><input type="number" class="form-control" id="Grosswt" formControlName="Grosswt"\n                            [(ngModel)]="BarcodeSummaryHeader.Grosswt" (change)="GetNetWT();"\n                            [readonly]="model.name === \'Tag\'"></td>\n                      </tr>\n                      <tr class="mt-2">\n                        <td class="float-rt">St Wt(g)</td>\n                        <td><input type="number" class="form-control" id="Stonewt" formControlName="Stonewt"\n                            [(ngModel)]="BarcodeSummaryHeader.Stonewt" (change)="GetNetWT();"\n                            [readonly]="model.name === \'Tag\'"></td>\n                      </tr>\n                      <tr>\n                        <td class="float-rt">N wt(g)</td>\n                        <td><input type="text" class="form-control" id="Netwt" formControlName="Netwt"\n                            [(ngModel)]="BarcodeSummaryHeader.Netwt" [readonly]="model.name === \'Tag\' || \'Non Tag\'">\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class="float-rt">Bill Qty</td>\n                        <td><input type="text" class="form-control" id="BillQty"\n                            [(ngModel)]="BarcodeSummaryHeader.BillQty" formControlName="BillQty" [readonly]="true">\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class="float-rt text-red">Rate/Gram</td>\n                        <td>\n                          \x3c!-- <input type="text" class="form-control" id="Rate" [(ngModel)]="BarcodeSummaryHeader.Rate"\n                            formControlName="Rate" [readonly]="model.name === \'Tag\' || \'Non Tag\'"></td> --\x3e\n                          <input type="text" class="form-control" id="Rate" [(ngModel)]="BarcodeSummaryHeader.Rate"\n                            formControlName="Rate" [readonly]="EnableRate" (change)="editRateGram()"></td>\n                        <button class="btn btn-success btn-rounded" type="button" (click)="EditRate()"><i\n                            class="fal fa-edit"></i>Edit</button>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <form [formGroup]="BillForm">\n                  <div class="table-responsive">\n                    <table class="table">\n                      <tbody>\n                        <tr>\n                          <td class="float-rt">Bill Gr Wt</td>\n                          <td><input type="text" class="form-control" formControlName="BillGrosswt"\n                              [(ngModel)]="BillHeader.BillGrosswt" [readonly]="model.name === \'Tag\' || \'Non Tag\'">\n                          </td>\n                        </tr>\n                        <tr>\n                          <td class="float-rt text-red">Billing N.Wt</td>\n                          <td><input type="text" class="form-control" [(ngModel)]="BillHeader.NW" formControlName="NW"\n                              readonly></td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </form>\n              </div>\n              <div class="col-md-4">\n                <div class="table-responsive" *ngIf="model.name == \'Tag\'">\n                  <table class="table">\n                    <tbody>\n                      <tr class="mt-2">\n                        <td class="float-rt">Add Qty</td>\n                        <td><input type="text" id="AddQty" [(ngModel)]="BarcodeSummaryHeader.AddQty"\n                            formControlName="AddQty" class="form-control" readonly> </td>\n                      </tr>\n                      <tr class="mt-2">\n                        <td class="float-rt">Deduct Qty</td>\n                        <td><input type="text" class="form-control" id="DeductQty"\n                            [(ngModel)]="BarcodeSummaryHeader.DeductQty" formControlName="DeductQty"\n                            (change)="DeductWeight(AddBarcodeForm)"></td>\n                      </tr>\n                      \x3c!-- <tr class="mt-2">\n                        <td class="float-rt">Deduct Gr.Wt</td>\n                        <td><input type="text" class="form-control" readonly></td> --\x3e\n                      \x3c!-- <td><button class="btn btn-danger waves-effect waves-light btn-rounded wd"><i\n                                        class="fas fa-minus-circle" style="padding-right:5px"></i>Deduct\n                                    </button></td> --\x3e\n                      \x3c!-- </tr> --\x3e\n                      <tr class="mt-2">\n                        <td class="float-rt">Add Wt</td>\n                        <td><input type="text" class="form-control" id="AddWt" (change)="calculateBarcodeDetails()"\n                            [(ngModel)]="BarcodeSummaryHeader.AddWt" formControlName="AddWt" readonly></td>\n                        <td *ngIf="EnableDisableAddWt">\n                          \x3c!-- <a class="btn btn-success waves-effect waves-light btn-rounded wd"\n                          (click)="addWeight(AddBarcodeForm)" href="javascript:void(0)">\n                          <i class="fas fa-plus-circle" style="padding-right:5px"></i>Add\n                        </a> --\x3e\n                          <button class="btn btn-success btn-rounded" type="button"\n                            (click)="addWeight(AddBarcodeForm)"><i class="fas fa-plus-circle"></i>Add</button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n\n                </div>\n                <table class="table">\n                  <tbody>\n                    <tr class="mt-2" *ngIf="model.name == \'Tag\'">\n                      <td class="float-rt">Deduct Gr.Wt</td>\n                      <td><input type="text" class="form-control" (change)="GetDeductWt()" href="javascript:void(0)"\n                          [(ngModel)]="BarcodeSummaryHeader.DeductWt" formControlName="DeductWt"></td>\n                      \x3c!-- <td *ngIf="EnableDisableDedGrWt">\n                          <a class="btn btn-danger waves-effect waves-light btn-rounded wd" (click)="DeductWeight(AddBarcodeForm)">\n                          <i class="fas fa-minus-circle"  style="padding-right:5px"></i>Deduct\n                          </a>\n                      </td> --\x3e\n                    </tr>\n                    <tr class="mt-2" *ngIf="model.name == \'Tag\'">\n                      <td class="float-rt">Deduct St.Wt</td>\n                      <td> <input type="text" class="form-control" [(ngModel)]="BarcodeSummaryHeader.DeductSWt"\n                          (change)="DeductStWtCalc(dedstwt.value)" #dedstwt readonly>\n                      </td>\n                      <button class="btn btn-success btn-rounded" type="button" (click)="EditDedStwt()"><i\n                          class="fal fa-edit"></i>Edit</button>\n                    </tr>\n\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            \x3c!-- <pre>{{SalesPersonModel | json}}</pre> --\x3e\n            <ng-container *ngIf="EnableOrderDetails">\n              <div class="row">\n                <div class="col-md-4 col-lg-4 col-xlg-2">\n                  <div class="card card-inverse card-info">\n                    <div class="box bg-info text-center">\n                      <h2 class="font-light text-white">{{OrderNo}}</h2>\n                      <h6 class="text-white">Order No</h6>\n                    </div>\n                  </div>\n                </div>\n                <div class="col-md-4 col-lg-4 col-xlg-2">\n                  <div class="card card-primary card-inverse">\n                    <div class="box text-center">\n                      <h2 class="font-light text-white">{{OrderRate}}</h2>\n                      <h6 class="text-white">Order Rate</h6>\n                    </div>\n                  </div>\n                </div>\n                <div class="col-md-4 col-lg-4 col-xlg-2">\n                  <div class="card card-inverse card-success">\n                    <div class="box text-center">\n                      <h2 class="font-light text-white">{{OrderKarat}}</h2>\n                      <h6 class="text-white">Order Karat</h6>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n            <br>\n            <div class="row">\n              <div class="col-md-12">\n                <h4 class="modal-title"></h4>\n                <fieldset class="scheduler-border">\n                  <legend class="scheduler-border"><i class="far fa-wrench align-middle"></i> MC Details\n                  </legend>\n                  <div class="table-responsive">\n                    <table class="table table-bordered">\n                      <thead class="topbar">\n                        <tr>\n                          <th style="width: 180px;">MC Type</th>\n                          <th>MC/Gram</th>\n                          <th>MC/Piece</th>\n                          <th>MC%</th>\n                          <th>Wast.%</th>\n                          <th>MC Amt</th>\n                          <th>Wastage Grams</th>\n                          <th *ngIf="model.name === \'Tag\'">Action</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr *ngIf="EnableMCRate">\n                          <td>\n                            <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="McType"\n                              [(ngModel)]="BarcodeSummaryHeader.McType" #OptionMode [disabled]="model.name == \'Tag\'"\n                              (change)="onchangeOption(OptionMode.value)">\n                              <option value="select" [disabled]="model.name === \'Tag\'" *ngFor="let MC of MCList"\n                                [value]="MC.MC_ID">\n                                {{MC.MC_NAME}}\n                              </option>\n                            </select>\n                          </td>\n                          <td>\n                            <input type="text" class="form-control" formControlName="MakingChargePerRs"\n                              [(ngModel)]="BarcodeSummaryHeader.MakingChargePerRs" (change)="calculateBarcodeDetails()"\n                              [readonly]="true">\n                          </td>\n                          <td>\n                            <input type="text" class="form-control" formControlName="McPerPiece"\n                              [disabled]="BarcodeSummaryHeader.PieceRate == \'Y\'"\n                              [(ngModel)]="BarcodeSummaryHeader.McPerPiece" (change)="calculateBarcodeDetails()"\n                              [readonly]="true">\n                          </td>\n                          <td>\n                            <input type="text" class="form-control" formControlName="McPercent"\n                              [disabled]="BarcodeSummaryHeader.PieceRate == \'Y\'"\n                              [(ngModel)]="BarcodeSummaryHeader.McPercent" (change)="calculateBarcodeDetails()"\n                              [readonly]="true">\n                          </td>\n                          <td>\n                            <input type="text" class="form-control" formControlName="WastPercent"\n                              [disabled]="BarcodeSummaryHeader.PieceRate == \'Y\'"\n                              [(ngModel)]="BarcodeSummaryHeader.WastPercent" (change)="calculateBarcodeDetails()"\n                              [readonly]="true">\n                          </td>\n                          <td>\n                            <input type="text" class="form-control" formControlName="McAmount"\n                              [disabled]="BarcodeSummaryHeader.PieceRate == \'Y\'"\n                              [(ngModel)]="BarcodeSummaryHeader.McAmount" (change)="calculateBarcodeDetails()"\n                              [readonly]="true">\n                          </td>\n                          <td>\n                            <input type="text" class="form-control" formControlName="WastageGrms"\n                              [disabled]="BarcodeSummaryHeader.PieceRate == \'Y\'"\n                              [(ngModel)]="BarcodeSummaryHeader.WastageGrms" (change)="calculateBarcodeDetails()"\n                              [readonly]="true">\n                          </td>\n                          <td *ngIf="model.name === \'Tag\'">\n                            <i class="fal fa-edit" (click)="EditMC()"></i>\n                          </td>\n                        </tr>\n                        <tr *ngIf="!EnableMCRate">\n                          <td>\n                            <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="McType"\n                              [(ngModel)]="BarcodeSummaryHeader.McType" #OptionMode [disabled]="model.name == \'Tag\'"\n                              (change)="onchangeOption(OptionMode.value)">\n                              <option value="select" [disabled]="model.name === \'Tag\'" *ngFor="let MC of MCList"\n                                [value]="MC.MC_ID">\n                                {{MC.MC_NAME}}\n                              </option>\n                            </select>\n                          </td>\n                          <td>\n                            <input type="text" class="form-control" formControlName="MakingChargePerRs"\n                              [(ngModel)]="BarcodeSummaryHeader.MakingChargePerRs" (change)="calculateBarcodeDetails()"\n                              [readonly]="toggle == \'MC%\' || toggle == \'NA\' || toggle == \'MC PER PIECE\' || toggle == \'MC Amount - Wastg\' ">\n                          </td>\n                          <td>\n                            <input type="text" class="form-control" formControlName="McPerPiece"\n                              [disabled]="BarcodeSummaryHeader.PieceRate == \'Y\'"\n                              [(ngModel)]="BarcodeSummaryHeader.McPerPiece" (change)="calculateBarcodeDetails()"\n                              [readonly]="toggle === \'MC%\' || toggle ===\'MC PER GRAM\' || toggle ===\'NA\' || toggle == \'MC Amount - Wastg\'">\n                          </td>\n                          <td>\n                            <input type="text" class="form-control" formControlName="McPercent"\n                              [disabled]="BarcodeSummaryHeader.PieceRate == \'Y\'"\n                              [(ngModel)]="BarcodeSummaryHeader.McPercent" (change)="calculateBarcodeDetails()"\n                              [readonly]="toggle === \'MC PER GRAM\' || toggle ===\'NA\' || toggle ===\'NA\' || toggle == \'MC PER PIECE\' || toggle == \'MC Amount - Wastg\' ">\n                          </td>\n                          <td>\n                            <input type="text" class="form-control" formControlName="WastPercent"\n                              [disabled]="BarcodeSummaryHeader.PieceRate == \'Y\'"\n                              [(ngModel)]="BarcodeSummaryHeader.WastPercent" (change)="calculateBarcodeDetails()"\n                              [readonly]="toggle === \'MC%\' || toggle ===\'NA\' || toggle == \'MC PER PIECE\' || toggle == \'MC Amount - Wastg\'">\n                          </td>\n                          <td>\n                            <input type="text" class="form-control" formControlName="McAmount"\n                              [disabled]="BarcodeSummaryHeader.PieceRate == \'Y\'"\n                              [(ngModel)]="BarcodeSummaryHeader.McAmount" (change)="calculateBarcodeDetails()"\n                              [readonly]="toggle === \'MC%\' || toggle ===\'MC PER GRAM\' || toggle ===\'NA\' || toggle == \'MC PER PIECE\'">\n                          </td>\n                          <td>\n                            <input type="text" class="form-control" formControlName="WastageGrms"\n                              [disabled]="BarcodeSummaryHeader.PieceRate == \'Y\'"\n                              [(ngModel)]="BarcodeSummaryHeader.WastageGrms" (change)="calculateBarcodeDetails()"\n                              [readonly]="toggle === \'MC%\' || toggle ===\'MC PER GRAM\' || toggle ===\'NA\' || toggle == \'MC PER PIECE\'">\n                          </td>\n                          <td *ngIf="model.name === \'Tag\'">\n                            <i class="fal fa-edit" (click)="EditMC()"></i>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </fieldset>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class="col-md-3">\n          \x3c!-- <input type="text" class="form-control mb-2" readonly>\n                        <div class="profile-img">\n                          <img src="https://icon-library.net/images/jewelry-icon/jewelry-icon-14.jpg"\n                            style="height:50px;width: 50px;" alt="avatar">\n                        </div> --\x3e\n\n          <div class="table-responsive">\n            <table class="table">\n              <tbody>\n                <tr *ngIf="toggle == \'MC%\'">\n                  <td class="float-rt">Discount MC%</td>\n                  <td> <input type="text" class="form-control" formControlName="DiscountMc"\n                      [(ngModel)]="BarcodeSummaryHeader.DiscountMc" (change)="calculateBarcodeDetails()"></td>\n                </tr>\n                <tr *ngIf="toggle == \'MC PER GRAM\'">\n                  <td class="float-rt">Discount MC/Grm</td>\n                  <td> <input type="text" class="form-control" readonly></td>\n                </tr>\n                <tr *ngIf="toggle == \'MC PER PIECE\'">\n                  <td class="float-rt">Discount MC/Piece</td>\n                  <td> <input type="text" class="form-control" readonly></td>\n                </tr>\n\n                <tr *ngIf="toggle == \'MC PER PIECE\'">\n                  <td class="float-rt">Total Sales Mc/piece</td>\n                  <td> <input type="text" class="form-control" formControlName="McPerPiece"\n                      [(ngModel)]="BarcodeSummaryHeader.McPerPiece" readonly></td>\n                </tr>\n\n                <tr *ngIf="toggle == \'MC PER GRAM\'">\n                  <td class="float-rt">Total Sales Mc/Grm</td>\n                  <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.TotalSalesMc"\n                      formControlName="TotalSalesMc"></td>\n                </tr>\n                <tr *ngIf="toggle == \'MC%\'">\n                  <td class="float-rt">Total Sales MC%</td>\n                  <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.TotalSalesMc"\n                      formControlName="TotalSalesMc"></td>\n                </tr>\n                <tr>\n                  <td class="float-rt">Mc Discount Amt</td>\n                  <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.McDiscountAmt"\n                      formControlName="McDiscountAmt"></td>\n                </tr>\n                <tr>\n                  <td class="float-rt">Metal Amt</td>\n                  <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.GoldValue"\n                      formControlName="GoldValue"></td>\n                </tr>\n                <tr *ngIf="PieceRate == \'Y\' && model.name == \'Non Tag\'">\n                  <td class="float-rt">Piece Rate</td>\n                  <td><input type="text" class="form-control" (change)="calculateBarcodeDetails()"\n                      [(ngModel)]="BarcodeSummaryHeader.VaAmount" formControlName="VaAmount"></td>\n                <tr>\n                <tr *ngIf="PieceRate == \'Y\' && model.name == \'Tag\'">\n                  <td class="float-rt">MC Amt</td>\n                  <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.VaAmount"\n                      formControlName="VaAmount"></td>\n                <tr>\n                <tr *ngIf="PieceRate == \'N\'">\n                  <td class="float-rt">MC Amt</td>\n                  <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.VaAmount"\n                      formControlName="VaAmount"></td>\n                </tr>\n                <tr>\n                  <td class="float-rt">Stone Amt</td>\n                  <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.StoneCharges"\n                      formControlName="StoneCharges"></td>\n                </tr>\n                <tr>\n                  <td class="float-rt">Diamond Amt</td>\n                  <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.DiamondCharges"\n                      formControlName="DiamondCharges"></td>\n                </tr>\n                <tr>\n                  <td class="float-rt">Item Amt</td>\n                  <td><input type="text" class="form-control" readonly\n                      [(ngModel)]="BarcodeSummaryHeader.ItemTotalAfterDiscount"\n                      formControlName="ItemTotalAfterDiscount"></td>\n                </tr>\n                <tr>\n                  <td class="float-rt text-red">SGST Amt</td>\n                  <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.SGSTAmount"\n                      formControlName="SGSTAmount"></td>\n                </tr>\n                <tr>\n                  <td class="float-rt text-red">CGST Amt</td>\n                  <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.CGSTAmount"\n                      formControlName="CGSTAmount"></td>\n                </tr>\n                <tr>\n                  <td class="float-rt text-red">IGST Amt</td>\n                  <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.IGSTAmount"\n                      formControlName="IGSTAmount"></td>\n                </tr>\n                <tr>\n                  <td class="float-rt text-red">CESS Amt</td>\n                  <td><input type="text" class="form-control" readonly></td>\n                </tr>\n                <tr>\n                  <td class="float-rt text-red">Total Amt</td>\n                  <td><input type="text" class="form-control" readonly\n                      [(ngModel)]="BarcodeSummaryHeader.ItemFinalAmount" formControlName="ItemFinalAmount"></td>\n                </tr>\n                <tr>\n                  <td class="float-rt">Discount</td>\n                  <td>\n                    \x3c!-- <input type="text" class="form-control" readonly\n                      [(ngModel)]="BarcodeSummaryHeader.ItemAdditionalDiscount"\n                      formControlName="ItemAdditionalDiscount"> --\x3e\n                    <input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.McDiscountAmt"\n                      formControlName="McDiscountAmt">\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </form>\n    \x3c!-- stoneDetails --\x3e\n\n    <div class="row">\n      <div class="col-md-5">\n\n      </div>\n      <div class="col-md-6">\n\n      </div>\n      <div class="col-md-1">\n        <button class="btn btn-success btn-rounded" type="button" (click)="editStoneDets()"><i\n            class="fal fa-edit"></i>Edit</button>\n      </div>\n    </div>\n\n\n    <div class="row">\n      <div class="col-md-12">\n        <h4 class="modal-title"></h4>\n        <fieldset class="scheduler-border">\n          <legend class="scheduler-border"><i class="fas fa-gem align-middle"></i> Stone Details\n\n          </legend>\n          <ng-container *ngIf="EnableStnDets">\n            <button (click)="addrow()"\n              class=" pull-right btn waves-effect waves-light btn-rounded btn-outline-secondary wd"\n              [disabled]="true">Add\n            </button>\n          </ng-container>\n          <ng-container *ngIf="!EnableStnDets">\n            <button (click)="addrow()"\n              class=" pull-right btn waves-effect waves-light btn-rounded btn-outline-secondary wd"\n              [disabled]="EnableAddRow">Add\n            </button>\n          </ng-container>\n\n          <div class="table-responsive">\n            <table class="table table-bordered">\n              <thead class="topbar">\n                <tr>\n\n                  <th>Type</th>\n                  <th>Name</th>\n                  <th>Qty</th>\n                  <th>Carat</th>\n                  <th>Weight</th>\n                  <th>Rate/Carat</th>\n                  <th>Amount</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <ng-container *ngIf="EnableStnDets">\n                  <tr *ngFor="let field of fieldArray1; let i = index">\n                    <td>\n                      <select [(ngModel)]="field.Type" name="{{field.Type}}" class="form-control" #gstype\n                        [disabled]="EnableStnDets" (change)="getStoneName(gstype.value,i)">\n                        <option [ngValue]="null">Select</option>\n                        <option *ngFor="let _stoneType of stoneType" [disabled]="EnableStnDets"\n                          [value]="_stoneType.gs_code">\n                          {{_stoneType.GSName}}\n                        </option>\n                      </select>\n                    </td>\n                    <td>\n                      <select [(ngModel)]="field.Name" name="{{field.Name}}" class="form-control"\n                        [disabled]="EnableStnDets">\n                        <option [ngValue]="null">Select</option>\n                        <option *ngFor="let _stoneName of stoneName[i]" [disabled]="EnableStnDets"\n                          [value]="_stoneName.stone_name">\n                          {{_stoneName.stone_name}}\n                        </option>\n                      </select>\n                    </td>\n                    <td><input type="number" [(ngModel)]="field.Qty" name="{{field.Qty}}" class="form-control"\n                        placeholder="Quantity" [readonly]="EnableStnDets"></td>\n                    <td><input type="number" [(ngModel)]="field.Carrat" name="{{field.Carrat}}" class="form-control"\n                        placeholder="Carat" [readonly]="EnableStnDets" (change)="getStoneWt(i)"></td>\n\n\n                    <td><input type="number" [(ngModel)]="field.StoneWt" name="{{field.StoneWt}}" class="form-control"\n                        placeholder="Stone Wt" readonly></td>\n                    <td><input type="number" [(ngModel)]="field.Rate" name="{{field.Rate}}" class="form-control"\n                        placeholder="Rate/Carat" [readonly]="EnableStnDets" (change)="getAmount(i)"></td>\n                    <td><input type="number" [(ngModel)]="field.Amount" name="{{field.Amount}}" class="form-control"\n                        placeholder="Amount" readonly></td>\n\n                    <td>\n                      <ng-container *ngIf="EnableEditDelbtn[i]">\n                        <button class="btn btn-default btn-rounded wd" type="button" [disabled]="EnableStnDets"\n                          (click)="editFieldValue(i)"><i class="fal fa-pencil-alt"></i> Edit</button>\n                        <button class="btn btn-danger btn-rounded wd" type="button" [disabled]="EnableStnDets"\n                          (click)="deleteFieldValue(i)"><i class="fal fa-trash-alt"></i> Delete</button>\n                      </ng-container>\n                      <ng-container *ngIf="EnableSaveCnlbtn[i]">\n                        <button class="btn btn-success btn-rounded wd" type="button" [disabled]="EnableStnDets"\n                          (click)="saveDataFieldValue(i)"><i class="fal fa-save"></i> Save</button>\n                        <button class="btn btn-warning btn-rounded wd" type="button" [disabled]="EnableStnDets"\n                          (click)="cancelDataFieldValue(i)"><i class="far fa-window-close"></i> Cancel</button>\n                      </ng-container>\n                    </td>\n                  </tr>\n                </ng-container>\n                <ng-container *ngIf="!EnableStnDets">\n                  <tr *ngFor="let field of fieldArray1; let i = index">\n                    <td>\n                      <select [(ngModel)]="field.Type" name="{{field.Type}}" class="form-control" #gstype\n                        [disabled]="readonly[i]" (change)="getStoneName(gstype.value,i)">\n                        <option [ngValue]="null">Select</option>\n                        <option *ngFor="let _stoneType of stoneType" [disabled]="readonly[i]"\n                          [value]="_stoneType.gs_code">\n                          {{_stoneType.GSName}}\n                        </option>\n                      </select>\n                    </td>\n                    <td>\n                      <select [(ngModel)]="field.Name" name="{{field.Name}}" class="form-control"\n                        [disabled]="readonly[i]">\n                        <option [ngValue]="null">Select</option>\n                        <option *ngFor="let _stoneName of stoneName[i]" [disabled]="readonly[i]"\n                          [value]="_stoneName.stone_name">\n                          {{_stoneName.stone_name}}\n                        </option>\n                      </select>\n                    </td>\n                    <td><input type="number" [(ngModel)]="field.Qty" name="{{field.Qty}}" class="form-control"\n                        placeholder="Quantity" [readonly]="readonly1[i]" (change)="getAmount(i)"></td>\n                    <td><input type="number" [(ngModel)]="field.Carrat" name="{{field.Carrat}}" class="form-control"\n                        placeholder="Carat" [readonly]="readonly1[i]" (change)="getStoneWt(i)"></td>\n\n\n                    <td><input type="number" [(ngModel)]="field.StoneWt" name="{{field.StoneWt}}" class="form-control"\n                        placeholder="Stone Wt" readonly></td>\n                    <td><input type="number" [(ngModel)]="field.Rate" name="{{field.Rate}}" class="form-control"\n                        placeholder="Rate/Carat" [readonly]="readonlyRate[i]" (change)="getAmount(i)"></td>\n                    <td><input type="number" [(ngModel)]="field.Amount" name="{{field.Amount}}" class="form-control"\n                        placeholder="Amount" readonly></td>\n\n                    <td>\n                      <ng-container *ngIf="EnableEditDelbtn[i]">\n                        <button class="btn btn-default btn-rounded wd" type="button" (click)="editFieldValue(i)"><i\n                            class="fal fa-pencil-alt"></i> Edit</button>\n                        <button class="btn btn-danger btn-rounded wd" type="button" (click)="deleteFieldValue(i)"><i\n                            class="fal fa-trash-alt"></i> Delete</button>\n                      </ng-container>\n                      <ng-container *ngIf="EnableSaveCnlbtn[i]">\n                        <button class="btn btn-success btn-rounded wd" type="button" (click)="saveDataFieldValue(i)"><i\n                            class="fal fa-save"></i> Save</button>\n                        <button class="btn btn-warning btn-rounded wd" type="button"\n                          (click)="cancelDataFieldValue(i)"><i class="far fa-window-close"></i> Cancel</button>\n                      </ng-container>\n                    </td>\n                  </tr>\n                </ng-container>\n              </tbody>\n            </table>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n    <div class="row ">\n      <div class="col-md-4">\n        <div class="input-group">\n          <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" type="button"\n            (click)="SubmitBarcodeDetails()"><i class="fal fa-save"></i> Submit</button>\n          <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" type="button"\n            (click)="refreshExistData()"><i class="far fa-window-close"></i>\n            Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  \x3c!-- <pre>{{BarcodeSummaryHeader | json}}</pre> --\x3e\n</div>\n\n\n\x3c!-- Add Weight Modal--\x3e\n<div class="modal overlay" id="addWeight" role="dialog" data-backdrop="static" data-keyboard="false">\n  <form [formGroup]="AddForm" class="form-horizontal">\n    <div class="modal-dialog ">\n      <div class="modal-content ">\n\n        \x3c!-- Modal Header --\x3e\n        <div class="modal-header">\n          <h4 class="modal-title">Sales Weight Addition</h4>\n        </div>\n\n        \x3c!-- Modal body --\x3e\n        <div class="modal-body">\n          <div class="form-group">\n            <i class="fal fa-money-bill"></i>&nbsp; <span class="text-muted">Ref Barcode No: <h2 class="font-light">\n                {{BarcodeSummaryHeader.BarcodeNo}}</h2></span>\n          </div>\n          <div class="form-group">\n            <label *ngFor="let radiobutton of radioButtons" class="form-check-inline">\n              <input type="radio" name="popups" (click)="PopupRadioBtnChnge(radiobutton.name)" class="form-check-input"\n                [value]="radiobutton.name" [checked]="radiobutton.name === radiomodel.name">\n              <h3 style="margin-top: 5px;">{{radiobutton.name}}\n                <div class="tooltipdesign"><i class="fal fa-question-circle"></i>\n                  <span class="tooltiptext tooltip-top">{{radiobutton.Tooltip}}</span>\n                </div>\n              </h3>\n            </label>\n          </div>\n          <table class="table">\n            <tbody>\n              <tr *ngIf="radiomodel.name == \'Tag\'">\n                <td class="float-rt">Barcode No</td>\n                <td><input type="text" class="form-control" onKeyPress="if(this.value.length==10) return false;"\n                    #barcode (change)="Addwt(barcode.value)"> </td>\n              </tr>\n              <tr>\n                <td class="float-rt">Item Name</td>\n                <td>\n                  <select class="form-control mr-auto mt-2 mt-lg-0" #ItemName\n                    (change)="getAddWtCounter(AddForm.value.ItemName)" [(ngModel)]="BarcodePopupHeader.ItemName"\n                    formControlName="ItemName">\n                    <option [ngValue]="null">Select</option>\n                    <option *ngFor="let _ItemName of AddWtItemList" [value]="_ItemName.Item_code"\n                      [disabled]="radiomodel.name === \'Tag\'">\n                      {{_ItemName.Item}}\n                    </option>\n                  </select>\n                </td>\n              </tr>\n              <tr>\n                <td class="float-rt">Counter Code</td>\n                <td><select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="BarcodePopupHeader.CounterCode"\n                    formControlName="CounterCode">\n                    <option [ngValue]="null">Select</option>\n                    <option *ngFor="let _Counter of AddWtCounterList" [value]="_Counter"\n                      [disabled]="radiomodel.name === \'Tag\'">\n                      {{_Counter}} </option>\n                  </select></td>\n              </tr>\n              <tr *ngIf="radiomodel.name == \'Tag\'">\n                <td class="float-rt"> Qty</td>\n                <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodePopupHeader.ItQty"\n                    formControlName="ItQty"></td>\n\n              </tr>\n              <tr *ngIf="radiomodel.name == \'Tag\'">\n                <td class="float-rt">Gross Wt</td>\n                <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodePopupHeader.Grwt"\n                    formControlName="Grwt"></td>\n              </tr>\n              <tr *ngIf="radiomodel.name == \'Tag\'">\n                <td class="float-rt">Stone Wt</td>\n                <td> <input type="text" class="form-control" readonly [(ngModel)]="BarcodePopupHeader.Stwt"\n                    formControlName="Stwt"></td>\n                <td></td>\n              </tr>\n              <tr>\n              <tr *ngIf="radiomodel.name == \'Tag\'">\n                <td class="float-rt">Net Wt</td>\n                <td> <input type="text" class="form-control" readonly [(ngModel)]="BarcodePopupHeader.Ntwt"\n                    formControlName="Ntwt"></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td class="float-rt">Add Qty</td>\n                <td> <input type="text" class="form-control" [(ngModel)]="BarcodePopupHeader.AdQty"\n                    formControlName="AdQty"></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td class="float-rt"> Add Wt</td>\n                <td> <input type="text" class="form-control" [(ngModel)]="BarcodePopupHeader.AdWt"\n                    formControlName="AdWt" [disabled]="EnableDisableAddWt"></td>\n                <td></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        \x3c!-- Modal footer --\x3e\n        <div class="modal-footer">\n          <div class="input-group">\n            <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" type="button"\n              (click)="SaveAddWt()"><i class="fal fa-save"></i> Save</button>\n            <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" type="button"\n              (click)="closeModal()"><i class="far fa-window-close"></i>\n              Exit</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n\x3c!-- Deduct Weight--\x3e\n<div class="modal overlay" id="DeductWeight" role="dialog" data-backdrop="static" data-keyboard="false">\n  <form [formGroup]="DeductForm" class="form-horizontal">\n    <div class="modal-dialog">\n      <div class="modal-content">\n\n        \x3c!-- Modal Header --\x3e\n        <div class="modal-header">\n          <h4 class="modal-title">Sales Weight Deduction</h4>\n\n        </div>\n\n        \x3c!-- Modal body --\x3e\n        <div class="modal-body">\n          <table class="table">\n            <tbody>\n              <tr>\n                <td class="float-rt"> Barcode No</td>\n                <td><input type="text" class="form-control" [(ngModel)]="BarcodeSummaryHeader.BarcodeNo"\n                    formControlName="TagNo" readonly>\n                </td>\n              </tr>\n              <tr>\n                <td class="float-rt">Counter Code</td>\n                <td><input type="text" class="form-control" [(ngModel)]="BarcodeSummaryHeader.CounterCode"\n                    formControlName="CounterCode" readonly></td>\n              </tr>\n              <tr>\n                <td class="float-rt">Item Name</td>\n                <td><input type="text" class="form-control" [(ngModel)]="BarcodeSummaryHeader.ItemName"\n                    formControlName="Iname" readonly></td>\n              </tr>\n              <tr>\n                <td class="float-rt">Item Name</td>\n                <td>\n                  <select class="form-control mr-auto mt-2 mt-lg-0" #ItemName\n                    (change)="getDedWtCounter(DeductForm.value.ItemName)" [(ngModel)]="DeductHeader.ItemName"\n                    formControlName="ItemName">\n                    <option [ngValue]="null">Select</option>\n                    <option *ngFor="let _ItemName of DedWtItemList" [value]="_ItemName.Item_code"\n                      [disabled]="radiomodel.name === \'Tag\'">\n                      {{_ItemName.Item}}\n                    </option>\n                  </select>\n                </td>\n              </tr>\n              <tr>\n                <td class="float-rt">Counter Code</td>\n                <td><select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="DeductHeader.DDCounter"\n                    formControlName="DDCounter">\n                    <option [ngValue]="null">Select</option>\n                    <option *ngFor="let _Counter of DedWtCounterList" [value]="_Counter">\n                      {{_Counter}} </option>\n                  </select></td>\n              </tr>\n              <tr>\n                <td class="float-rt">Qty</td>\n                <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.ItemQty"\n                    formControlName="ItemQty"></td>\n              </tr>\n              <tr>\n                <td class="float-rt">Gross Wt</td>\n                <td><input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.Grosswt"\n                    formControlName="GW"></td>\n              </tr>\n              <tr>\n                <td class="float-rt">Stone Wt</td>\n                <td> <input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.Stonewt"\n                    formControlName="SW"></td>\n                <td></td>\n              </tr>\n              <tr>\n              <tr>\n                <td class="float-rt">Net Wt</td>\n                <td> <input type="text" class="form-control" readonly [(ngModel)]="BarcodeSummaryHeader.Netwt"\n                    formControlName="NW"></td>\n                <td></td>\n              </tr>\n              <tr>\n                <td class="float-rt">Deduct Qty</td>\n                <td> <input type="text" class="form-control" [(ngModel)]="DeductHeader.DedQty" formControlName="DedQty">\n                </td>\n                <td></td>\n              </tr>\n              <tr>\n                <td class="float-rt"> Deduct Wt</td>\n                <td> <input type="text" class="form-control" [(ngModel)]="DeductHeader.Dedwt" formControlName="Dedwt">\n                </td>\n                <td></td>\n              </tr>\n              <tr>\n                <td class="float-rt"> Deduct StWt</td>\n                <td> <input type="text" class="form-control" [(ngModel)]="DeductHeader.DedSW" formControlName="DedSW">\n                </td>\n                <td></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        \x3c!-- <pre>{{ BarcodeSummaryHeader| json }}</pre> --\x3e\n        \x3c!-- Modal footer --\x3e\n        <div class="modal-footer">\n          <div class="input-group">\n            <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" type="button"\n              (click)="SaveDeductWt()"><i class="fal fa-save"></i> Save</button>\n            <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" type="button"\n              (click)="closeModal()"><i class="far fa-window-close"></i>\n              Exit</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div id="PermissonModalRateGram" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\n  <div class="modal-dialog">\n\n    \x3c!-- Modal content--\x3e\n    <div class="modal-content">\n      <div class="modal-header">\n        <h4 class="modal-title">Prodigy</h4>\n        <button type="button" class="close" (click)="close()" aria-label="Close">\n          <span aria-hidden="true">&times;</span></button>\n      </div>\n      <div class="modal-body">\n        <div class="form-group">\n          <label for="OrderNo">2. Password</label>\n          <input type="password" min="0" class="form-control" name="pwd" placeholder="Password"\n            (keyup.enter)="passWordRateGram(PwdRate.value)" #PwdRate>\n        </div>\n        <div class="form-group">\n          <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary"\n            (click)="passWordRateGram(PwdRate.value)">Submit</button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n<div id="PermissonMCModal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\n  <div class="modal-dialog">\n\n    \x3c!-- Modal content--\x3e\n    <div class="modal-content">\n      <div class="modal-header">\n        <h4 class="modal-title">Prodigy</h4>\n        <button type="button" class="close" (click)="closeMC()" aria-label="Close">\n          <span aria-hidden="true">&times;</span></button>\n      </div>\n      <div class="modal-body">\n        <div class="form-group">\n          <label for="OrderNo">51. Password</label>\n          <input type="password" min="0" class="form-control" name="pwd" placeholder="Password"\n            (keyup.enter)="passWordMC(PwdMC.value)" #PwdMC>\n        </div>\n        <div class="form-group">\n          <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary"\n            (click)="passWordMC(PwdMC.value)">Submit</button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<div id="PermissonStnDetsModal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\n  <div class="modal-dialog">\n\n    \x3c!-- Modal content--\x3e\n    <div class="modal-content">\n      <div class="modal-header">\n        <h4 class="modal-title">Prodigy</h4>\n        <button type="button" class="close" (click)="closeStnDets()" aria-label="Close">\n          <span aria-hidden="true">&times;</span></button>\n      </div>\n      <div class="modal-body">\n        <div class="form-group">\n          <label for="OrderNo">13. Password</label>\n          <input type="password" min="0" class="form-control" name="pwd" placeholder="Password"\n            (keyup.enter)="passWordStnDets(PwdStnDet.value)" #PwdStnDet>\n        </div>\n        <div class="form-group">\n          <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary"\n            (click)="passWordStnDets(PwdStnDet.value)">Submit</button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>'},NQ5e:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var r=a("mrSG"),o=a("2Vo4"),n=a("tk/3"),d=a("fXoL"),s=a("NFKh"),i=a("qlSq");let l=class{constructor(e,t){this._http=e,this.appConfigService=t,this.ccode="",this.bcode="",this.SalesEstNo=new o.a(null),this.castEstNo=this.SalesEstNo.asObservable(),this.SalesData=new o.a({}),this.cast=this.SalesData.asObservable(),this.SalesDtls=new o.a({}),this.castSalesDtls=this.SalesDtls.asObservable(),this.SendSalesEstNo=new o.a(""),this.EstNo=this.SendSalesEstNo.asObservable(),this.AddEditBarcodeDetails=new o.a({}),this.castAddEditBarcodeDetails=this.AddEditBarcodeDetails.asObservable(),this.SalesBarcode=new o.a(""),this.castSalesBarcode=this.SalesBarcode.asObservable(),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=s.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(s.enc.Utf8),this.bcode=s.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(s.enc.Utf8)}getBarcodefromAPI(e,t,a,r){return this._http.get(this.apiBaseUrl+"api/Masters/Barcode/BarcodeWithStone?companyCode="+this.ccode+"&branchCode="+this.bcode+"&barcodeNo="+e+"&orderNo="+t+"&isInterstate="+a+"&isOfferCoin="+r)}getStoneDetailsfromAPI(e){return this._http.get(this.apiBaseUrl+"api/Masters/Barcode/GetBarcodeStoneInfo?companyCode="+this.ccode+"&branchCode="+this.bcode+"&barcodeNo="+e)}post(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/sales/estimation/Post/",t)}put(e,t){var a=JSON.stringify(e);return this._http.put(this.apiBaseUrl+"api/sales/estimation/Put?estNo="+t,a)}getOrderEst(e){return this._http.get(this.apiBaseUrl+"api/order/getOrderForSales/"+e)}getExchangeTax(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/sales/estimation/ExchangeTax",t)}BarcodeValidation(e,t,a){var r=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/sales/estimation/BarcodeValidation?barcodeNo="+t+"&gsCode="+a,r)}SaveSalesEstNo(e){this.SalesEstNo.next(e),e=""}SendSalesDataToEstComp(e){this.SalesData.next(e),e=""}salesDetails(e){this.SalesDtls.next(e),e=""}SendEstNo_To_Purchase(e){this.SendSalesEstNo.next(e),e=""}SendSalesDataToAddBarcode(e){this.AddEditBarcodeDetails.next(e),e=""}SendSalesBarcode(e){this.SalesBarcode.next(e),e=""}};l.ctorParameters=()=>[{type:n.b},{type:i.a}],l=r.a([Object(d.Injectable)({providedIn:"root"}),r.c("design:paramtypes",[n.b,i.a])],l)},SlBg:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var r=a("mrSG"),o=a("2Vo4"),n=a("tk/3"),d=a("fXoL"),s=a("NFKh"),i=a("qlSq");let l=class{constructor(e,t){this._http=e,this.appConfigService=t,this.ccode="",this.bcode="",this.EstNo=new o.a(""),this.SubjectEstNo=this.EstNo.asObservable(),this.NewExistingEstNo=new o.a(""),this.SubjectNewExistingEstNo=this.NewExistingEstNo.asObservable(),this.OrderAttachmentSummaryData=new o.a({}),this.CastOrderAttachmentSummaryData=this.OrderAttachmentSummaryData.asObservable(),this.SRAttachmentSummaryData=new o.a({}),this.CastSRAttachmentSummaryData=this.SRAttachmentSummaryData.asObservable(),this.NewExistingEstNoCtrls=new o.a(!1),this.CastNewExistingEstNoCtrls=this.NewExistingEstNoCtrls.asObservable(),this.OldGoldAttachmentSummaryData=new o.a({}),this.CastOldGoldAttachmentSummaryData=this.OldGoldAttachmentSummaryData.asObservable(),this.Reprint=new o.a({}),this.castReprint=this.Reprint.asObservable(),this.ReprintSR=new o.a({}),this.castReprintSR=this.ReprintSR.asObservable(),this.CoinOfferDatatoSales=new o.a({}),this.castCoinOfferDatatoSales=this.CoinOfferDatatoSales.asObservable(),this.OrderNo=new o.a(0),this.SubjectOrderNo=this.OrderNo.asObservable(),this.TotalCoinOffer=new o.a(0),this.SubjectTotalCoinOffer=this.TotalCoinOffer.asObservable(),this.MergeEstNo=new o.a({}),this.SubjectMergeEstNo=this.MergeEstNo.asObservable(),this.BarcodeDetails=new o.a({}),this.castBarcodeDetails=this.BarcodeDetails.asObservable(),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=s.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(s.enc.Utf8),this.bcode=s.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(s.enc.Utf8)}getEstimationDetailsfromAPI(e){return this._http.get(this.apiBaseUrl+"api/sales/estimation/Get?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}getSalesEstimationForPrint(e){return this._http.get(this.apiBaseUrl+"api/sales/estimation/GetForPrint?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}getOGEstimationForPrint(e){return this._http.get(this.apiBaseUrl+"api/purchase/GetAttachedPurchaseEstimationDetailsForPrint?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}getEstimationOrderDetailsfromAPI(e){return this._http.get(this.apiBaseUrl+"api/sales/estimation/GetOrderForSales?companyCode="+this.ccode+"&branchCode="+this.bcode+"&orderNo="+e)}getSalesForPrintTotal(e){return this._http.get(this.apiBaseUrl+"api/sales/estimation/GetForPrintTotal?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}getPurchaseForPrintTotal(e){return this._http.get(this.apiBaseUrl+"api/purchase/GetForPrintTotal?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}getOGForPrintTotal(e){return this._http.get(this.apiBaseUrl+"api/purchase/GetAttachedPurchaseEstimationTotalPrint?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}getSRForPrint(e){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/GetAttachedSRForPrint?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}getSRForPrintTotal(e){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/GetAttachedSRTotalForPrint?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}getAllEstimation(){return this._http.get(this.apiBaseUrl+"api/sales/estimation/AllEstimations/"+this.ccode+"/"+this.bcode)}getSalesEstimationPlainText(e){return this._http.get(this.apiBaseUrl+"api/sales/estimation/DotMatrixPrint/"+this.ccode+"/"+this.bcode+"/"+e)}getSalesReturnEstDotMatrixPrint(e){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/DotMatrixPrint/"+this.ccode+"/"+this.bcode+"/"+e)}PostMergeEstimation(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/sales/estimation/MergeEstimation",t)}SendEstNo(e){this.EstNo.next(e),e=""}SendNewExistingEstNo(e){this.NewExistingEstNo.next(e),e=""}SendOrderAttachmentSummaryData(e){this.OrderAttachmentSummaryData.next(e),e=""}SendSRAttachmentSummaryData(e){this.SRAttachmentSummaryData.next(e),e=""}SendNewExistingEstNoCtrls(e){this.NewExistingEstNoCtrls.next(e),e=""}SendOldGoldAttachmentSummaryData(e){this.OldGoldAttachmentSummaryData.next(e),e=""}SendReprintData(e){this.Reprint.next(e),e=""}SendReprintSR(e){this.ReprintSR.next(e),e=""}SendCoinOfferDatatoSales(e){this.CoinOfferDatatoSales.next(e),e=""}SendOrderNoToSalesComp(e){this.OrderNo.next(e),e=""}SendTotalCoinOffer(e){this.TotalCoinOffer.next(e),e=""}SendMergeEstNoToEstComp(e){this.MergeEstNo.next(e),e=""}SendBarcodeDetailsFromMergeEstComp(e){this.BarcodeDetails.next(e),e=""}};l.ctorParameters=()=>[{type:n.b},{type:i.a}],l=r.a([Object(d.Injectable)({providedIn:"root"}),r.c("design:paramtypes",[n.b,i.a])],l)},TKBi:function(e,t,a){"use strict";a.r(t),t.default='.card-body{ padding: 10px 30px 0px 30px !important; }\r\n.text-red{\r\n  color:#bb1e1e;\r\n}\r\n:host {\r\n    padding: 0!important;\r\n  }\r\n.float-rt{\r\n    font-weight: 600;\r\n  \r\n\r\n  }\r\nselect{\r\n    font-size: 14px;\r\n  }\r\n.profile-img{\r\n    text-align: center;\r\n  border: solid 1px #555;\r\n  background-color: #eed;\r\n  box-shadow: 5px -5px  rgba(0,0,0,0.6);\r\n  -moz-box-shadow: 5px -5px  rgba(0,0,0,0.6);\r\n  -webkit-box-shadow: 5px -5px  rgba(0,0,0,0.6);\r\n  -o-box-shadow: 5px -5px  rgba(0,0,0,0.6);\r\n\r\n}\r\n/* input{\r\n    width: 100px !important;\r\n    } */\r\n.margin{\r\n    border-spacing:0 15px !important\r\n  }\r\ntd {\r\n    padding-top: 0.5em;\r\n    padding-bottom: 0.5em;\r\n}\r\n.wd{\r\n  width: 80px !important;\r\n  height: 25px !important;\r\n  padding: 0px !important;\r\n  font-size: 14px;\r\n}\r\n.form-control{\r\n    min-height: 28px !important;\r\n    height: 20px !important;\r\n  }\r\n.hiddenRow {\r\n    padding: 0 !important;\r\n  }\r\n.wrapper{\r\n    margin: 25px 3em auto 3em;\r\n  }\r\n.overlay{\r\n\r\n    background-color:rgba(0,0,0,.5);\r\n    z-index:10;\r\n    overflow-y: scroll; \r\n  }\r\nfieldset.scheduler-border {\r\n    border: 2px solid #757575 !important;\r\n    padding: 0 1.4em 0px 1.4em !important;\r\n    margin: 0 0 1.5em 0 !important;\r\n    /* box-shadow: 0px 0px 0px 0px #000; */\r\n    border-radius: 15px;\r\n  }\r\nlegend.scheduler-border {\r\n    font-size: 20px !important;\r\n    font-family: "Montserrat", Helvetica, sans-serif;\r\n    font-weight: 600;\r\n    text-align: left !important;\r\n    width:auto;\r\n    padding:0 10px;\r\n    border-bottom:none;\r\n  }\r\n.pointer{\r\n      cursor: pointer;\r\n    }\r\n.dropdown-label { \r\n      background-color:transparent /* This hides the background */; \r\n      background-image:none; \r\n      -webkit-appearance: none /* Webkit Fix */; \r\n      border:none; \r\n      box-shadow:none; \r\n      pointer-events: none;\r\n      \r\n    }\r\ntr.tr-hover-class:hover {\r\n      background: rgba(234, 237, 255, 0.719) !important;\r\n    }\r\n.dropdown {\r\n    position: absolute;\r\n    border: 1px solid grey;\r\n    z-index: 9999;\r\n    background-color: white;\r\n    padding: 5px;\r\n  }\r\ninput:focus + .dropdown  {\r\n    display: block;\r\n    z-index: 9999999;\r\n  }\r\n/*For Pricing tables*/\r\n.price {\r\n    list-style-type: none;\r\n    border: 1px solid #eee;\r\n    margin: 0;\r\n    padding: 0;\r\n    transition: 0.3s;\r\n  \r\n  }\r\n.price:hover {\r\n    box-shadow: 0 8px 12px 0 rgba(0,0,0,0.2)\r\n  }\r\n.price .header {\r\n    background-color: #111;\r\n    color: white;\r\n    font-size: 25px;\r\n  }\r\n.price li {\r\n    border-bottom: 1px solid #eee;\r\n    padding: 15px 25px 20px 25px;\r\n    margin-top: 10px;\r\n    line-height: 0.1;\r\n  }\r\n.float-left{\r\n  font-weight: 600;\r\n  }\r\n.card-body{ padding: 10px 30px 0px 30px !important; }\r\n@media only screen and (max-width: 800px) {\r\n      .columns {\r\n        width: 100%;\r\n      }\r\n    }\r\n@media (min-width:2200px) and (max-width: 2440px) {\r\n      .table-responsive {\r\n       overflow-x: hidden !important;\r\n    \r\n  }\r\n  }\r\n@media (min-width: 300px) and (max-width: 2200px) {\r\n      .table-responsive {\r\n      overflow-x: auto !important;\r\n    \r\n  }}\r\n/* @media (min-width: 300px) and (max-width: 2000px) {\r\n    .table-responsive {\r\n    overflow-x: scroll !important;\r\n  \r\n}} */\r\nspan.Heading{\r\n  font-weight: 600;\r\n  font-style: italic;\r\n  text-decoration: underline;\r\n}\r\n[data-tooltip] {\r\n  position: relative;\r\n  z-index: 2;\r\n  cursor: pointer;\r\n}\r\n/* Hide the tooltip content by default */\r\n[data-tooltip]:before,\r\n[data-tooltip]:after {\r\n  visibility: hidden;\r\n  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";\r\n  filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=0);\r\n  opacity: 0;\r\n  pointer-events: none;\r\n}\r\n/* Position tooltip above the element */\r\n[data-tooltip]:before {\r\n  position: absolute;\r\n  bottom: 150%;\r\n  left: 50%;\r\n  margin-bottom: 5px;\r\n  margin-left: -80px;\r\n  padding: 7px;\r\n  width: 160px;\r\n  border-radius: 3px;\r\n  background-color: #000;\r\n  background-color: hsla(0, 0%, 20%, 0.9);\r\n  color: #fff;\r\n  content: attr(data-tooltip);\r\n  text-align: center;\r\n  font-size: 14px;\r\n  line-height: 1.2;\r\n}\r\n/* Triangle hack to make tooltip look like a speech bubble */\r\n[data-tooltip]:after {\r\n  position: absolute;\r\n  bottom: 150%;\r\n  left: 50%;\r\n  margin-left: -5px;\r\n  width: 0;\r\n  border-top: 5px solid #000;\r\n  border-top: 5px solid hsla(0, 0%, 20%, 0.9);\r\n  border-right: 5px solid transparent;\r\n  border-left: 5px solid transparent;\r\n  content: " ";\r\n  font-size: 0;\r\n  line-height: 0;\r\n}\r\n/* Show tooltip content on hover */\r\n[data-tooltip]:hover:before,\r\n[data-tooltip]:hover:after {\r\n  visibility: visible;\r\n  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";\r\n  filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=100);\r\n  opacity: 1;\r\n}\r\nselect{\r\n  width: 150px;\r\n}\r\n\r\n\r\n\r\n  '},f3Qm:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var r=a("mrSG"),o=a("2Vo4"),n=a("fXoL"),d=a("tk/3"),s=a("NFKh"),i=a("qlSq");let l=class{constructor(e,t){this._http=e,this.appConfigService=t,this.ccode="",this.bcode="",this.GetAddBarcodeData=new o.a({}),this.cast=this.GetAddBarcodeData.asObservable(),this.CancelBarcodeData=new o.a({}),this.castCancelBarcodeData=this.CancelBarcodeData.asObservable(),this.GetInterState=new o.a({}),this.castInterState=this.GetInterState.asObservable(),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=s.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(s.enc.Utf8),this.bcode=s.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(s.enc.Utf8)}getItemfromAPI(e){return this._http.get(this.apiBaseUrl+"api/Masters/GetItems?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsCode="+e)}getStoneType(){return this._http.get(this.apiBaseUrl+"api/sales/estimation/GetStoneType?companyCode="+this.ccode+"&branchCode="+this.bcode)}getStoneName(e){return this._http.get(this.apiBaseUrl+"api/sales/estimation/GetStoneDiamondName?companyCode="+this.ccode+"&branchCode="+this.bcode+"&StoneType="+e)}calculateBarcode(e){let t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/sales/estimation/BarcodeCalculation",t)}addWtBarcodeCalculation(e,t){return this._http.get(this.apiBaseUrl+"api/Masters/Barcode/BarcodeWithStoneForAddWt?companyCode="+this.ccode+"&branchCode="+this.bcode+"&barcodeNo="+e+"&addWtBarcode="+t)}getAddWightItemGrossWeight(e,t,a,r,o){return this._http.get(this.apiBaseUrl+"api/sales/estimation/GetAddWightItemGrossWeight?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsCode="+a+"&counterCode="+r+"&itemName="+o)}SendBarcodeDataToSalesComp(e){this.GetAddBarcodeData.next(e),e=""}SendCancelBarcodeDataToSalesComp(e){this.CancelBarcodeData.next(e),e=""}SendInterStateDataToAddBarCodeComp(e){this.GetInterState.next(e),e=""}};l.ctorParameters=()=>[{type:d.b},{type:i.a}],l=r.a([Object(n.Injectable)({providedIn:"root"}),r.c("design:paramtypes",[d.b,i.a])],l)},mFkx:function(e,t,a){"use strict";a.r(t);var r=a("mrSG"),o=a("fXoL"),n=a("ofXK"),d=a("3Pt+"),s=a("5nbR"),i=a("tyNb"),l=a("f3Qm"),c=a("NQ5e"),m=a("5eHb"),u=a("eya4"),h=a("GUC0"),S=a.n(h),y=a("SlBg"),p=a("NFKh"),B=a("qlSq");let g=class{constructor(e,t,a,r,o,n,d){this.toastr=e,this.salesService=t,this.barcodeService=a,this.fb=r,this._masterService=o,this._estimationService=n,this.appConfigService=d,this.BarcodeFromSales=!1,this.ccode="",this.bcode="",this.readOnly=!0,this.isDisabled=!1,this.HideRadioBtn=!0,this.EnableDisableAddWt=!0,this.EnableDisableDedGrWt=!0,this.NonTag=!1,this.tag=!0,this.model={name:"Tag"},this.BarCodeNo="",this.BarCodeNoFromSalesComp="",this.Non_tag=!0,this.radiomodel={name:"Non Tag"},this.BarcodeSummaryHeader={ObjID:null,ItemQty:null,CompanyCode:this.ccode,BranchCode:this.bcode,EstNo:null,SlNo:null,BillNo:null,BarcodeNo:this.BarCodeNo,SalCode:null,CounterCode:null,ItemName:null,ItemNo:null,Grosswt:null,Stonewt:null,Netwt:null,AddWt:null,BillQty:null,DeductWt:null,MakingChargePerRs:null,WastPercent:null,GoldValue:null,VaAmount:null,StoneCharges:null,DiamondCharges:null,TotalAmount:null,Hallmarkarges:null,McAmount:null,WastageGrms:null,McPercent:null,AddQty:null,DeductQty:null,OfferValue:null,UpdateOn:null,GsCode:null,Rate:null,Karat:null,AdBarcode:null,AdCounter:null,AdItem:null,IsEDApplicable:null,McType:null,Fin_Year:null,NewBillNo:null,ItemTotalAfterDiscount:null,ItemAdditionalDiscount:null,TaxPercentage:null,TaxAmount:null,ItemFinalAmount:null,SupplierCode:null,ItemSize:null,ImgID:null,DesignCode:null,DesignName:null,BatchID:null,Rf_ID:null,McPerPiece:null,DiscountMc:null,TotalSalesMc:null,McDiscountAmt:null,purchaseMc:null,GSTGroupCode:null,SGSTPercent:null,SGSTAmount:null,CGSTPercent:null,CGSTAmount:null,IGSTPercent:null,IGSTAmount:null,HSN:null,PieceRate:null,DeductSWt:null,OrdDiscountAmt:null,DedCounter:null,DedItem:null,isInterstate:0,salesEstStoneVM:[]},this.BarcodePopupHeader={ItQty:null,CounterCode:null,ItemName:null,ItemNo:null,Grwt:null,Stwt:null,Ntwt:null,AddWt:null,DeductWt:null,AdBarcode:null,AdCounter:null,AdItem:null,AdWt:null,AdQty:null,tagno:null},this.BillHeader={BillGrosswt:null,NW:null},this.DeductHeader={Qty:null,CounterCode:null,DDCounter:null,GW:null,SW:null,NW:null,DedQty:null,Dedwt:null,DedSW:null,TagNo:null,ItemName:null,Iname:null,ItemQty:null},this.GetAddBarcodeList={},this.SalesBarcode="",this.OrderNo=0,this.EnableOrderDetails=!1,this.OrderRate=0,this.OrderKarat="",this.OrderDetails=null,this.storeExistingBarcodeDets={},this.storeExistingBarcodeDets1={},this.editMode=!1,this.toggle="Invalid",this.PieceRate="N",this.rateParams={GsCode:null,Karat:null},this.interstate=0,this.BarcodeList=[],this.BarcodeNo="",this.fieldArray1=[],this.count=0,this.EnableEditDelbtn={},this.EnableSaveCnlbtn={},this.readonly={},this.readonly1={},this.readonlyRate={},this.EnableDropdown=!1,this.EnableAddRow=!1,this.EnableSubmitButton=!0,this.CopyEditedRow=[],this.totalAmtDmd=0,this.totalAmtStn=0,this.StneWt=0,this.GrWt=0,this.stoneType=[],this.stoneName=[],this.EnableRate=!0,this.permissonModel={CompanyCode:null,BranchCode:null,PermissionID:null,PermissionData:null},this.EnableMCRate=!0,this.EnableStnDets=!0,this.password=d.Pwd,this.SalesEstRateEditCode=d.RateEditCode.SalesEstRateEdit,this.MCRateEdit=d.RateEditCode.MCRateEdit,this.StoneDetailsEdit=d.RateEditCode.StoneDetailsEdit,this.getCB(),this.radioItems=[{name:"Tag",Tooltip:"Existing Barcode"},{name:"Non Tag",Tooltip:"Non Existing"}],this.radioButtons=[{name:"Tag",Tooltip:"Existing Barcode"},{name:"Non Tag",Tooltip:"Non Existing"}]}getCB(){this.ccode=p.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(p.enc.Utf8),this.bcode=p.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(p.enc.Utf8)}ngAfterContentChecked(){this.PwdMC.nativeElement.focus(),this.PwdRate.nativeElement.focus(),this.PwdStnDet.nativeElement.focus()}ngOnInit(){this.getStaffList(),this.getGSList(),this.getMCTypes(),this.BarcodeSummaryHeader.McType=5,this.getStoneType(),this.onchangeOption(5),this.BarcodeSummaryHeader.SalCode="A",this.salesService.castSalesBarcode.subscribe(e=>{this.SalesBarcode=e,this.EnableAddRow=!1,"true"==this.SalesBarcode&&(this.isDisabled=!1,this.OnRadioBtnChnge("Tag"),this.CommonJson())}),this._estimationService.SubjectOrderNo.subscribe(e=>{this.OrderNo=e,0!=this.OrderNo&&(this.EnableAddRow=!1,this.EnableOrderDetails=!0,this._estimationService.getEstimationOrderDetailsfromAPI(this.OrderNo).subscribe(e=>{this.OrderDetails=e,null!=this.OrderDetails&&(this.OrderKarat=this.OrderDetails.Karat,this.OrderRate=this.OrderDetails.Rate)}))}),this.salesService.castAddEditBarcodeDetails.subscribe(e=>{this.GetAddBarcodeList=e,this.EnableRate=!0,this.EnableMCRate=!0,this.EnableStnDets=!0,0==this.isEmptyObject(this.GetAddBarcodeList)&&null!=this.isEmptyObject(this.GetAddBarcodeList)?(this.HideRadioBtn=!1,this.EnableAddRow=!1,this.readOnly=!0,this.editMode=!0,this.BarCodeNo=this.GetAddBarcodeList.BarcodeNo,this.onchangeOption(this.GetAddBarcodeList.McType),this.getItemList(this.GetAddBarcodeList.GsCode),this.getAddWtItemList(this.GetAddBarcodeList.GsCode),this.getDedWtItemList(this.GetAddBarcodeList.GsCode),this.BarcodeSummaryHeader.CompanyCode=this.ccode,this.BarcodeSummaryHeader.BranchCode=this.bcode,this.BarcodeSummaryHeader.BarcodeNo=this.BarCodeNo,this.BarcodeSummaryHeader.SalCode=this.GetAddBarcodeList.SalCode,this.BarcodeSummaryHeader.AdItem=this.GetAddBarcodeList.AdItem,this.BarcodeSummaryHeader.AdCounter=this.GetAddBarcodeList.AdCounter,this.BarcodeSummaryHeader.isInterstate=this.GetAddBarcodeList.isInterstate,this.BarcodeSummaryHeader.DedItem=this.BarcodeSummaryHeader.ItemName,this.BarcodeSummaryHeader.DedCounter=this.GetAddBarcodeList.DedCounter,this.isDisabled=!0,null!=this.GetAddBarcodeList.BarcodeNo&&""!=this.GetAddBarcodeList.BarcodeNo?(this.model.name="Tag",this.EnableMCRate=!0):(this.model.name="Non Tag",this.EnableMCRate=!1),this._masterService.getCounter(this.GetAddBarcodeList.GsCode,this.GetAddBarcodeList.ItemName).subscribe(e=>{this.CounterList=e,this.getkaratAndPieceItemForEditBarcode(this.GetAddBarcodeList.GsCode,this.GetAddBarcodeList.ItemName)}),this.getBarcodeDetails(this.GetAddBarcodeList)):this.HideRadioBtn=!0}),this.AddForm=this.fb.group({ItQty:null,CounterCode:null,ItemName:null,ItemNo:null,Grwt:null,Stwt:null,Ntwt:null,AddWt:null,DeductWt:null,AdBarcode:null,AdCounter:null,AdItem:null,AdQty:null,AdWt:null,tagno:null}),this.BillForm=this.fb.group({BillGrosswt:null,NW:null}),this.DeductForm=this.fb.group({Qty:null,CounterCode:null,DDCounter:null,GW:null,SW:null,NW:null,DedQty:null,Dedwt:null,DedSW:null,TagNo:null,ItemName:null,Iname:null,ItemQty:null}),this.AddBarcodeForm=this.fb.group({ObjID:null,ItemQty:null,CompanyCode:this.ccode,BranchCode:this.bcode,EstNo:null,SlNo:null,BillNo:null,BarcodeNo:this.BarCodeNo,SalCode:null,CounterCode:null,ItemName:null,ItemNo:null,Grosswt:null,Stonewt:null,Netwt:null,AddWt:null,BillQty:null,DeductWt:null,MakingChargePerRs:null,WastPercent:null,GoldValue:null,VaAmount:null,StoneCharges:null,DiamondCharges:null,TotalAmount:null,Hallmarkarges:null,McAmount:null,WastageGrms:null,McPercent:null,AddQty:null,DeductQty:null,OfferValue:null,UpdateOn:null,GsCode:null,Rate:null,Karat:null,AdBarcode:null,AdCounter:null,AdItem:null,IsEDApplicable:null,McType:null,Fin_Year:null,NewBillNo:null,ItemTotalAfterDiscount:null,ItemAdditionalDiscount:null,TaxPercentage:null,TaxAmount:null,ItemFinalAmount:null,SupplierCode:null,ItemSize:null,ImgID:null,DesignCode:null,DesignName:null,BatchID:null,Rf_ID:null,McPerPiece:null,DiscountMc:null,TotalSalesMc:null,McDiscountAmt:null,purchaseMc:null,GSTGroupCode:null,SGSTPercent:null,SGSTAmount:null,CGSTPercent:null,CGSTAmount:null,IGSTPercent:null,IGSTAmount:null,HSN:null,PieceRate:null,DeductSWt:null,OrdDiscountAmt:null,DedCounter:null,DedItem:null,salesEstStoneVM:[]})}OnRadioBtnChnge(e){"Tag"===e?(this.NonTag=!1,this.model.name=e,this.AddBarcodeForm.reset(),this.totalAmtStn=0,this.totalAmtDmd=0,this.BillForm.reset(),this.AddForm.reset(),this.fieldArray1=[],this.BarcodeSummaryHeader.StoneCharges=0,this.BarcodeSummaryHeader.DiamondCharges=0,this.getStaffList(),this.getMCTypes(),this.BarcodeSummaryHeader.salesEstStoneVM=[],this.readOnly=!1,this.EnableMCRate=!0):"Non Tag"===e&&(this.model.name=e,this.NonTag=!0,this.totalAmtStn=0,this.totalAmtDmd=0,this.AddBarcodeForm.reset(),this.BillForm.reset(),this.AddForm.reset(),this.fieldArray1=[],this.BarcodeSummaryHeader.StoneCharges=0,this.BarcodeSummaryHeader.DiamondCharges=0,this.getStaffList(),this.getMCTypes(),this.BarcodeSummaryHeader.McType=5,this.onchangeOption(5),this.BarcodeSummaryHeader.salesEstStoneVM=[],this.BarcodeSummaryHeader.BarcodeNo="",this.readOnly=!0,this.EnableMCRate=!1)}PopupRadioBtnChnge(e){"Non Tag"===e?(this.Non_tag=!0,this.radiomodel.name=e,this.AddForm.reset(),this.BarcodeSummaryHeader.AdBarcode=null):"Tag"===e&&(this.Non_tag=!1,this.radiomodel.name=e,this.AddForm.reset())}isEmptyObject(e){return e&&0===Object.keys(e).length}addWeight(e){null==e.value.BarcodeNo||""===e.value.BarcodeNo?(this.toastr.warning("Please Enter Barcode/TagNo","Alert!"),$("#addWeight").modal("hide")):"PTM"==this.BarcodeSummaryHeader.GsCode?$("#addWeight").modal("hide"):($("#addWeight").modal("show"),this.BarcodePopupHeader.tagno=this.BarcodeList.BarcodeNo,this.AddWtPopup())}AddWtPopup(){0!=this.BarcodeSummaryHeader.AddWt?null!=this.BarcodeSummaryHeader.AdBarcode&&""!=this.BarcodeSummaryHeader.AdBarcode?(this.radiomodel.name="Tag",this.barcodeService.addWtBarcodeCalculation(this.BarcodeSummaryHeader.BarcodeNo,this.BarcodeSummaryHeader.AdBarcode).subscribe(e=>{this.AddWtDts=e,this.BarcodePopupHeader.Grwt=this.AddWtDts.Grosswt,this.BarcodePopupHeader.ItQty=this.AddWtDts.ItemQty,this.BarcodePopupHeader.Stwt=this.AddWtDts.Stonewt,this.BarcodePopupHeader.Ntwt=this.AddWtDts.Netwt,this.BarcodePopupHeader.tagno=this.BarcodeList.BarcodeNo,this.BarcodePopupHeader.ItemName=this.BarcodeSummaryHeader.AdItem,this.BarcodePopupHeader.CounterCode=this.BarcodeSummaryHeader.AdCounter,this.BarcodeSummaryHeader.AdBarcode=this.BarcodeSummaryHeader.AdBarcode}),this.BarcodePopupHeader.AdWt=this.BarcodeSummaryHeader.AddWt,this.BarcodePopupHeader.AdQty=this.BarcodeSummaryHeader.AddQty):(this.radiomodel.name="Non Tag",this.BarcodePopupHeader.AdWt=this.BarcodeSummaryHeader.AddWt,this.BarcodePopupHeader.AdQty=this.BarcodeSummaryHeader.AddQty,this.BarcodePopupHeader.ItemName=this.BarcodeSummaryHeader.AdItem,this.BarcodePopupHeader.CounterCode=this.BarcodeSummaryHeader.AdCounter):this.radiomodel.name="Non Tag"}refreshExistData(){this.EnableStnDets=!0,this.barcodeService.SendBarcodeDataToSalesComp({})}DedGrWt(e){e>this.BarcodeSummaryHeader.Grosswt&&this.toastr.warning("Deduct wt should not be greater than gross wt","Alert!")}EditDedStwt(){0==this.BarcodeSummaryHeader.Stonewt||null==this.BarcodeSummaryHeader.Stonewt?this.toastr.warning("No stone wt to deduct","Alert!"):this.toastr.warning("Item has stone details. Edit or delete from stone details for deduction","Alert!")}DeductWeight(e){this.DedWtPopup()}GetDeductWt(){if(this.BarcodeSummaryHeader.DeductWt>this.BarcodeSummaryHeader.Grosswt)this.toastr.warning("Enter valid deduct wt. It cannot be greater than gross wt","Alert!");else{const e=this.BarcodeSummaryHeader.Grosswt;this.BarcodeSummaryHeader.Netwt,this.BarcodeSummaryHeader.ItemQty,this.BarcodeSummaryHeader.Stonewt;this.BarcodeSummaryHeader.DedItem=this.BarcodeSummaryHeader.ItemName,this.BillHeader.BillGrosswt=parseFloat((+e+ +this.BarcodeSummaryHeader.AddWt-+this.BarcodeSummaryHeader.DeductWt).toFixed(3)),this.BillHeader.NW=parseFloat((+e+ +this.BarcodeSummaryHeader.AddWt-+this.BarcodeSummaryHeader.Stonewt-+this.BarcodeSummaryHeader.DeductWt).toFixed(3)),this.calculateBarcodeDetails()}}DedWtPopup(){0!=this.BarcodeSummaryHeader.DeductWt&&(this.DeductHeader.Dedwt=this.BarcodeSummaryHeader.DeductWt,this.DeductHeader.DDCounter=this.BarcodeSummaryHeader.DedCounter,this.DeductHeader.ItemName=this.BarcodeSummaryHeader.ItemName)}onchangeOption(e){"5"==e?(this.toggle="MC%",this.BarcodeSummaryHeader.MakingChargePerRs=null,this.BarcodeSummaryHeader.McPerPiece=null,this.BarcodeSummaryHeader.WastPercent=null,this.BarcodeSummaryHeader.McAmount=null,this.BarcodeSummaryHeader.WastageGrms=null):"1"==e?(this.toggle="MC PER GRAM",this.BarcodeSummaryHeader.McPerPiece=null,this.BarcodeSummaryHeader.McPercent=null,this.BarcodeSummaryHeader.McAmount=null,this.BarcodeSummaryHeader.WastageGrms=null,this.BarcodeSummaryHeader.TotalSalesMc=null):"4"==e?(this.toggle="MC Amount - Wastg",this.BarcodeSummaryHeader.MakingChargePerRs=null,this.BarcodeSummaryHeader.McPerPiece=null,this.BarcodeSummaryHeader.McPercent=null,this.BarcodeSummaryHeader.WastPercent=null):"6"==e?(this.toggle="MC PER PIECE",this.BarcodeSummaryHeader.MakingChargePerRs=null,this.BarcodeSummaryHeader.McPercent=null,this.BarcodeSummaryHeader.WastPercent=null,this.BarcodeSummaryHeader.McAmount=null,this.BarcodeSummaryHeader.WastageGrms=null):(this.toggle="NA",this.BarcodeSummaryHeader.MakingChargePerRs=null,this.BarcodeSummaryHeader.McPerPiece=null,this.BarcodeSummaryHeader.McPercent=null,this.BarcodeSummaryHeader.WastPercent=null,this.BarcodeSummaryHeader.McAmount=null,this.BarcodeSummaryHeader.WastageGrms=null)}getStaffList(){this._masterService.getSalesMan().subscribe(e=>{this.StaffList=e,this.BarcodeSummaryHeader.SalCode="A"})}getGSList(){this._masterService.getGsList("S").subscribe(e=>{this.GSList=e})}getItemList(e){this.barcodeService.getItemfromAPI(e).subscribe(e=>{this.ItemList=e})}getCounter(e){"CHCN"==e?(this.EnableAddRow=!0,this.fieldArray1=[]):this.EnableAddRow=!1,this._masterService.getCounter(this.AddBarcodeForm.value.GsCode,e).subscribe(t=>{this.CounterList=t,1==this.CounterList.length&&(this.BarcodeSummaryHeader.CounterCode=this.CounterList[0]),this.getkaratAndPieceItem(this.AddBarcodeForm.value.GsCode,e)})}getAddWtItemList(e){this.barcodeService.getItemfromAPI(e).subscribe(e=>{this.AddWtItemList=e})}getAddWtCounter(e){this._masterService.getCounter(this.AddBarcodeForm.value.GsCode,e).subscribe(e=>{this.AddWtCounterList=e})}getDedWtItemList(e){this.barcodeService.getItemfromAPI(e).subscribe(e=>{this.DedWtItemList=e})}getDedWtCounter(e){this._masterService.getCounter(this.AddBarcodeForm.value.GsCode,e).subscribe(e=>{this.DedWtCounterList=e})}getkaratAndPieceItem(e,t){this._masterService.getkaratAndPieceItem(e,t).subscribe(a=>{if(this.KaratAndPieceItemList=a,this.KaratAndPieceItemList.length>0){let t;this.PieceRate=this.KaratAndPieceItemList[0].IsPiece,"Y"==this.PieceRate&&"SL"==this.BarcodeSummaryHeader.GsCode?(this.EnableDisableAddWt=!1,this.EnableDisableDedGrWt=!1):(this.EnableDisableAddWt=!0,this.EnableDisableDedGrWt=!0),this.BarcodeSummaryHeader.PieceRate=this.PieceRate,this.BarcodeSummaryHeader.Karat=this.KaratAndPieceItemList[0].Karat,this.rateParams={GsCode:e,Karat:this.KaratAndPieceItemList[0].Karat},0!=this.OrderRate?this.BarcodeSummaryHeader.Rate=this.OrderRate:this._masterService.getRateforAddBarcode(this.rateParams).subscribe(e=>{t=e,this.BarcodeSummaryHeader.Rate=t.Rate})}this.getGstPercent(e,t)})}getkaratAndPieceItemForEditBarcode(e,t){this._masterService.getkaratAndPieceItem(e,t).subscribe(a=>{this.KaratAndPieceItemList=a,this.KaratAndPieceItemList.length>0&&(this.PieceRate=this.KaratAndPieceItemList[0].IsPiece,"Y"==this.PieceRate&&"SL"==this.BarcodeSummaryHeader.GsCode?(this.EnableDisableAddWt=!1,this.EnableDisableDedGrWt=!1):(this.EnableDisableAddWt=!0,this.EnableDisableDedGrWt=!0),this.BarcodeSummaryHeader.PieceRate=this.PieceRate,this.BarcodeSummaryHeader.Karat=this.KaratAndPieceItemList[0].Karat,this.rateParams={GsCode:e,Karat:this.KaratAndPieceItemList[0].Karat}),this.getGstPercent(e,t)})}getRate(e){let t,a;0!=this.OrderRate?this.BarcodeSummaryHeader.Rate=this.OrderRate:this._masterService.getRate(e.value).subscribe(e=>{t=e,a=t.Rate,this.BarcodeSummaryHeader.Rate=a})}getMCTypes(){this._masterService.getMCTypes().subscribe(e=>{this.MCList=e})}getInterState(){this.EnableRate=!0,this.EnableMCRate=!0,this.EnableStnDets=!0,this.barcodeService.castInterState.subscribe(e=>{this.interstateDetails=e,this._masterService.getCompanyMaster().subscribe(e=>{this.CompanyMaster=e,this.CompanyMaster.StateCode!=this.interstateDetails.Pos?this.interstate=1:this.interstate=0})})}getDetails(e){this.BarcodeNo=e,this.barcodeService.castInterState.subscribe(t=>{this.interstateDetails=t,this._masterService.getCompanyMaster().subscribe(t=>{this.CompanyMaster=t,this.CompanyMaster.StateCode!=this.interstateDetails.Pos?this.interstate=1:this.interstate=0,""!=this.BarcodeNo&&"0"!=this.BarcodeNo&&this.salesService.getBarcodefromAPI(this.BarcodeNo,this.interstateDetails.OrderNo,this.interstate,0).subscribe(t=>{if(this.BarcodeList=t,"G"==this.BarcodeList.TaggingType)S()("Warning!","Group Barcode cannot be added","warning"),this.BarcodeList=[],this.tagno.nativeElement.value="",this.BarcodeNo="";else{this.BarCodeNo=e,this.readOnly=!0,this.BarcodeSummaryHeader.CompanyCode=this.ccode,this.BarcodeSummaryHeader.BranchCode=this.bcode,this.BarcodeSummaryHeader.AdItem=this.BarcodeList.AdItem,this.BarcodeSummaryHeader.AdCounter=this.BarcodeList.AdCounter,this.BarcodeSummaryHeader.DedItem=this.BarcodeList.DedItem,this.BarcodeSummaryHeader.DedCounter=this.BarcodeList.DedCounter,this.BarcodeSummaryHeader.Grosswt=this.BarcodeList.Grosswt,this.BarcodeSummaryHeader.ItemQty=this.BarcodeList.ItemQty,this.BarcodeSummaryHeader.Stonewt=this.BarcodeList.Stonewt,this.BarcodeSummaryHeader.Netwt=this.BarcodeList.Netwt,this.BarcodeSummaryHeader.AddWt=this.BarcodeList.AddWt,this.BarcodeSummaryHeader.isInterstate=this.interstate,this.BarcodeSummaryHeader.DesignName=this.BarcodeList.DesignName,this.BarcodeSummaryHeader.CounterCode=this.BarcodeList.CounterCode,this.BarcodeSummaryHeader.Rate=this.BarcodeList.Rate,this.BarcodeSummaryHeader.ItemSize=this.BarcodeList.ItemSize,this.BarcodeSummaryHeader.PieceRate=this.BarcodeList.PieceRate,this.BarcodeSummaryHeader.McPerPiece=this.BarcodeList.McPerPiece,this.BarcodeSummaryHeader.McPercent=this.BarcodeList.McPercent,this.BarcodeSummaryHeader.WastPercent=this.BarcodeList.WastPercent,this.BarcodeSummaryHeader.McAmount=this.BarcodeList.McAmount,this.BarcodeSummaryHeader.WastageGrms=this.BarcodeList.WastageGrms,this.BarcodeSummaryHeader.Karat=this.BarcodeList.Karat,this.BarcodeSummaryHeader.GsCode=this.BarcodeList.GsCode,this.BarcodeSummaryHeader.DeductWt=this.BarcodeList.DeductWt,this.BarcodeSummaryHeader.ItemName=this.BarcodeList.ItemName,this.BarcodeSummaryHeader.CounterCode=this.BarcodeList.CounterCode,this.BarcodeSummaryHeader.TotalSalesMc=this.BarcodeList.TotalSalesMc,this.BarcodeSummaryHeader.McDiscountAmt=this.BarcodeList.McDiscountAmt,this.BarcodeSummaryHeader.GoldValue=this.BarcodeList.GoldValue,this.BarcodeSummaryHeader.VaAmount=parseFloat(this.BarcodeList.VaAmount.toFixed(2)),this.BarcodeSummaryHeader.StoneCharges=this.BarcodeList.StoneCharges,this.BarcodeSummaryHeader.DiamondCharges=this.BarcodeList.DiamondCharges,this.BarcodeSummaryHeader.ItemTotalAfterDiscount=this.BarcodeList.ItemTotalAfterDiscount,this.BarcodeSummaryHeader.SGSTAmount=this.BarcodeList.SGSTAmount,this.BarcodeSummaryHeader.CGSTAmount=this.BarcodeList.CGSTAmount,this.BarcodeSummaryHeader.IGSTAmount=this.BarcodeList.IGSTAmount,this.BarcodeSummaryHeader.ItemFinalAmount=this.BarcodeList.ItemFinalAmount,this.BarcodeSummaryHeader.DiscountMc=this.BarcodeList.DiscountMc,this.BarcodeSummaryHeader.TotalAmount=this.BarcodeList.ItemTotalAfterDiscount,this.BarcodeSummaryHeader.ItemAdditionalDiscount=this.BarcodeList.ItemAdditionalDiscount,this.BarcodeSummaryHeader.BillQty=parseInt(this.BarcodeList.ItemQty)+parseInt(this.BarcodeList.AddQty),this.BarcodeSummaryHeader.McType=this.BarcodeList.McType,this.BarcodeSummaryHeader.MakingChargePerRs=this.BarcodeList.MakingChargePerRs,this.BarcodeSummaryHeader.GSTGroupCode=this.BarcodeList.GSTGroupCode;const t=this.BarcodeSummaryHeader.Grosswt,r=this.BarcodeSummaryHeader.Netwt;for(var a in this.BillHeader.BillGrosswt=Number(+t+ +this.BarcodePopupHeader.AdWt),this.BillHeader.NW=Number(+r+ +this.BarcodePopupHeader.AdWt),this.BarcodeSummaryHeader.salesEstStoneVM=this.BarcodeList.salesEstStoneVM,this.BarcodeSummaryHeader.GSTGroupCode=this.BarcodeList.GSTGroupCode,parseFloat(this.BarcodeSummaryHeader.DeductWt)>0&&(this.BillHeader.BillGrosswt=parseFloat((+this.BarcodeSummaryHeader.Grosswt-+this.BarcodeSummaryHeader.DeductWt-+this.DeductHeader.DedSW).toFixed(3)),this.BillHeader.NW=parseFloat((+this.BarcodeSummaryHeader.Grosswt-+this.BarcodeSummaryHeader.DeductWt-+this.DeductHeader.DedSW).toFixed(3))),this.onchangeOption(this.BarcodeSummaryHeader.McType),this.fieldArray1=this.BarcodeList.salesEstStoneVM,this.fieldArray1)this.EnableEditDelbtn[a]=!0,this.EnableSaveCnlbtn[a]=!1,this.readonly[a]=!0,this.readonly1[a]=!0,this.readonlyRate[a]=!0,this.getStoneName(this.BarcodeList.salesEstStoneVM[a].Type,a);this.getItemList(this.BarcodeList.GsCode),this.getAddWtItemList(this.BarcodeList.GsCode),this.getDedWtItemList(this.BarcodeList.GsCode),this._masterService.getCounter(this.BarcodeList.GsCode,this.BarcodeList.ItemName).subscribe(e=>{this.CounterList=e,this.getkaratAndPieceItem(this.BarcodeList.GsCode,this.BarcodeList.ItemName)})}})})})}getBarcodeDetails(e){this.storeExistingBarcodeDets=Object.assign({},e),this.fieldArray1=[],this.BarCodeNo=e.BarcodeNo,this.BarcodeList=e,this.BarcodeSummaryHeader.CompanyCode=this.ccode,this.BarcodeSummaryHeader.BranchCode=this.bcode,this.BarcodeSummaryHeader.AdItem=this.BarcodeList.AdItem,this.BarcodeSummaryHeader.AdCounter=this.BarcodeList.AdCounter,this.BarcodeSummaryHeader.DedItem=this.BarcodeList.DedItem,this.BarcodeSummaryHeader.DedCounter=this.BarcodeList.DedCounter,this.getItemList(this.BarcodeList.GsCode),this.getAddWtItemList(this.BarcodeList.GsCode),this.getDedWtItemList(this.BarcodeList.GsCode),this.BarcodeSummaryHeader.BarcodeNo=this.BarCodeNo,this.BarcodeSummaryHeader.SalCode=this.BarcodeList.SalCode,this.BarcodeSummaryHeader.Grosswt=this.BarcodeList.Grosswt,this.BarcodeSummaryHeader.ItemQty=this.BarcodeList.ItemQty,this.BarcodeSummaryHeader.Stonewt=this.BarcodeList.Stonewt,this.BarcodeSummaryHeader.AdBarcode=this.BarcodeList.AdBarcode,this.BarcodeSummaryHeader.Netwt=this.BarcodeList.Netwt,this.BarcodeSummaryHeader.AddWt=this.BarcodeList.AddWt,this.BarcodeSummaryHeader.AddQty=this.BarcodeList.AddQty,this.BarcodeSummaryHeader.DesignName=this.BarcodeList.DesignName,this.BarcodeSummaryHeader.Rate=this.BarcodeList.Rate,this.BarcodeSummaryHeader.ItemSize=this.BarcodeList.ItemSize,this.BarcodeSummaryHeader.PieceRate=this.BarcodeList.PieceRate,this.BarcodeSummaryHeader.McType=this.BarcodeList.McType,this.BarcodeSummaryHeader.McPerPiece=this.BarcodeList.McPerPiece,this.BarcodeSummaryHeader.McPercent=this.BarcodeList.McPercent,this.BarcodeSummaryHeader.WastPercent=this.BarcodeList.WastPercent,this.BarcodeSummaryHeader.McAmount=this.BarcodeList.McAmount,this.BarcodeSummaryHeader.WastageGrms=this.BarcodeList.WastageGrms,this.BarcodeSummaryHeader.Karat=this.BarcodeList.Karat,this.BarcodeSummaryHeader.GsCode=this.BarcodeList.GsCode,this.BarcodeSummaryHeader.ItemName=this.BarcodeList.ItemName,this.BarcodeSummaryHeader.DiscountMc=this.BarcodeList.DiscountMc,this.BarcodeSummaryHeader.CounterCode=this.BarcodeList.CounterCode,this.BarcodeSummaryHeader.DeductWt=this.BarcodeList.DeductWt,this.BarcodeSummaryHeader.TotalSalesMc=this.BarcodeList.TotalSalesMc,this.BarcodeSummaryHeader.McDiscountAmt=this.BarcodeList.McDiscountAmt,this.BarcodeSummaryHeader.GoldValue=this.BarcodeList.GoldValue,this.BarcodeSummaryHeader.VaAmount=parseFloat(this.BarcodeList.VaAmount.toFixed(2)),this.BarcodeSummaryHeader.StoneCharges=this.BarcodeList.StoneCharges,this.BarcodeSummaryHeader.DiamondCharges=this.BarcodeList.DiamondCharges,this.BarcodeSummaryHeader.ItemTotalAfterDiscount=this.BarcodeList.ItemTotalAfterDiscount,this.BarcodeSummaryHeader.SGSTAmount=this.BarcodeList.SGSTAmount,this.BarcodeSummaryHeader.CGSTAmount=this.BarcodeList.CGSTAmount,this.BarcodeSummaryHeader.IGSTAmount=this.BarcodeList.IGSTAmount,this.BarcodeSummaryHeader.ItemFinalAmount=this.BarcodeList.ItemFinalAmount,this.BarcodeSummaryHeader.GSTGroupCode=this.BarcodeList.GSTGroupCode,this.BarcodeSummaryHeader.TotalAmount=this.BarcodeList.TotalAmount,this.BarcodeSummaryHeader.ItemAdditionalDiscount=this.BarcodeList.ItemAdditionalDiscount,this.BarcodeSummaryHeader.MakingChargePerRs=this.BarcodeList.MakingChargePerRs,null!=this.BarcodeList.AddQty&&0!=this.BarcodeList.AddQty?this.BarcodeSummaryHeader.BillQty=parseInt(this.BarcodeList.ItemQty)+parseInt(this.BarcodeList.AddQty):this.BarcodeSummaryHeader.BillQty=parseInt(this.BarcodeList.ItemQty),this.fieldArray1=this.BarcodeList.salesEstStoneVM;const t=this.BarcodeSummaryHeader.Grosswt,a=this.BarcodeSummaryHeader.Netwt;for(var r in this.BillHeader.BillGrosswt=Number(+t+ +this.BarcodePopupHeader.AdWt),this.BillHeader.NW=Number(+a+ +this.BarcodePopupHeader.AdWt),parseFloat(this.BarcodeSummaryHeader.DeductWt)>0&&(this.BillHeader.BillGrosswt=parseFloat((+this.BarcodeSummaryHeader.Grosswt-+this.BarcodeSummaryHeader.DeductWt-+this.DeductHeader.DedSW).toFixed(3)),this.BillHeader.NW=parseFloat((+this.BarcodeSummaryHeader.Grosswt-+this.BarcodeSummaryHeader.DeductWt-+this.DeductHeader.DedSW).toFixed(3))),this.fieldArray1)this.EnableEditDelbtn[r]=!0,this.EnableSaveCnlbtn[r]=!1,this.readonly[r]=!0,this.readonly1[r]=!0,this.readonlyRate[r]=!0,this.BarcodeSummaryHeader.salesEstStoneVM[r]=this.fieldArray1[r],this.getStoneName(this.BarcodeList.salesEstStoneVM[r].Type,r);this.BarcodeList=[]}Addwt(e){null!=e&&0!=e&&(0==this.AlphaNumericValidations(e)?alert("Please enter valid Barcode No"):this.barcodeService.addWtBarcodeCalculation(this.BarcodeSummaryHeader.BarcodeNo,e).subscribe(t=>{this.AddWtDts=t,this.BarcodePopupHeader.Grwt=this.AddWtDts.Grosswt,this.BarcodePopupHeader.ItQty=this.AddWtDts.ItemQty,this.BarcodePopupHeader.Stwt=this.AddWtDts.Stonewt,this.BarcodePopupHeader.Ntwt=this.AddWtDts.Netwt,this.BarcodePopupHeader.AdWt=this.AddWtDts.AddWt,this.BarcodePopupHeader.AdQty=this.AddWtDts.AddQty,this.BarcodePopupHeader.tagno=this.BarcodeList.BarcodeNo,this.BarcodePopupHeader.ItemName=this.AddWtDts.ItemName,this.BarcodeSummaryHeader.AdBarcode=e,this._masterService.getCounter(this.AddBarcodeForm.value.GsCode,this.BarcodePopupHeader.ItemName).subscribe(e=>{this.AddWtCounterList=e,this.BarcodePopupHeader.CounterCode=this.AddWtDts.CounterCode})},e=>{if(404===e.status){const t=e.error;S()("Warning!",t.description,"warning"),this.PopupRadioBtnChnge("Tag")}}))}AlphaNumericValidations(e){if(null!=e&&""!=e){return/^[a-zA-Z0-9]+$/g.test(e)}return!0}getGstPercent(e,t){this._masterService.getGSTPercent(e,t).subscribe(e=>{this.GstPercentList=e,this.CGSTPer=this.GstPercentList[0].GSTPercent,this.SGSTPer=this.GstPercentList[1].GSTPercent,this.IGSTPer=this.GstPercentList[2].GSTPercent})}SaveAddWt(){null==this.BarcodePopupHeader.AdWt||""==this.BarcodePopupHeader.AdWt?this.toastr.warning("Please fill in the Add Weight field","Alert!"):this.barcodeService.getAddWightItemGrossWeight(this.ccode,this.bcode,this.BarcodeSummaryHeader.GsCode,this.BarcodePopupHeader.CounterCode,this.BarcodePopupHeader.ItemName).subscribe(e=>{if(this.weight=e,0==this.weight.wight)this.toastr.warning("Item weight is Nil, It cannot be added.","Alert!");else if(this.BarcodePopupHeader.AdWt>this.weight.wight)this.toastr.warning("Item weight is less than "+this.BarcodePopupHeader.AdWt+" grams,It cannot be added.","Alert!");else{$("#addWeight").modal("hide");const e=this.BarcodeSummaryHeader.Grosswt,t=this.BarcodePopupHeader.AdWt,a=this.BarcodePopupHeader.AdQty;this.BarcodeSummaryHeader.AddQty=a,this.BarcodeSummaryHeader.AddWt=this.BarcodePopupHeader.AdWt,this.BarcodeSummaryHeader.AdItem=this.BarcodePopupHeader.ItemName,this.BarcodeSummaryHeader.AdCounter=this.BarcodePopupHeader.CounterCode,this.BillHeader.BillGrosswt=parseFloat((+e+ +t).toFixed(3)),this.BillHeader.BillGrosswt=parseFloat((+this.BillHeader.BillGrosswt-+this.BarcodeSummaryHeader.DeductWt).toFixed(3)),this.BillHeader.NW=parseFloat((+this.BarcodeSummaryHeader.AddWt+ +this.BarcodeSummaryHeader.Netwt).toFixed(3)),this.BillHeader.NW=parseFloat((+this.BillHeader.NW-+this.BarcodeSummaryHeader.DeductWt).toFixed(3)),this.BarcodeSummaryHeader.BillQty=parseInt(this.BarcodeSummaryHeader.ItemQty)+parseInt(this.BarcodeSummaryHeader.AddQty),this.calculateBarcodeDetails(),this.BarcodePopupHeader={ItQty:null,CounterCode:null,ItemName:null,ItemNo:null,Grwt:null,Stwt:null,Ntwt:null,AddWt:null,DeductWt:null,AdBarcode:null,AdCounter:null,AdItem:null,AdWt:null,AdQty:null,tagno:null}}})}SaveDeductWt(){if(null==this.DeductHeader.ItemName||0==this.DeductHeader.ItemName)this.toastr.warning("Please select item.","Alert!");else if(this.DeductHeader.DedQty>=this.BarcodeSummaryHeader.ItemQty)this.toastr.warning("Deduct qty should not be greater than or equal to Item quantity.It cannot be deducted.","Alert!");else if(null==this.DeductHeader.Dedwt||""==this.DeductHeader.Dedwt)this.toastr.warning("Please fill in the Deduct Weight field","Alert!");else if(this.DeductHeader.Dedwt>=this.BarcodeSummaryHeader.Grosswt)this.toastr.warning("Item Weight is less or equal "+this.DeductHeader.Dedwt+" grams, It cannot be deducted.","Alert!");else if(this.DeductHeader.DedSW>this.BarcodeSummaryHeader.Stonewt)this.toastr.warning("Deduct stone weight is greater than Item stone weight.It cannot be deducted.","Alert!");else if(0==this.DeductHeader.Dedwt){confirm("Weight Deduction is Zero Grams, Do you want to Save?")&&this.DeductWtCalc()}else this.DeductWtCalc()}GetBillQty(){this.BarcodeSummaryHeader.BillQty=parseInt(this.BarcodeSummaryHeader.ItemQty)}DeductStWtCalc(e){this.BarcodeSummaryHeader.DeductSWt=e;const t=this.BarcodeSummaryHeader.Grosswt,a=(this.BarcodeSummaryHeader.Netwt,this.BarcodeSummaryHeader.ItemQty),r=this.BarcodeSummaryHeader.Stonewt;this.BarcodeSummaryHeader.DedCounter=this.DeductHeader.DDCounter,this.BarcodeSummaryHeader.DedItem=this.BarcodeSummaryHeader.ItemName,this.BarcodeSummaryHeader.ItemQty=parseFloat((+a-+this.DeductHeader.DedQty).toFixed(2)),this.BarcodeSummaryHeader.DeductWt=this.DeductHeader.Dedwt,this.BarcodeSummaryHeader.Stonewt=parseFloat((+r-+this.BarcodeSummaryHeader.DeductSWt).toFixed(3)),this.BarcodeSummaryHeader.GrossWt=parseFloat((+t-+this.BarcodeSummaryHeader.DeductSWt).toFixed(3)),this.BillHeader.BillGrosswt=parseFloat((+t+ +this.BarcodeSummaryHeader.AddWt-+this.BarcodeSummaryHeader.DeductSWt).toFixed(3)),this.BillHeader.NW=parseFloat((+this.BarcodeSummaryHeader.GrossWt+ +this.BarcodeSummaryHeader.AddWt-+this.BarcodeSummaryHeader.Stonewt-+this.BarcodeSummaryHeader.DeductWt).toFixed(3)),this.calculateBarcodeDetails()}DeductWtCalc(){$("#DeductWeight").modal("hide");const e=this.BarcodeSummaryHeader.Grosswt,t=(this.BarcodeSummaryHeader.Netwt,this.BarcodeSummaryHeader.ItemQty),a=this.BarcodeSummaryHeader.Stonewt;this.BarcodeSummaryHeader.DedCounter=this.DeductHeader.DDCounter,this.BarcodeSummaryHeader.DedItem=this.BarcodeSummaryHeader.ItemName,this.BarcodeSummaryHeader.ItemQty=parseFloat((+t-+this.DeductHeader.DedQty).toFixed(2)),this.BarcodeSummaryHeader.DeductWt=this.DeductHeader.Dedwt,this.BarcodeSummaryHeader.Stonewt=parseFloat((+a-+this.DeductHeader.DedSW).toFixed(3)),this.BarcodeSummaryHeader.GrossWt=parseFloat((+e-+this.DeductHeader.DedSW).toFixed(3)),this.BillHeader.BillGrosswt=parseFloat((+e+ +this.BarcodeSummaryHeader.AddWt-+this.BarcodeSummaryHeader.DeductWt).toFixed(3)),this.BillHeader.NW=parseFloat((+this.BarcodeSummaryHeader.GrossWt+ +this.BarcodeSummaryHeader.AddWt-+this.BarcodeSummaryHeader.DeductWt).toFixed(3)),this.calculateBarcodeDetails(),this.DeductHeader={Qty:null,CounterCode:null,DDCounter:null,GW:null,SW:null,NW:null,DedQty:null,Dedwt:null,DedSW:null,TagNo:null,ItemName:null,Iname:null,ItemQty:null}}calculateBarcodeDetails(){this.barcodeService.calculateBarcode(this.BarcodeSummaryHeader).subscribe(e=>{this.BarcodeSummaryHeader=null,this.calculatedData=e,this.BarcodeSummaryHeader=this.calculatedData},e=>{if(400===e.status){const t=e.error;S()("Warning!",t.description,"warning"),"MC Amount less than Min MC"==t.description&&(this.BarcodeSummaryHeader.McPercent=null,this.calculateBarcodeDetails())}})}closeModal(){$("#addWeight").modal("hide"),$("#DeductWeight").modal("hide"),this.BarcodePopupHeader={ItQty:null,CounterCode:null,ItemName:null,ItemNo:null,Grwt:null,Stwt:null,Ntwt:null,AddWt:null,DeductWt:null,AdBarcode:null,AdCounter:null,AdItem:null,AdWt:null,AdQty:null,tagno:null}}GetNetWT(){if(null==this.BarcodeSummaryHeader.SalCode||""==this.BarcodeSummaryHeader.SalCode)this.toastr.warning("Please select Staff","Alert!"),this.BarcodeSummaryHeader.Grosswt=0,this.BarcodeSummaryHeader.Stonewt=0;else if(null==this.BarcodeSummaryHeader.GsCode||""==this.BarcodeSummaryHeader.GsCode)this.toastr.warning("Please select GS","Alert!"),this.BarcodeSummaryHeader.Grosswt=0,this.BarcodeSummaryHeader.Stonewt=0;else if(null==this.BarcodeSummaryHeader.ItemName||""==this.BarcodeSummaryHeader.ItemName)this.toastr.warning("Please select Item","Alert!"),this.BarcodeSummaryHeader.Grosswt=0,this.BarcodeSummaryHeader.Stonewt=0;else if(null==this.BarcodeSummaryHeader.Karat||""==this.BarcodeSummaryHeader.Karat)this.toastr.warning("Please select Karat","Alert!"),this.BarcodeSummaryHeader.Grosswt=0,this.BarcodeSummaryHeader.Stonewt=0;else if(this.BarcodeSummaryHeader.Stonewt>=this.BarcodeSummaryHeader.Grosswt)this.toastr.warning("Please enter valid St.Wt(g)","Alert!"),this.BarcodeSummaryHeader.Stonewt=0;else{this.calculateBarcodeDetails();const e=this.BarcodeSummaryHeader.Grosswt,t=this.BarcodeSummaryHeader.Stonewt;this.BarcodeSummaryHeader.Netwt=parseFloat((e-t).toFixed(3)),this.BillHeader.BillGrosswt=parseFloat((+e+ +this.BarcodePopupHeader.AdWt).toFixed(3)),this.BillHeader.NW=this.BarcodeSummaryHeader.Netwt}}getMCAmt(){if(5==this.BarcodeSummaryHeader.McType)this.McAmt=0,this.McAmt=this.BarcodeSummaryHeader.GoldValue,this.BarcodeSummaryHeader.TotalSalesMc=this.BarcodeSummaryHeader.McPercent,this.BarcodeSummaryHeader.VaAmount=parseFloat((this.McAmt*this.BarcodeSummaryHeader.McPercent/100).toFixed(2)),this.BarcodeSummaryHeader.ItemTotalAfterDiscount=parseFloat((this.BarcodeSummaryHeader.GoldValue+this.BarcodeSummaryHeader.VaAmount+this.BarcodeSummaryHeader.StoneCharges+ +this.BarcodeSummaryHeader.DiamondCharges).toFixed(2)),this.BarcodeSummaryHeader.CGSTAmount=parseFloat((this.BarcodeSummaryHeader.ItemTotalAfterDiscount*this.CGSTPer/100).toFixed(2)),this.BarcodeSummaryHeader.SGSTAmount=parseFloat((this.BarcodeSummaryHeader.ItemTotalAfterDiscount*this.SGSTPer/100).toFixed(2)),this.BarcodeSummaryHeader.ItemFinalAmount=parseFloat((this.BarcodeSummaryHeader.ItemTotalAfterDiscount+this.BarcodeSummaryHeader.SGSTAmount+this.BarcodeSummaryHeader.CGSTAmount).toFixed(2)),this.BarcodeSummaryHeader.TotalAmount=parseFloat(this.BarcodeSummaryHeader.ItemTotalAfterDiscount.toFixed(2));else if(1==this.BarcodeSummaryHeader.McType)this.BarcodeSummaryHeader.TotalSalesMc=this.BarcodeSummaryHeader.MakingChargePerRs,this.BarcodeSummaryHeader.VaAmount=parseFloat((this.BarcodeSummaryHeader.Netwt*this.BarcodeSummaryHeader.MakingChargePerRs+this.BarcodeSummaryHeader.Netwt*this.BarcodeSummaryHeader.WastPercent/100*this.BarcodeSummaryHeader.Rate).toFixed(2)),this.BarcodeSummaryHeader.McDiscountAmt=this.BarcodeSummaryHeader.Netwt*this.BarcodeSummaryHeader.WastPercent/100*this.BarcodeSummaryHeader.Rate,this.BarcodeSummaryHeader.ItemAdditionalDiscount=this.BarcodeSummaryHeader.McDiscountAmt,this.BarcodeSummaryHeader.ItemTotalAfterDiscount=Number(this.BarcodeSummaryHeader.GoldValue+this.BarcodeSummaryHeader.VaAmount+this.BarcodeSummaryHeader.StoneCharges+ +this.BarcodeSummaryHeader.DiamondCharges),this.BarcodeSummaryHeader.CGSTAmount=Number(this.BarcodeSummaryHeader.ItemTotalAfterDiscount*this.CGSTPer/100),this.BarcodeSummaryHeader.SGSTAmount=Number(this.BarcodeSummaryHeader.ItemTotalAfterDiscount*this.SGSTPer/100),this.BarcodeSummaryHeader.ItemFinalAmount=Number(this.BarcodeSummaryHeader.ItemTotalAfterDiscount+this.BarcodeSummaryHeader.SGSTAmount+this.BarcodeSummaryHeader.CGSTAmount),this.BarcodeSummaryHeader.TotalAmount=parseFloat(this.BarcodeSummaryHeader.ItemTotalAfterDiscount.toFixed(2));else if(4==this.BarcodeSummaryHeader.McType){var e=this.BarcodeSummaryHeader.WastageGrms,t=this.BarcodeSummaryHeader.Rate;this.BarcodeSummaryHeader.VaAmount=parseFloat((+this.BarcodeSummaryHeader.McAmount+ +e*+t).toFixed(2)),this.BarcodeSummaryHeader.ItemTotalAfterDiscount=Number(this.BarcodeSummaryHeader.GoldValue+this.BarcodeSummaryHeader.VaAmount+this.BarcodeSummaryHeader.StoneCharges+ +this.BarcodeSummaryHeader.DiamondCharges),this.BarcodeSummaryHeader.CGSTAmount=Number(this.BarcodeSummaryHeader.ItemTotalAfterDiscount*this.CGSTPer/100),this.BarcodeSummaryHeader.SGSTAmount=Number(this.BarcodeSummaryHeader.ItemTotalAfterDiscount*this.SGSTPer/100),this.BarcodeSummaryHeader.ItemFinalAmount=Number(this.BarcodeSummaryHeader.ItemTotalAfterDiscount+this.BarcodeSummaryHeader.SGSTAmount+this.BarcodeSummaryHeader.CGSTAmount),this.BarcodeSummaryHeader.TotalAmount=parseFloat(this.BarcodeSummaryHeader.ItemTotalAfterDiscount.toFixed(2))}else 6==this.BarcodeSummaryHeader.McType&&(this.BarcodeSummaryHeader.TotalSalesMc=this.BarcodeSummaryHeader.McPerPiece,this.BarcodeSummaryHeader.VaAmount=parseFloat((this.BarcodeSummaryHeader.McPerPiece*this.BarcodeSummaryHeader.ItemQty).toFixed(2)),this.BarcodeSummaryHeader.ItemTotalAfterDiscount=Number(this.BarcodeSummaryHeader.GoldValue+this.BarcodeSummaryHeader.VaAmount+this.BarcodeSummaryHeader.StoneCharges),this.BarcodeSummaryHeader.CGSTAmount=Number(this.BarcodeSummaryHeader.ItemTotalAfterDiscount*this.CGSTPer/100),this.BarcodeSummaryHeader.SGSTAmount=Number(this.BarcodeSummaryHeader.ItemTotalAfterDiscount*this.SGSTPer/100),this.BarcodeSummaryHeader.ItemFinalAmount=Number(this.BarcodeSummaryHeader.ItemTotalAfterDiscount+this.BarcodeSummaryHeader.SGSTAmount+this.BarcodeSummaryHeader.CGSTAmount),this.BarcodeSummaryHeader.TotalAmount=parseFloat(this.BarcodeSummaryHeader.ItemTotalAfterDiscount.toFixed(2)))}getStoneWt(e){this.getAmount(e),this.fieldArray1[e].StoneWt=parseFloat((.2*this.fieldArray1[e].Carrat).toFixed(3))}getAmount(e){0!=this.fieldArray1[e].Carrat&&null!=this.fieldArray1[e].Carrat?this.fieldArray1[e].Amount=this.fieldArray1[e].Carrat*this.fieldArray1[e].Rate:this.fieldArray1[e].Amount=this.fieldArray1[e].Qty*this.fieldArray1[e].Rate}addrow(){this.stoneDtls={ObjID:null,CompanyCode:this.ccode,BranchCode:this.bcode,BillNo:null,SlNo:null,EstNo:null,EstSrNo:null,BarcodeNo:this.BarCodeNo,Type:null,Name:null,Qty:null,Carrat:null,StoneWt:null,Rate:null,Amount:null,Tax:null,TaxAmount:null,TotalAmount:null,BillType:null,DealerSalesNo:null,BillDet11PK:null,UpdateOn:null,FinYear:null,Color:null,Clarity:null,Shape:null,Cut:null,Polish:null,Symmetry:null,Fluorescence:null,Certificate:null},this.fieldArray1.push(this.stoneDtls);for(let{}of this.fieldArray1)this.count++;this.EnableSaveCnlbtn[this.count-1]=!0,this.EnableEditDelbtn[this.count-1]=!1,this.readonly[this.count-1]=!1,this.readonly1[this.count-1]=!1,this.readonlyRate[this.count-1]=!1,this.count=0,this.EnableAddRow=!0,this.EnableSubmitButton=!0,this.EnableDropdown=!0}saveDataFieldValue(e){null==this.BarcodeSummaryHeader.Grosswt||0==this.BarcodeSummaryHeader.Grosswt?this.toastr.warning("Please Enter item weight","Alert!"):null==this.fieldArray1[e].Type||0==this.fieldArray1[e].Type||null==this.fieldArray1[e].Type||0==this.fieldArray1[e].Type?this.toastr.warning("Please Select Stone/Diamond","Alert!"):null==this.fieldArray1[e].Name||0==this.fieldArray1[e].Name?this.toastr.warning("Please Select ItemName","Alert!"):null==this.fieldArray1[e].Qty||0==this.fieldArray1[e].Qty?this.toastr.warning("Please Enter Quantity","Alert!"):null==this.fieldArray1[e].Rate||0==this.fieldArray1[e].Rate?this.toastr.warning("Please Enter Rate/Carat","Alert!"):(this.BarcodeSummaryHeader.salesEstStoneVM[e]=this.fieldArray1[e],this.EnableEditDelbtn[e]=!0,this.EnableSaveCnlbtn[e]=!1,this.readonly[e]=!0,this.readonly1[e]=!0,this.readonlyRate[e]=!0,this.EnableAddRow=!1,this.EnableSubmitButton=!1,"DMD"==this.fieldArray1[e].Type?(this.totalAmtDmd+=this.fieldArray1[e].Amount,this.BarcodeSummaryHeader.DiamondCharges=this.totalAmtDmd,this.calculateBarcodeDetails()):"STN"==this.fieldArray1[e].Type&&(this.totalAmtStn+=this.fieldArray1[e].Amount,this.BarcodeSummaryHeader.StoneCharges=this.totalAmtStn,"Tag"==this.model.name?(null!=this.CopyEditedRow[e]||(this.BarcodeSummaryHeader.Stonewt=+this.BarcodeSummaryHeader.Stonewt+ +this.fieldArray1[e].StoneWt,this.BarcodeSummaryHeader.Grosswt=Number(this.BarcodeSummaryHeader.Grosswt+ +this.fieldArray1[e].StoneWt).toFixed(3),this.BillHeader.BillGrosswt=Number(+this.BarcodeSummaryHeader.Grosswt+ +this.BarcodePopupHeader.AdWt).toFixed(3),this.BillHeader.NW=Number(+this.BarcodeSummaryHeader.Netwt+ +this.BarcodePopupHeader.AdWt).toFixed(3)),this.calculateBarcodeDetails()):null!=this.CopyEditedRow[e]?this.calculateBarcodeDetails():(this.StneWt=+this.BarcodeSummaryHeader.Stonewt+ +this.fieldArray1[e].StoneWt,this.GrWt=this.BarcodeSummaryHeader.Grosswt,this.StneWt>this.BarcodeSummaryHeader.Grosswt?(this.toastr.warning("Please enter valid St.Wt","Alert!"),this.EnableSaveCnlbtn[e]=!0,this.EnableEditDelbtn[e]=!1,this.readonly[e]=!1,this.readonly1[e]=!1,this.readonlyRate[e]=!1,this.EnableAddRow=!0,this.EnableDropdown=!0):(this.BarcodeSummaryHeader.Stonewt=parseFloat((+this.BarcodeSummaryHeader.Stonewt+ +this.fieldArray1[e].StoneWt).toFixed(3)),this.BarcodeSummaryHeader.Netwt=Number(this.BarcodeSummaryHeader.Grosswt-this.BarcodeSummaryHeader.Stonewt),this.BillHeader.BillGrosswt=Number(+this.BarcodeSummaryHeader.Grosswt+ +this.BarcodePopupHeader.AdWt),this.BillHeader.NW=Number(+this.BarcodeSummaryHeader.Netwt+ +this.BarcodePopupHeader.AdWt),this.calculateBarcodeDetails()))),this.CopyEditedRow=[])}cancelDataFieldValue(e){this.EnableAddRow=!1,null!=this.CopyEditedRow[e]?(this.fieldArray1[e]=this.CopyEditedRow[e],"STN"==this.fieldArray1[e].Type&&(this.totalAmtStn=this.totalAmtStn+this.fieldArray1[e].Amount,this.BarcodeSummaryHeader.StoneCharges=this.totalAmtStn),"DMD"==this.fieldArray1[e].Type&&(this.totalAmtDmd=this.totalAmtDmd+this.fieldArray1[e].Amount,this.BarcodeSummaryHeader.DiamondCharges=this.totalAmtDmd),this.CopyEditedRow[e]=null,this.EnableSaveCnlbtn[e]=!1,this.EnableEditDelbtn[e]=!0,this.readonly[e]=!0,this.readonly1[e]=!0,this.readonlyRate[e]=!0,this.CopyEditedRow=[]):this.fieldArray1.splice(e,1),this.EnableDisableSubmit()}EnableDisableSubmit(){this.fieldArray1.length<=0?(this.EnableSubmitButton=!0,this.EnableDropdown=!1):(this.EnableSubmitButton=!1,this.EnableDropdown=!0)}editFieldValue(e){1==this.EnableAddRow?this.toastr.warning("Please save the enabled item","Alert!"):(this.CopyEditedRow[e]=Object.assign({},this.fieldArray1[e]),this.calculateBarcodeDetails(),this.EnableEditDelbtn[e]=!1,this.EnableSaveCnlbtn[e]=!0,this.readonly[e]=!0,this.readonly1[e]=!0,this.readonlyRate[e]=!1,this.EnableAddRow=!0,this.EnableSubmitButton=!0)}deleteFieldValue(e){if(1==this.EnableAddRow)this.toastr.warning("Please save the enabled item","Alert!");else{if(this.BarcodeSummaryHeader.salesEstStoneVM.splice(e,1),"STN"==this.fieldArray1[e].Type){const t=this.fieldArray1[e].StoneWt;this.BarcodeSummaryHeader.Stonewt=Number(this.BarcodeSummaryHeader.Stonewt-this.fieldArray1[e].StoneWt).toFixed(3),this.BarcodeSummaryHeader.Netwt=Number(this.BarcodeSummaryHeader.Grosswt-this.fieldArray1[e].StoneWt).toFixed(3),this.BillHeader.NW=parseFloat((+t+ +this.BarcodeSummaryHeader.Netwt).toFixed(3))}this.fieldArray1.splice(e,1),this.calculateBarcodeDetails(),this.EnableDisableSubmit()}}getStoneType(){this.barcodeService.getStoneType().subscribe(e=>{this.stoneType=e})}getStoneName(e,t){this.barcodeService.getStoneName(e).subscribe(e=>{this.stoneName[t]=e})}SubmitBarcodeDetails(){"Tag"==this.model.name?null==this.BarcodeSummaryHeader.BarcodeNo||""==this.BarcodeSummaryHeader.BarcodeNo?this.toastr.warning("Please enter the Tag No","Alert!"):null==this.BarcodeSummaryHeader.SalCode||""==this.BarcodeSummaryHeader.SalCode?this.toastr.warning("Please select the Staff","Alert!"):null!=this.BarcodeSummaryHeader.VaAmount&&0!=this.BarcodeSummaryHeader.VaAmount||"N"!=this.BarcodeSummaryHeader.PieceRate?this.SaveBarcodeDetails():this.toastr.warning("Please enter the Mc Amt","Alert!"):"Non Tag"==this.model.name&&(null==this.BarcodeSummaryHeader.GsCode||""==this.BarcodeSummaryHeader.GsCode?this.toastr.warning("Please select the GS","Alert!"):null==this.BarcodeSummaryHeader.ItemName||""==this.BarcodeSummaryHeader.ItemName?this.toastr.warning("Please select the Item","Alert!"):null==this.BarcodeSummaryHeader.CounterCode||""==this.BarcodeSummaryHeader.CounterCode?this.toastr.warning("Please select the Counter","Alert!"):null==this.BarcodeSummaryHeader.PieceRate||""==this.BarcodeSummaryHeader.PieceRate?this.toastr.warning("Please select the Piece Item","Alert!"):null==this.BarcodeSummaryHeader.Karat||""==this.BarcodeSummaryHeader.Karat?this.toastr.warning("Please select the Karat","Alert!"):"Y"!=this.BarcodeSummaryHeader.PieceRate?null==this.BarcodeSummaryHeader.ItemQty?this.toastr.warning("Please enter the Item Qty","Alert!"):null==this.BarcodeSummaryHeader.Grosswt||0==this.BarcodeSummaryHeader.Grosswt?this.toastr.warning("Please enter the valid Gr.Wt(g)","Alert!"):5==this.BarcodeSummaryHeader.McType?(null!=this.BarcodeSummaryHeader.VaAmount&&0!=this.BarcodeSummaryHeader.VaAmount||null!=this.BarcodeSummaryHeader.McPercent&&0!=this.BarcodeSummaryHeader.McPercent)&&(null==this.BarcodeSummaryHeader.VaAmount&&0!=this.BarcodeSummaryHeader.VaAmount||null!=this.BarcodeSummaryHeader.McPercent&&0!=this.BarcodeSummaryHeader.McPercent)?this.SaveBarcodeDetails():this.toastr.warning("Please enter the Mc Percent","Alert!"):1==this.BarcodeSummaryHeader.McType?null!=this.BarcodeSummaryHeader.VaAmount&&0!=this.BarcodeSummaryHeader.VaAmount||null!=this.BarcodeSummaryHeader.MakingChargePerRs&&0!=this.BarcodeSummaryHeader.MakingChargePerRs?null!=this.BarcodeSummaryHeader.VaAmount&&0!=this.BarcodeSummaryHeader.VaAmount||null!=this.BarcodeSummaryHeader.WastPercent&&0!=this.BarcodeSummaryHeader.WastPercent?null==this.BarcodeSummaryHeader.VaAmount&&0!=this.BarcodeSummaryHeader.VaAmount||null!=this.BarcodeSummaryHeader.MakingChargePerRs&&0!=this.BarcodeSummaryHeader.MakingChargePerRs||null!=this.BarcodeSummaryHeader.WastPercent&&0!=this.BarcodeSummaryHeader.WastPercent?this.SaveBarcodeDetails():this.toastr.warning("Please enter the MC/Gram","Alert!"):this.toastr.warning("Please enter the MakingChargePerRs","Alert!"):this.toastr.warning("Please enter the MC/Gram","Alert!"):4==this.BarcodeSummaryHeader.McType?null!=this.BarcodeSummaryHeader.VaAmount&&0!=this.BarcodeSummaryHeader.VaAmount||null!=this.BarcodeSummaryHeader.McAmount&&0!=this.BarcodeSummaryHeader.McAmount?null!=this.BarcodeSummaryHeader.VaAmount&&0!=this.BarcodeSummaryHeader.VaAmount||null!=this.BarcodeSummaryHeader.WastageGrms&&0!=this.BarcodeSummaryHeader.WastageGrms?null==this.BarcodeSummaryHeader.VaAmount&&0!=this.BarcodeSummaryHeader.VaAmount||null!=this.BarcodeSummaryHeader.McAmount&&0!=this.BarcodeSummaryHeader.McAmount||null!=this.BarcodeSummaryHeader.WastageGrms&&0!=this.BarcodeSummaryHeader.WastageGrms?this.SaveBarcodeDetails():this.toastr.warning("Please enter the McAmount","Alert!"):this.toastr.warning("Please enter the WastageGrms","Alert!"):this.toastr.warning("Please enter the McAmount","Alert!"):6==this.BarcodeSummaryHeader.McType?(null!=this.BarcodeSummaryHeader.VaAmount&&0!=this.BarcodeSummaryHeader.VaAmount||null!=this.BarcodeSummaryHeader.McPerPiece&&0!=this.BarcodeSummaryHeader.McPerPiece)&&(null==this.BarcodeSummaryHeader.VaAmount&&0!=this.BarcodeSummaryHeader.VaAmount||null!=this.BarcodeSummaryHeader.McPerPiece&&0!=this.BarcodeSummaryHeader.McPerPiece)?this.SaveBarcodeDetails():this.toastr.warning("Please enter the MC/Piece","Alert!"):this.SaveBarcodeDetails():this.SaveBarcodeDetails())}SaveBarcodeDetails(){0==this.BarcodeSummaryHeader.ItemFinalAmount||null==this.BarcodeSummaryHeader.ItemFinalAmount?this.toastr.warning("Item Amount is Zero. It cannot be billed.","Alert!"):(this.EnableStnDets=!0,this.barcodeService.SendBarcodeDataToSalesComp(null),this.barcodeService.SendBarcodeDataToSalesComp(this.BarcodeSummaryHeader),this.HideRadioBtn=!0,this.fieldArray1=[],this.CommonJson())}EditRate(){this.PwdRate.nativeElement.value="",$("#PermissonModalRateGram").modal("show"),this.EnableRate=!0}close(){$("#PermissonModalRateGram").modal("hide")}closeMC(){$("#PermissonMCModal").modal("hide")}passWordRateGram(e){""==e?(this.toastr.warning("Please Enter the Password","Alert!"),$("#PermissonModalRateGram").modal("show"),this.EnableRate=!0):(this.permissonModel.CompanyCode=this.ccode,this.permissonModel.BranchCode=this.bcode,this.permissonModel.PermissionID=this.SalesEstRateEditCode,this.permissonModel.PermissionData=btoa(e),this._masterService.postelevatedpermission(this.permissonModel).subscribe(e=>{this.EnableRate=!1,$("#PermissonModalRateGram").modal("hide")},e=>{401===e.status&&($("#PermissonModalRateGram").modal("show"),this.EnableRate=!0)}))}editRateGram(){this.EnableRate=!0,this.calculateBarcodeDetails()}EditMC(){"Y"==this.BarcodeSummaryHeader.PieceRate?(this.toastr.warning("This is a piece item","Alert!"),$("#PermissonMCModal").modal("hide")):(this.PwdMC.nativeElement.value="",$("#PermissonMCModal").modal("show"))}passWordMC(e){""==e?(this.toastr.warning("Please Enter the Password","Alert!"),$("#PermissonMCModal").modal("show"),this.EnableMCRate=!0):(this.permissonModel.CompanyCode=this.ccode,this.permissonModel.BranchCode=this.bcode,this.permissonModel.PermissionID=this.MCRateEdit,this.permissonModel.PermissionData=btoa(e),this._masterService.postelevatedpermission(this.permissonModel).subscribe(e=>{this.EnableMCRate=!1,$("#PermissonMCModal").modal("hide")},e=>{401===e.status&&($("#PermissonMCModal").modal("show"),this.EnableMCRate=!0)}))}editStoneDets(){this.PwdStnDet.nativeElement.value="",$("#PermissonStnDetsModal").modal("show"),this.EnableStnDets=!0}closeStnDets(){$("#PermissonStnDetsModal").modal("hide")}passWordStnDets(e){""==e?(this.toastr.warning("Please Enter the Password","Alert!"),$("#PermissonStnDetsModal").modal("show"),this.EnableStnDets=!0):(this.permissonModel.CompanyCode=this.ccode,this.permissonModel.BranchCode=this.bcode,this.permissonModel.PermissionID=this.StoneDetailsEdit,this.permissonModel.PermissionData=btoa(e),this._masterService.postelevatedpermission(this.permissonModel).subscribe(e=>{this.EnableStnDets=!1,$("#PermissonStnDetsModal").modal("hide")},e=>{401===e.status&&($("#PermissonStnDetsModal").modal("show"),this.EnableStnDets=!0)}))}CommonJson(){this.BarcodeSummaryHeader={ObjID:null,ItemQty:null,CompanyCode:this.ccode,BranchCode:this.bcode,EstNo:null,SlNo:null,BillNo:null,BarcodeNo:null,SalCode:null,CounterCode:null,ItemName:null,ItemNo:null,Grosswt:null,Stonewt:null,Netwt:null,AddWt:null,DeductWt:null,MakingChargePerRs:null,WastPercent:null,GoldValue:null,VaAmount:null,StoneCharges:null,DiamondCharges:null,TotalAmount:null,Hallmarkarges:null,McAmount:null,WastageGrms:null,McPercent:null,AddQty:null,DeductQty:null,OfferValue:null,UpdateOn:null,GsCode:null,Rate:null,Karat:null,AdBarcode:null,AdCounter:null,AdItem:null,IsEDApplicable:null,McType:null,Fin_Year:null,NewBillNo:null,ItemTotalAfterDiscount:null,ItemAdditionalDiscount:null,TaxPercentage:null,TaxAmount:null,ItemFinalAmount:null,SupplierCode:null,ItemSize:null,ImgID:null,DesignCode:null,DesignName:null,BatchID:null,Rf_ID:null,McPerPiece:null,DiscountMc:null,TotalSalesMc:null,McDiscountAmt:null,purchaseMc:null,GSTGroupCode:null,SGSTPercent:null,SGSTAmount:null,CGSTPercent:null,CGSTAmount:null,IGSTPercent:null,IGSTAmount:null,HSN:null,PieceRate:null,DeductSWt:null,OrdDiscountAmt:null,DedCounter:null,DedItem:null,isInterstate:0,salesEstStoneVM:[]}}};g.ctorParameters=()=>[{type:m.b},{type:c.a},{type:l.a},{type:d.FormBuilder},{type:u.a},{type:y.a},{type:B.a}],r.a([Object(o.Input)(),r.c("design:type",Boolean)],g.prototype,"BarcodeFromSales",void 0),r.a([Object(o.ViewChild)("PwdRate",{static:!0}),r.c("design:type",o.ElementRef)],g.prototype,"PwdRate",void 0),r.a([Object(o.ViewChild)("PwdMC",{static:!0}),r.c("design:type",o.ElementRef)],g.prototype,"PwdMC",void 0),r.a([Object(o.ViewChild)("PwdStnDet",{static:!0}),r.c("design:type",o.ElementRef)],g.prototype,"PwdStnDet",void 0),r.a([Object(o.ViewChild)("tagno",{static:!0}),r.c("design:type",o.ElementRef)],g.prototype,"tagno",void 0),g=r.a([Object(o.Component)({selector:"app-add-barcode",template:r.b(a("19kq")).default,styles:[r.b(a("TKBi")).default]}),r.c("design:paramtypes",[m.b,c.a,l.a,d.FormBuilder,u.a,y.a,B.a])],g);const b=[{path:"",canActivate:[s.a],canActivateChild:[s.a],component:g,data:{title:"Add-Barcode",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Add-Barcode"}]}}];let f=class{};f=r.a([Object(o.NgModule)({imports:[i.d.forChild(b)],exports:[i.d]})],f),a.d(t,"AddBarcodeModule",(function(){return A}));let A=class{};A=r.a([Object(o.NgModule)({declarations:[g],imports:[n.CommonModule,f,d.FormsModule,d.ReactiveFormsModule],exports:[g],schemas:[o.CUSTOM_ELEMENTS_SCHEMA]})],A)}}]);