{"version":3,"file":"ng-keyboard-shortcuts.js.map","sources":["ng://ng-keyboard-shortcuts/lib/keys.ts","ng://ng-keyboard-shortcuts/lib/utils.ts","ng://ng-keyboard-shortcuts/lib/ng-keyboard-shortcuts.service.ts","ng://ng-keyboard-shortcuts/lib/ng-keyboard-shortcuts.module.ts"],"sourcesContent":["const isMac = (navigator.userAgent.indexOf('Mac OS') !== -1);\nexport const codes = {\n    'backspace': 8,\n    'tab': 9,\n    'enter': 13,\n    'pause/break': 19,\n    'caps lock': 20,\n    'esc': 27,\n    'space': 32,\n    'page up': 33,\n    'page down': 34,\n    'end': 35,\n    'home': 36,\n    'left': 37,\n    'up': 38,\n    'right': 39,\n    'down': 40,\n    'insert': 45,\n    'delete': 46,\n    'numpad *': 106,\n    'numpad +': 107,\n    'numpad -': 109,\n    'numpad .': 110,\n    'numpad /': 111,\n    'num lock': 144,\n    'scroll lock': 145,\n    'my computer': 182,\n    'my calculator': 183,\n    ';': 186,\n    '=': 187,\n    ',': 188,\n    '-': 189,\n    '.': 190,\n    '/': 191,\n    '`': 192,\n    '[': 219,\n    '\\\\': 220,\n    ']': 221,\n    \"'\": 222,\n    'windows': 91,\n    'â§': 16,\n    'â¥': 18,\n    'â': 17,\n    'pause': 19,\n    'break': 19,\n    'caps': 20,\n    'return': 13,\n    'escape': 27,\n    'spc': 32,\n    'pgup': 33,\n    'pgdn': 34,\n    'ins': 45,\n    'del': 46,\n};\n\nexport const modifiers = {\n    'shift': 'shiftKey',\n    'ctrl': 'ctrlKey',\n    'alt': 'altKey',\n    'cmd': isMac ? 'metaKey' : 'ctrlKey',\n    'command': isMac ? 'metaKey' : 'ctrlKey',\n    'left command': 'metaKey',\n    'right command': 'MetaRight',\n    'â': isMac ? 'metaKey' : 'ctrlKey',\n    'option': 'altKey',\n    'ctl': 'ctrlKey',\n    'control': 'ctrlKey',\n};\n\nexport const symbols = {\n    'cmd': isMac ? 'â' : 'Ctrl',\n    'command': isMac ? 'â' : 'Ctrl',\n    'left command': isMac ? 'â' : 'Ctrl',\n    'right command': isMac ? 'â' : 'Ctrl',\n    'option': isMac ? 'â¥' : 'Alt',\n    'left': 'â',\n    'right': 'â',\n    'up': 'â',\n    'down': 'â',\n    'alt': isMac ? 'â¥' : 'Alt',\n    'ctrl': 'Ctrl',\n    'control': 'Ctrl',\n    'shift': 'â§'\n};\n","export function isFunction(x: any): x is Function {\n    return typeof x === \"function\";\n}\n\nexport const any = (fn: Function, list: any[]) => {\n    let idx = 0;\n    while (idx < list.length) {\n        if (fn(list[idx])) {\n            return true;\n        }\n        idx += 1;\n    }\n    return false;\n};\nexport const identity = x => x;\n\nexport const isNill = x => x == null;\n\nexport const difference = (first: any[], second: any[]) =>\n    first.filter(item => !second.includes(item));\n\nexport const allPass = preds => (...args) => {\n    let idx = 0;\n    const len = preds.length;\n    while (idx < len) {\n        if (!preds[idx].apply(this, args)) {\n            return false;\n        }\n        idx += 1;\n    }\n    return true;\n};\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { codes, modifiers } from \"./keys\";\nimport { fromEvent, Subscription, timer, Subject, throwError, Observable } from \"rxjs\";\nimport {\n    ShortcutEventOutput,\n    ParsedShortcut,\n    ShortcutInput\n} from \"./ng-keyboard-shortcuts.interfaces\";\nimport { map, filter, tap, debounce, catchError } from \"rxjs/operators\";\nimport { allPass, any, difference, identity, isFunction, isNill } from \"./utils\";\n\nconst $$ngOnDestroy = Symbol(\"OnDestroy\");\n\n@Injectable()\nexport class KeyboardShortcutsService implements OnDestroy {\n    /**\n     * Parsed shortcuts\n     * for each key create a predicate function\n     */\n    private _shortcuts: ParsedShortcut[] = [];\n\n    /**\n     * Throttle the keypress event.\n     */\n    private throttleTime = 0;\n\n    private _pressed = new Subject<ShortcutEventOutput>();\n\n    /**\n     * Streams of pressed events, can be used instead or with a command.\n     */\n    public pressed$ = this._pressed.asObservable();\n\n    /**\n     * Disable all keyboard shortcuts\n     */\n    private disabled = false;\n\n    private _ignored = [\"INPUT\", \"TEXTAREA\", \"SELECT\"];\n\n    /**\n     * Subscription for on destroy.\n     */\n    private readonly subscription: Subscription;\n\n    private isAllowed = (shortcut: ParsedShortcut) => {\n        const target = shortcut.event.target as HTMLElement;\n        if (target === shortcut.target) {\n            return true;\n        }\n        if (shortcut.allowIn.length) {\n            return !difference(this._ignored, shortcut.allowIn).includes(target.nodeName);\n        }\n        return !this._ignored.includes(target.nodeName);\n    };\n\n    private mapEvent = event =>\n        this._shortcuts\n            .map(shortcut =>\n                Object.assign({}, shortcut, {\n                    predicates: any(\n                        identity,\n                        shortcut.predicates.map((predicates: any) => allPass(predicates)(event))\n                    ),\n                    event: event\n                })\n            )\n            .filter(shortcut => shortcut.predicates)\n            .reduce((acc, shortcut) => (acc.priority > shortcut.priority ? acc : shortcut), {\n                priority: 0\n            } as ParsedShortcut);\n\n    private keydown$ = fromEvent(document, \"keydown\").pipe(\n        filter(_ => !this.disabled),\n        map(this.mapEvent),\n        filter(\n            (shortcut: ParsedShortcut) =>\n                !shortcut.target || shortcut.event.target === shortcut.target\n        ),\n        filter((shortcut: ParsedShortcut) => isFunction(shortcut.command)),\n        filter(this.isAllowed),\n        tap(shortcut => !shortcut.preventDefault || shortcut.event.preventDefault()),\n        debounce(shortcut => timer(shortcut.throttleTime)),\n        tap(shortcut => shortcut.command({ event: shortcut.event, key: shortcut.key })),\n        tap(shortcut => this._pressed.next({ event: shortcut.event, key: shortcut.key })),\n        catchError(error => throwError(error))\n    );\n\n    private get shortcuts() {\n        return this._shortcuts;\n    }\n\n    constructor() {\n        this.subscription = this.keydown$.subscribe();\n    }\n\n    /**\n     * Remove subscription.\n     */\n    ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    /**\n     * Enable all keyboard shortcuts\n     */\n    enable(): KeyboardShortcutsService {\n        this.disabled = false;\n        return this;\n    }\n\n    /**\n     * Disable all keyboard shortcuts\n     */\n    disable(): KeyboardShortcutsService {\n        this.disabled = true;\n        return this;\n    }\n\n    /**\n     * Check if all keyboard shortcuts are disabled.\n     */\n    isDisabled() {\n        return this.disabled;\n    }\n\n    /**\n     * Add new shortcut/s\n     */\n    public add(shortcuts: ShortcutInput[] | ShortcutInput, instance?: any): KeyboardShortcutsService {\n        shortcuts = Array.isArray(shortcuts) ? shortcuts : [shortcuts];\n        if (instance) {\n            const [key] = [...shortcuts.map(shortcut => shortcut.key)];\n            this.bindOnDestroy(instance, key);\n        }\n\n        this._shortcuts.push(...this.parseCommand(shortcuts));\n        return this;\n    }\n\n    /**\n     * bind to the component ngOnDestroy to remove related keys\n     * when component is destroyed.\n     * @param instance - component to remove keys when ngOnDestroy is called.\n     * @param keys\n     */\n    private bindOnDestroy(instance: any, keys: string | string[]): KeyboardShortcutsService {\n        if (instance.ngOnDestroy) {\n            instance[$$ngOnDestroy] = instance.ngOnDestroy;\n        }\n        const that = this;\n        instance.ngOnDestroy = function() {\n            const onDestroy = instance[$$ngOnDestroy];\n            if (onDestroy) {\n                onDestroy.apply(this);\n            }\n            that.remove(keys);\n        };\n        return this;\n    }\n\n    /**\n     * Remove a command based on key or array of keys.\n     * can be used for cleanup.\n     * @param key\n     * @returns\n     */\n    public remove(key: string | string[]): KeyboardShortcutsService {\n        const keys: string[] = Array.isArray(key) ? key : [key];\n        this._shortcuts = this._shortcuts.filter(shortcut => {\n            return !shortcut.key.find(sKey => {\n                return keys.filter(k => k === sKey).length > 0;\n            });\n        });\n        return this;\n    }\n\n    /**\n     * Returns an observable of keyboard shortcut filtered by a specific key.\n     * @param key - the key to filter the observable by.\n     */\n    public select(key: string): Observable<ShortcutEventOutput> {\n        return this.pressed$.pipe(\n            filter(({event, key: eventKeys}) => {\n                return !!eventKeys.find(eventKey => eventKey === key)\n            })\n        )\n    }\n\n    /**\n     * transforms a shortcut to:\n     * a predicate function\n     */\n    private getKeys = (command: string[]) =>\n        command\n            .map(key => key.trim())\n            .filter(key => key !== \"+\")\n            .map(key => {\n                // for modifiers like control key\n                // look for event['ctrlKey']\n                // otherwise use the keyCode\n                if (modifiers.hasOwnProperty(key)) {\n                    return event => !!event[modifiers[key]];\n                }\n                return event =>\n                    codes[key]\n                        ? event.keyCode === codes[key] || event.key === key\n                        : event.keyCode === key.toUpperCase().charCodeAt(0);\n            });\n\n    /**\n     * Parse each command using getKeys function\n     */\n    private parseCommand(command: ShortcutInput | ShortcutInput[]): ParsedShortcut[] {\n        const commands = Array.isArray(command) ? command : [command];\n        return commands.map(command => {\n            const keys = Array.isArray(command.key) ? command.key : [command.key];\n            const priority = Math.max(...keys.map(key => key.split(\" \").length));\n            const predicates = keys.map(key => this.getKeys(key.split(\" \")));\n            return {\n                ...command,\n                allowIn: command.allowIn || [],\n                key: keys,\n                throttle: isNill(command.throttleTime) ? this.throttleTime : command.throttleTime,\n                priority: priority,\n                predicates: predicates\n            } as ParsedShortcut;\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [],\n  exports: []\n})\nexport class KeyboardShortcutsModule { }\n"],"names":["tslib_1.__assign"],"mappings":";;;;;;;;;AAAA,qBAAM,KAAK,IAAI,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7D,AAAO,qBAAM,KAAK,GAAG;IACjB,WAAW,EAAE,CAAC;IACd,KAAK,EAAE,CAAC;IACR,OAAO,EAAE,EAAE;IACX,aAAa,EAAE,EAAE;IACjB,WAAW,EAAE,EAAE;IACf,KAAK,EAAE,EAAE;IACT,OAAO,EAAE,EAAE;IACX,SAAS,EAAE,EAAE;IACb,WAAW,EAAE,EAAE;IACf,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,EAAE;IACV,IAAI,EAAE,EAAE;IACR,OAAO,EAAE,EAAE;IACX,MAAM,EAAE,EAAE;IACV,QAAQ,EAAE,EAAE;IACZ,QAAQ,EAAE,EAAE;IACZ,UAAU,EAAE,GAAG;IACf,UAAU,EAAE,GAAG;IACf,UAAU,EAAE,GAAG;IACf,UAAU,EAAE,GAAG;IACf,UAAU,EAAE,GAAG;IACf,UAAU,EAAE,GAAG;IACf,aAAa,EAAE,GAAG;IAClB,aAAa,EAAE,GAAG;IAClB,eAAe,EAAE,GAAG;IACpB,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,IAAI,EAAE,GAAG;IACT,GAAG,EAAE,GAAG;IACR,GAAG,EAAE,GAAG;IACR,SAAS,EAAE,EAAE;IACb,GAAG,EAAE,EAAE;IACP,GAAG,EAAE,EAAE;IACP,GAAG,EAAE,EAAE;IACP,OAAO,EAAE,EAAE;IACX,OAAO,EAAE,EAAE;IACX,MAAM,EAAE,EAAE;IACV,QAAQ,EAAE,EAAE;IACZ,QAAQ,EAAE,EAAE;IACZ,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,EAAE;IACV,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,EAAE;CACZ,CAAC;AAEF,AAAO,qBAAM,SAAS,GAAG;IACrB,OAAO,EAAE,UAAU;IACnB,MAAM,EAAE,SAAS;IACjB,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,KAAK,GAAG,SAAS,GAAG,SAAS;IACpC,SAAS,EAAE,KAAK,GAAG,SAAS,GAAG,SAAS;IACxC,cAAc,EAAE,SAAS;IACzB,eAAe,EAAE,WAAW;IAC5B,GAAG,EAAE,KAAK,GAAG,SAAS,GAAG,SAAS;IAClC,QAAQ,EAAE,QAAQ;IAClB,KAAK,EAAE,SAAS;IAChB,SAAS,EAAE,SAAS;CACvB,CAAC;;ACnEF,iBAgCA;;;;;;;;;AAhCA,oBAA2B,CAAM;IAC7B,OAAO,OAAO,CAAC,KAAK,UAAU,CAAC;CAClC;AAED,AAAO,qBAAM,GAAG,GAAG,UAAC,EAAY,EAAE,IAAW;IACzC,qBAAI,GAAG,GAAG,CAAC,CAAC;IACZ,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE;QACtB,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;YACf,OAAO,IAAI,CAAC;SACf;QACD,GAAG,IAAI,CAAC,CAAC;KACZ;IACD,OAAO,KAAK,CAAC;CAChB,CAAC;AACF,AAAO,qBAAM,QAAQ,GAAG,UAAA,CAAC,IAAI,OAAA,CAAC,GAAA,CAAC;AAE/B,AAAO,qBAAM,MAAM,GAAG,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,IAAI,GAAA,CAAC;AAErC,AAAO,qBAAM,UAAU,GAAG,UAAC,KAAY,EAAE,MAAa;IAClD,OAAA,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAA,CAAC;CAAA,CAAC;AAEjD,AAAO,qBAAM,OAAO,GAAG,UAAA,KAAK,IAAI,OAAA;IAAC,cAAO;SAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;QAAP,yBAAO;;IACpC,qBAAI,GAAG,GAAG,CAAC,CAAC;IACZ,qBAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;IACzB,OAAO,GAAG,GAAG,GAAG,EAAE;QACd,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAI,EAAE,IAAI,CAAC,EAAE;YAC/B,OAAO,KAAK,CAAC;SAChB;QACD,GAAG,IAAI,CAAC,CAAC;KACZ;IACD,OAAO,IAAI,CAAC;CACf,GAAA,CAAC;;;;;;ACpBF,qBAAM,aAAa,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;;IAiFtC;QAAA,iBAEC;;;;;0BA3EsC,EAAE;;;;4BAKlB,CAAC;wBAEL,IAAI,OAAO,EAAuB;;;;wBAKnC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;;;;wBAK3B,KAAK;wBAEL,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC;yBAO9B,UAAC,QAAwB;YACzC,qBAAM,MAAM,qBAAG,QAAQ,CAAC,KAAK,CAAC,MAAqB,CAAA,CAAC;YACpD,IAAI,MAAM,KAAK,QAAQ,CAAC,MAAM,EAAE;gBAC5B,OAAO,IAAI,CAAC;aACf;YACD,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE;gBACzB,OAAO,CAAC,UAAU,CAAC,KAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACjF;YACD,OAAO,CAAC,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACnD;wBAEkB,UAAA,KAAK;YACpB,OAAA,KAAI,CAAC,UAAU;iBACV,GAAG,CAAC,UAAA,QAAQ;gBACT,OAAA,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE;oBACxB,UAAU,EAAE,GAAG,CACX,QAAQ,EACR,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,UAAe,IAAK,OAAA,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,GAAA,CAAC,CAC3E;oBACD,KAAK,EAAE,KAAK;iBACf,CAAC;aAAA,CACL;iBACA,MAAM,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,UAAU,GAAA,CAAC;iBACvC,MAAM,CAAC,UAAC,GAAG,EAAE,QAAQ,IAAK,QAAC,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,IAAC,oBAAE;gBAC5E,QAAQ,EAAE,CAAC;aACI,EAAC;SAAA;wBAET,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,IAAI,CAClD,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAI,CAAC,QAAQ,GAAA,CAAC,EAC3B,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAClB,MAAM,CACF,UAAC,QAAwB;YACrB,OAAA,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM;SAAA,CACpE,EACD,MAAM,CAAC,UAAC,QAAwB,IAAK,OAAA,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAA,CAAC,EAClE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EACtB,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,CAAC,QAAQ,CAAC,cAAc,IAAI,QAAQ,CAAC,KAAK,CAAC,cAAc,EAAE,GAAA,CAAC,EAC5E,QAAQ,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAA,CAAC,EAClD,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAA,CAAC,EAC/E,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAA,CAAC,EACjF,UAAU,CAAC,UAAA,KAAK,IAAI,OAAA,UAAU,CAAC,KAAK,CAAC,GAAA,CAAC,CACzC;;;;;uBA6GiB,UAAC,OAAiB;YAChC,OAAA,OAAO;iBACF,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,GAAA,CAAC;iBACtB,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,KAAK,GAAG,GAAA,CAAC;iBAC1B,GAAG,CAAC,UAAA,GAAG;;;;gBAIJ,IAAI,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;oBAC/B,OAAO,UAAA,KAAK,IAAI,OAAA,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAA,CAAC;iBAC3C;gBACD,OAAO,UAAA,KAAK;oBACR,OAAA,KAAK,CAAC,GAAG,CAAC;0BACJ,KAAK,CAAC,OAAO,KAAK,KAAK,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG;0BACjD,KAAK,CAAC,OAAO,KAAK,GAAG,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;iBAAA,CAAC;aAC/D,CAAC;SAAA;QArHN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;KACjD;0BANW,+CAAS;;;;;YACjB,OAAO,IAAI,CAAC,UAAU,CAAC;;;;;;;;;;;;IAU3B,8CAAW;;;;IAAX;QACI,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACnC;KACJ;;;;;;;;IAKD,yCAAM;;;;IAAN;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,OAAO,IAAI,CAAC;KACf;;;;;;;;IAKD,0CAAO;;;;IAAP;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,OAAO,IAAI,CAAC;KACf;;;;;;;;IAKD,6CAAU;;;;IAAV;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;;;;IAKM,sCAAG;;;;;;cAAC,SAA0C,EAAE,QAAc;QACjE,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,CAAC,SAAS,CAAC,CAAC;QAC/D,IAAI,QAAQ,EAAE;YACV,2FAAO,WAAG,CAAiD;YAC3D,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;SACrC;QAED,CAAA,KAAA,IAAI,CAAC,UAAU,EAAC,IAAI,oBAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAE;QACtD,OAAO,IAAI,CAAC;;;;;;;;;;IASR,gDAAa;;;;;;;cAAC,QAAa,EAAE,IAAuB;QACxD,IAAI,QAAQ,CAAC,WAAW,EAAE;YACtB,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC;SAClD;QACD,qBAAM,IAAI,GAAG,IAAI,CAAC;QAClB,QAAQ,CAAC,WAAW,GAAG;YACnB,qBAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC1C,IAAI,SAAS,EAAE;gBACX,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACzB;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACrB,CAAC;QACF,OAAO,IAAI,CAAC;;;;;;;;IAST,yCAAM;;;;;;cAAC,GAAsB;QAChC,qBAAM,IAAI,GAAa,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAA,QAAQ;YAC7C,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,UAAA,IAAI;gBAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,IAAI,GAAA,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;aAClD,CAAC,CAAC;SACN,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;;;;;;;IAOT,yCAAM;;;;;cAAC,GAAW;QACrB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CACrB,MAAM,CAAC,UAAC,EAAuB;gBAAtB,gBAAK,EAAE,kBAAc;YAC1B,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,KAAK,GAAG,GAAA,CAAC,CAAA;SACxD,CAAC,CACL,CAAA;;;;;;;IA2BG,+CAAY;;;;;cAAC,OAAwC;;QACzD,qBAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC;QAC9D,OAAO,QAAQ,CAAC,GAAG,CAAC,UAAA,OAAO;YACvB,qBAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACtE,qBAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,WAAQ,IAAI,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,GAAA,CAAC,EAAC,CAAC;YACrE,qBAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAA,CAAC,CAAC;YACjE,yBAAOA,aACA,OAAO,IACV,OAAO,EAAE,OAAO,CAAC,OAAO,IAAI,EAAE,EAC9B,GAAG,EAAE,IAAI,EACT,QAAQ,EAAE,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,KAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,EACjF,QAAQ,EAAE,QAAQ,EAClB,UAAU,EAAE,UAAU,GACP,EAAC;SACvB,CAAC,CAAC;;;gBAxNV,UAAU;;;;mCAbX;;;;;;;ACAA;;;;gBAEC,QAAQ,SAAC;oBACR,OAAO,EAAE,EACR;oBACD,YAAY,EAAE,EAAE;oBAChB,OAAO,EAAE,EAAE;iBACZ;;kCAPD;;;;;;;;;;;;;;;"}
