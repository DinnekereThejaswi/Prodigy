(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{"+SIy":function(t,e,n){"use strict";n.r(e),e.default='<div class="row" style="display:block;margin: auto;width: 30%;">\n  <form [formGroup]="CashInHandForm" class="form-horizontal">\n    <div class="col-md-12">\n      <div class="card">\n        <div class="card-body">\n          <div class="row">\n            <div class="col-md-12">\n              <div class="form-group">\n                <label for="OrderNo">Date</label>\n                <input type="text" class="form-control" [(ngModel)]="applicationDate"\n                  [ngModelOptions]="{standalone: true}" readonly />\n              </div>\n              <div class="form-group">\n                <label for="OrderNo">Cash Balance</label>\n                <input type="number" class="form-control" [(ngModel)]="CashInHandModel.CashBalance"\n                  formControlName="CashBalance" readonly />\n              </div>\n              <div class="form-group">\n                <label for="OrderNo">Cash In Hand</label>\n                <input type="text" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, \'\').replace(/(\\..*)\\./g, \'$1\');" onKeyPress="if(this.value.length==15) return false;" [(ngModel)]="CashInHandModel.CashInHand"\n                  formControlName="CashInHand" (change)="CalDifference()" />\n              </div>\n              <div class="form-group">\n                <label for="OrderNo">Cash Difference</label>\n                <input type="number" class="form-control" [(ngModel)]="cashDifference"\n                  [ngModelOptions]="{standalone: true}" readonly />\n              </div>\n              <div class="form-group">\n                <button class="printMe btn btn-success waves-effect waves-light btn-rounded btn-secondary"\n                  (click)="Save()"><i class="fal fa-save"></i>\n                  Save </button>\n                <button class="printMe btn btn-danger waves-effect waves-light btn-rounded btn-secondary"\n                  (click)="exit()"><i class="fal fa-remove"></i>\n                  Exit </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n\x3c!-- <pre>\n  {{CashInHandModel | json}}\n</pre> --\x3e'},"4Egk":function(t,e,n){"use strict";n.r(e),e.default='<div id="accordian" class="accordion">\n  <div class="card mb-0">\n    <div id="header" class="card-body show">\n      <form class="form-horizontal">\n        <div class="row">\n          <div class="col-lg-12">\n            <div class="form-body">\n              <div class="row">\n                <div class="col-md-6">\n                  <label *ngFor="let radiobutton of radioItems" class="form-check-inline">\n                    <input type="radio" name="optionDefault" (click)="OnRadioBtnChnge(radiobutton)"\n                      class="form-check-input" [value]="radiobutton" [checked]="radiobutton === model.option">\n                    <h3 style="margin-top: 5px;">{{radiobutton}}</h3>\n                  </label>\n                </div>\n                <ng-container *ngIf="model.option === \'Voucher\'">\n                  <div class="col-md-6" style="float: right;">\n                    <label *ngFor="let voucherItems of VoucherItems" class="form-check-inline">\n                      <input type="radio" name="optionVoucher" (click)="OnVoucherRadioBtnChnge(voucherItems)"\n                        class="form-check-input" [value]="voucherItems"\n                        [checked]="voucherItems === modelvoucher.option">\n                      <h3 style="margin-top: 5px;">{{voucherItems}}</h3>\n                    </label>\n                  </div>\n                </ng-container>\n              </div>\n              <ng-container *ngIf="model.option === \'Voucher\'">\n                <div class="row">\n                  <div class="col-md-6">\n                    <div class="form-group">\n                      <label for="">Type</label>\n                      <select class="form-control mr-auto mt-2 mt-lg-0" name="TransType" (change)="GetTransType(TransType.value)" #TransType>\n                        <option [ngValue]="null">Select</option>\n                        <option *ngFor="let _paymentType of PaymentType" [value]="_paymentType.Code">\n                          {{_paymentType.Name}}\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                  <ng-container *ngIf="modelvoucher.option === \'Cash\'">\n                    <div class="col-md-6">\n                      <div class="form-group">\n                        <label for="">Cash</label>\n                        <select class="form-control mr-auto mt-2 mt-lg-0" name="CashType" (change)="GetCashType(CashType.value)" #CashType>\n                          <option [ngValue]="null">Select</option>\n                          <option *ngFor="let _cashTypeList of CashTypeList" [value]="_cashTypeList.Code">\n                            {{_cashTypeList.Name}}\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  </ng-container>\n                </div>\n              </ng-container>\n\n              <div class="row">\n                <div class="col-md-6">\n                  <div class="form-group">\n                    <label class="control-label">Voucher No</label>\n                    <div class="m-b-10">\n                      <input type="text" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, \'\').replace(/(\\..*)\\./g, \'$1\');" onKeyPress="if(this.value.length==7) return false;" (keyup.enter)="getVoucherDets(voucherNo.value)"\n                        #voucherNo>\n                    </div>\n                  </div>\n                </div>\n                <ng-container *ngIf="modelvoucher.option === \'Bank\'">\n                  <div class="col-md-6">\n                    <div class="form-group">\n                      <label for="">Bank</label>\n                      <select class="form-control mr-auto mt-2 mt-lg-0" name="BankType" (change)="GetBankType(BankType.value)" #BankType>\n                        <option [ngValue]="null">Select</option>\n                        <option *ngFor="let _masterLedgerList of MasterLedgerList" [value]="_masterLedgerList.Code">\n                          {{_masterLedgerList.Name}}\n                        </option>\n                      </select>\n                    </div>\n                  </div>\n                </ng-container>\n              </div>\n            </div>\n          </div>\n        </div>\n        \x3c!-- <pre>{{ SRHeaderForm | json }}</pre> --\x3e\n      </form>\n    </div>\n  </div>\n</div>\n<br>\n\x3c!--Journal--\x3e\n<ng-container *ngIf="model.option === \'Journal\' || (model.option === \'Voucher\' && modelvoucher.option === \'Bank\')">\n  <div class="card mb-0">\n    <div class="card-body">\n      <div class="table-responsive">\n        <table class="table table-bordered">\n          <thead class="topbar">\n            <tr>\n              <th>S.No</th>\n              <th>Account Name</th>\n              <th>Debit</th>\n              <th>Credit</th>\n              <th>Narration</th>\n            </tr>\n          </thead>\n          <tbody *ngFor="let _dataList of DataList;let i=index;">\n            <tr>\n              <td>{{i+1}}</td>\n              <td>{{_dataList.Partyname}}</td>\n              <td>{{_dataList.DebitAmount | number : \'1.2-2\'}}</td>\n              <td>{{_dataList.CreditAmount | number : \'1.2-2\'}}</td>\n              <td>{{_dataList.Narration}}</td>\n            </tr>\n            <tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf="model.option === \'Contra\' || (model.option === \'Voucher\' && modelvoucher.option === \'Cash\')">\n  <div class="card mb-0">\n    <div class="card-body">\n      <div class="table-responsive">\n        <table class="table table-bordered">\n          <thead class="topbar">\n            <tr>\n              <th>S.No</th>\n              <th>Account Name</th>\n              <th>Debit</th>\n              <th>Credit</th>\n              <th>Narration</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>1</td>\n              <td>{{DataList.Partyname}}</td>\n              <td>{{DataList.DebitAmount | number : \'1.2-2\'}}</td>\n              <td>{{DataList.CreditAmount | number : \'1.2-2\'}}</td>\n              <td>{{DataList.Narration}}</td>\n            </tr>\n            <tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<br>\n<div class="card mb-0">\n  <div class="card-body">\n    <div class="table-responsive">\n      <table class="table table-bordered">\n        <thead class="topbar">\n          <tr>\n            <th>Remarks</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <input type="text" class="form-control" #cancelRemarks>\n            </td>\n            <td>\n              <button class="btn btn-outline-danger waves-effect waves-light btn-rounded btn-outline-secondary"\n                (click)="cancel(cancelRemarks.value)">Cancel</button>\n              <button\n                class="btn btn-outline-danger waves-effect waves-light btn-rounded btn-outline-secondary ">Exit</button>\n            </td>\n          </tr>\n          <tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n  \x3c!-- <pre>{{DataList | json}}</pre> --\x3e'},"7CJy":function(t,e,n){"use strict";n.r(e),e.default='.card-title {\r\n    margin-bottom: -0.3rem !important;\r\n}\r\n\r\n.table-responsive {\r\n    display: block;\r\n    width: 99.9% !important;\r\n    overflow-x: auto;\r\n    -ms-overflow-style: -ms-autohiding-scrollbar;\r\n}\r\n\r\n.card-header{\r\n    border-radius: 15px !important;\r\n  }\r\n\r\n.card{\r\n    border-radius: 15px !important;\r\n  \r\n  }\r\n\r\n.card-body{ \r\n    padding: 10px 30px 0px 30px !important; \r\n    border-bottom: 2px solid black;\r\n    border-radius: 15px;\r\n  }\r\n\r\n.p-38 { height: 38px; }\r\n\r\n.text-white { color: white;}\r\n\r\n.Pointer { cursor: pointer; }\r\n\r\n.footer {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n.hide{\r\n   display: hide;\r\n  }\r\n\r\n.show{\r\n    display: block;\r\n  }\r\n\r\n.accordion .card-header.collapsed:after {\r\n    /* symbol for "collapsed" panels */\r\n    content: "\\f067"; \r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    transition: .3s transform ease-in-out;\r\n  }\r\n\r\n.accordion .card-header:after {\r\n    font-family: \'FontAwesome\';  \r\n    content: "\\f068";\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    margin-top: -25px;\r\n  }\r\n\r\n.text-red{\r\n    color:red;\r\n  }\r\n\r\n.text-green{\r\n  color:#16d616; \r\n  }\r\n  \r\n  \r\n  '},"9G4G":function(t,e,n){"use strict";n.r(e),e.default='.card-title {\r\n    margin-bottom: -0.3rem !important;\r\n}\r\n\r\n.table-responsive {\r\n    display: block;\r\n    width: 99.9% !important;\r\n    overflow-x: auto;\r\n    -ms-overflow-style: -ms-autohiding-scrollbar;\r\n}\r\n\r\n.card-header{\r\n    border-radius: 15px !important;\r\n  }\r\n\r\n.card{\r\n    border-radius: 15px !important;  \r\n  }\r\n\r\n.card-body{ \r\n    padding: 10px 30px 0px 30px !important; \r\n    border-bottom: 2px solid black;\r\n    border-radius: 15px;\r\n  }\r\n\r\n.p-38 { height: 38px; }\r\n\r\n.text-white { color: white;}\r\n\r\n.Pointer { cursor: pointer; }\r\n\r\n.footer {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n.hide{\r\n   display: hide;\r\n  }\r\n\r\n.show{\r\n    display: block;\r\n  }\r\n\r\n.accordion .card-header.collapsed:after {\r\n    /* symbol for "collapsed" panels */\r\n    content: "\\f067"; \r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    transition: .3s transform ease-in-out;\r\n  }\r\n\r\n.accordion .card-header:after {\r\n    font-family: \'FontAwesome\';  \r\n    content: "\\f068";\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    margin-top: -25px;\r\n  }\r\n\r\n.text-red{\r\n    color:red;\r\n  }\r\n\r\n.text-green{\r\n  color:#16d616; \r\n  }'},"9rGd":function(t,e,n){"use strict";n.r(e),e.default='<div class="card mb-0">\r\n    <div class="card-body">\r\n        \x3c!-- <div class="card-body"> --\x3e\r\n        <form class="form-horizontal">\r\n            <div class="row">\r\n                <div class="col-md-3 ">\r\n                    <div class="form-group">\r\n                        <div>\r\n                            <i class="fal fa-calendar-alt"></i>&nbsp; <span class="text-muted">\r\n                                Voucher Date</span>\r\n                            \x3c!-- <h2 class="font-light">{{voucherDate | date: \'yyyy-MM-dd\'}}</h2> --\x3e\r\n                            <h2 class="font-light">{{voucherDate | date:\'dd/MM/yyyy\'}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-md-3">\r\n                    <div class="form-group">\r\n                        <label for="NewVoucherNo">Voucher No.</label>\r\n                        <input type="number" class="form-control" name="NewVoucherNo"\r\n                            [(ngModel)]="BankVoucherEntryHeader.NewVoucherNo" readonly>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-3">\r\n                    <div class="form-group">\r\n                        <label for="">Master Ledger</label>\r\n                        <select class="form-control mr-auto mt-2 mt-lg-0" (change)="getChequeNumber()"\r\n                            name="AccountCodeMaster" [(ngModel)]="BankVoucherEntryHeader.AccountCodeMaster">\r\n                            <option [ngValue]="null">Select</option>\r\n                            <option *ngFor="let _masterLedgerList of MasterLedgerList" [value]="_masterLedgerList.Code">\r\n                                {{_masterLedgerList.Name}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-3 ">\r\n                    <div class="form-group">\r\n                        <label for="">Type</label>\r\n                        <select class="form-control mr-auto mt-2 mt-lg-0" name="TransType"\r\n                            [(ngModel)]="BankVoucherEntryHeader.TransType"\r\n                            (change)="chngType(BankVoucherEntryHeader.TransType)">\r\n                            <option [ngValue]="null">Select</option>\r\n                            <option *ngFor="let _paymentType of PaymentType" [value]="_paymentType.Code">\r\n                                {{_paymentType.Name}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class="row">\r\n            <div class="col-md-12">\r\n            <div class="table-responsive">\r\n                <table class="table table-bordered">\r\n                    <thead class="topbar">\r\n                        <tr>\r\n                            <th>Account Name</th>\r\n                            <th>Debit</th>\r\n                            <th>Credit</th>\r\n                            <th>Cheque No</th>\r\n                            <th>Cheque Date</th>\r\n                            <th>Ref No</th>\r\n                            <th>Narration</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <select class="form-control" [(ngModel)]="BankVoucherEntryHeader.AccountCode" (change)="getAccName($event.target.value)">\r\n                                    <option [ngValue]="0">Select</option>\r\n                                    <option *ngFor="let name of ApplicationNameList" [value]="name.acc_code">\r\n                                        {{name.acc_name}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <input type="number" class="form-control"\r\n                                    [(ngModel)]="BankVoucherEntryHeader.DebitAmount" [readonly]="EnableDebit">\r\n                            </td>\r\n                            <td>\r\n                                <input type="number" class="form-control"\r\n                                    [(ngModel)]="BankVoucherEntryHeader.CreditAmount" [readonly]="EnableCredit">\r\n                            </td>\r\n                            <td>\r\n                                <ng-container *ngIf="EnableCredit">\r\n                                <ng-select [items]="ChequeNo" bindLabel="chq_no" [virtualScroll]="true"\r\n                                    bindValue="chq_no" appendTo="body" placeholder="Select Cheque No"\r\n                                    [(ngModel)]="BankVoucherEntryHeader.ChequeNo">\r\n                                </ng-select>\r\n                                </ng-container>\r\n                                <ng-container *ngIf="!EnableCredit">\r\n                                    <input type="number" pattern="/^-?\\d+\\.?\\d*$/" onKeyPress="if(this.value.length==6) return false;" class="form-control"\r\n                                    [(ngModel)]="BankVoucherEntryHeader.ChequeNo">\r\n                                </ng-container>\r\n                            </td>\r\n                            <td>\r\n                                <input type="text" bsDatepicker class="form-control" [bsConfig]="datePickerConfig"\r\n                                    placeholder="Select Date" [(ngModel)]="BankVoucherEntryHeader.ChequeDate">\r\n\r\n                            </td>\r\n                            <td>\r\n                                <input type="number" class="form-control"\r\n                                    [(ngModel)]="BankVoucherEntryHeader.ReceiptNo">\r\n                            </td>\r\n                            <td>\r\n\r\n                                \x3c!-- <ng-select [items]="NarrationList" bindLabel="Narration" [virtualScroll]="true"\r\n                                bindValue="chq_no" appendTo="body" placeholder="Select Narration"\r\n                                [(ngModel)]="BankVoucherEntryHeader.Narration">\r\n                                </ng-select> --\x3e\r\n\x3c!-- \r\n\r\n                                <select class="form-control" [(ngModel)]="BankVoucherEntryHeader.Narration">\r\n                                    <option [ngValue]="null">Select</option>\r\n                                    <option *ngFor="let list of NarrationList" [value]="list.Narration">\r\n                                        {{list.Narration}}</option>\r\n                                </select> --\x3e\r\n\r\n                                <input list="narrationList" class="form-control" name="narration" [(ngModel)]="BankVoucherEntryHeader.Narration"/>\r\n                                <datalist id="narrationList">\r\n                                  <option [ngValue]="null">Select</option>\r\n                                  <option *ngFor="let list of NarrationList" [value]="list.Narration">\r\n                                    {{list.Narration}}</option>\r\n                                </datalist>\r\n\r\n\r\n                            </td>\r\n                            <td>\r\n                                <ng-container *ngIf="EnableAdd">\r\n                                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\r\n                                        style="margin-top: 0.2rem !important;" (click)="add()">\r\n                                        <i class="far fa-plus-circle" style="padding-right:10px"></i>Add</button>\r\n                                </ng-container>\r\n                                <ng-container *ngIf="EnableSave">\r\n                                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\r\n                                        style="margin-top: 0.2rem !important;" (click)="save()">\r\n                                        <i class="fal fa-save" style="padding-right:10px"></i>Save</button>\r\n                                </ng-container>\r\n                            </td>\r\n                            <td>\r\n                                <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\r\n                                    style="margin-top: 0.2rem !important;" (click)="clear()">\r\n                                    <i class="fal fa-window-close" style="padding-right:10px"></i>Clear</button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<br>\r\n<br>\r\n<ng-container *ngIf="BankVoucherList.length>0">\r\n    <div class="card mb-0">\r\n        <div class="card-body">\r\n            <div class="row">\r\n                <div class="table-responsive">\r\n                    <table class="table table-bordered">\r\n                        <thead class="topbar">\r\n                            <tr>\r\n                                <th>Action</th>\r\n                                <th>SNo</th>\r\n                                <th>Voucher No</th>\r\n                                <th>Account Name</th>\r\n                                <th>Debit</th>\r\n                                <th>Credit</th>\r\n                                <th>Cheque No</th>\r\n                                <th>Naration</th>\r\n                                <th>Ref.No</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngFor="let _bankVoucherList of BankVoucherList;let i=index">\r\n                            <tr>\r\n                                <td><i class="fas fa-edit" title="edit" (click)="EditRow(_bankVoucherList)"\r\n                                        style="padding-right:10px"></i>\r\n                                    \x3c!-- <i class="fas fa-trash" title="delete" (click)="DeleteRow(_bankVoucherList)"></i> --\x3e\r\n                                    <i class="fal fa-print" (click)="onPrint(_bankVoucherList)"></i>\r\n                                </td>\r\n                                <td>{{i+1}}</td>\r\n                                <td>{{_bankVoucherList.VoucherNo}}</td>\r\n                                <td>{{_bankVoucherList.AccName}}</td>\r\n                                <td>{{_bankVoucherList.Debit}}</td>\r\n                                <td>{{_bankVoucherList.Credit}}</td>\r\n                                <td>{{_bankVoucherList.ChequeNo}}</td>\r\n                                <td>{{_bankVoucherList.Narration}}</td>\r\n                                <td>{{_bankVoucherList.RefNo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n<br>\r\n<br>\r\n<ng-container *ngIf="BankVoucherFinalJsonList.length>0">\r\n    <div class="card mb-0">\r\n        <div class="card-body">\r\n            <div class="row">\r\n                <div class="table-responsive">\r\n                    <table class="table table-bordered">\r\n                        <thead class="topbar">\r\n                            <tr>\r\n                                <th>Action</th>\r\n                                <th>SNo</th>\r\n                                <th>Account Name</th>\r\n                                <th>Debit</th>\r\n                                <th>Credit</th>\r\n                                <th>Cheque No</th>\r\n                                <th>Ref.No</th>\r\n                                <th>Naration</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngFor="let _bankVoucherFinalJsonList of BankVoucherFinalJsonList;let i=index">\r\n                            <tr>\r\n                                <td><i class="fas fa-edit" title="edit" (click)="EditTempRow(_bankVoucherFinalJsonList,i)"\r\n                                        style="padding-right:10px"></i>\r\n                                    <i class="fas fa-trash" title="delete" (click)="DeleteTempRow(_bankVoucherFinalJsonList,i)"></i>\r\n                                </td>\r\n                                <td>{{i+1}}</td>\r\n                                <td>{{_bankVoucherFinalJsonList.Partyname}}</td>\r\n                                <td>{{_bankVoucherFinalJsonList.DebitAmount}}</td>\r\n                                <td>{{_bankVoucherFinalJsonList.CreditAmount}}</td>\r\n                                <td>{{_bankVoucherFinalJsonList.ChequeNo}}</td>\r\n                                <td>{{_bankVoucherFinalJsonList.ReceiptNo}}</td>\r\n                                <td>{{_bankVoucherFinalJsonList.Narration}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\r\n                                        style="margin-top: 0.2rem !important;" (click)="Submit()">\r\n                                        <i class="fal fa-save" style="padding-right:10px"></i>Submit</button>\r\n</ng-container>\r\n\x3c!-- </div> --\x3e\r\n\x3c!-- </div> --\x3e\r\n\r\n<div class="modal fade" id="ReprintBankVoucherModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"\r\n    aria-hidden="true">\r\n    <div class="modal-dialog modal-lg" role="document" style="max-width: 1400px">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button"\r\n                    class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary"\r\n                    id="exampleModalLabel" (click)=print()><i class="fal fa-print"></i> Print</button>\r\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="print">\r\n                <span>\r\n                    <div id="DisplayData" [innerHTML]=\'PrintDetails\'></div>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\x3c!-- <pre>{{BankVoucherEntryHeader | json}}</pre>\r\n<pre>{{BankVoucherFinalJsonList | json}}</pre> --\x3e\r\n'},Chaw:function(t,e,n){"use strict";n.r(e),e.default='.card-title {\r\n    margin-bottom: -0.3rem !important;\r\n}\r\n\r\n.table-responsive {\r\n    display: block;\r\n    width: 99.9% !important;\r\n    overflow-x: auto;\r\n    -ms-overflow-style: -ms-autohiding-scrollbar;\r\n}\r\n\r\n.card-header{\r\n    border-radius: 15px !important;\r\n  }\r\n\r\n.card{\r\n    border-radius: 15px !important;  \r\n  }\r\n\r\n.card-body{ \r\n    padding: 10px 30px 0px 30px !important; \r\n    border-bottom: 2px solid black;\r\n    border-radius: 15px;\r\n  }\r\n\r\n.p-38 { height: 38px; }\r\n\r\n.text-white { color: white;}\r\n\r\n.Pointer { cursor: pointer; }\r\n\r\n.footer {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n.hide{\r\n   display: hide;\r\n  }\r\n\r\n.show{\r\n    display: block;\r\n  }\r\n\r\n.accordion .card-header.collapsed:after {\r\n    /* symbol for "collapsed" panels */\r\n    content: "\\f067"; \r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    transition: .3s transform ease-in-out;\r\n  }\r\n\r\n.accordion .card-header:after {\r\n    font-family: \'FontAwesome\';  \r\n    content: "\\f068";\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    margin-top: -25px;\r\n  }\r\n\r\n.text-red{\r\n    color:red;\r\n  }\r\n\r\n.text-green{\r\n  color:#16d616; \r\n  }'},DGF2:function(t,e,n){"use strict";n.r(e),e.default='<div id="accordian" class="accordion">\n  <div class="card mb-0">\n    <div id="header" class="card-body show">\n      <form class="form-horizontal">\n        <div class="row">\n          <div class="col-lg-12">\n            <div class="form-body">\n              <div class="row">\n                <div class="col-md-2">\n                  <div class="form-group">\n                    <label class="control-label">Bank</label>\n                    <div class="m-b-10">\n                      <select class="form-control mr-auto mt-2 mt-lg-0" (change)="getChqList(BankName.value)" #BankName>\n                        <option [ngValue]="null">SELECT</option>\n                        <option *ngFor="let _masterLedgerList of MasterLedgerList" [value]="_masterLedgerList.Code">\n                          {{_masterLedgerList.Name}}          \n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <div class="col-md-3">\n                  \n                </div>\n                <div class="col-md-6">\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \x3c!-- <pre>{{ SRHeaderForm | json }}</pre> --\x3e\n      </form>\n    </div>\n  </div>\n</div>\n<br>\n<div class="card mb-0">\n  <div class="card-body">\n    <div class="table-responsive">\n      <table class="table table-bordered">\n        <thead class="topbar">\n          <tr>\n            <th>Cheque</th>\n            <th>Remarks</th>\n            <th>Status</th>\n            <th>Open</th>\n            <th>Close</th>\n          </tr>\n        </thead>\n        <tbody *ngFor="let _chequeList of ChequeList">\n          <tr>\n            <td>{{_chequeList.ChequeNo}}</td>\n            <td>{{_chequeList.ClosedRemarks}}</td>\n            <td>{{_chequeList.ChqStatus}}</td>\n            <td><button class="btn btn-default btn-rounded" type="button" (click)="open(_chequeList)"><i\n                  class="far fa-lock-open"></i>\n                Open</button></td>\n            <td>\n              <button class="btn btn-default btn-rounded" type="button" (click)="close(_chequeList)"><i\n                  class="far fa-window-close"></i>\n                Close</button>\n            </td>\n          </tr>\n          <tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n<div class="modal overlay" id="ChqClosing" role="dialog" data-backdrop="static" data-keyboard="false">\n\n  <div class="modal-dialog modal-lg">\n    <div class="modal-content ">\n\n      \x3c!-- Modal Header --\x3e\n      <div class="modal-header">\n        <h4 class="modal-title">Cheque Closing Remarks</h4>\n        <button type="button" class="close" data-dismiss="modal">&times;</button>\n      </div>\n\n      \x3c!-- Modal body --\x3e\n      <div class="modal-body">\n          \x3c!-- <form [formGroup]="ModelForm"> --\x3e\n        <table class="table">\n          <tbody>\n            <tr>\n              <td class="float-rt">Remarks</td>\n              <td>\n                <input type="text" class="form-control" #Remarks>\n              </td>\n            </tr>          \n          </tbody>\n        </table>\n        \x3c!-- </form> --\x3e\n      </div>\n      \x3c!-- Modal footer --\x3e\n      <div class="modal-footer">\n        <div class="input-group">\n          <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" type="button" (click)="SaveRemaks(Remarks.value)"><i\n              class="fal fa-save"></i> Save</button>             \n          <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" type="button" (click)="Cancel()"\n            ><i class="far fa-window-close"></i>\n            Cancel</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>'},"E+DD":function(t,e,n){"use strict";n.r(e),e.default='<div id="accordian" class="accordion">\n  <div class="card mb-0">\n    <div id="header" class="card-body show">\n      <form class="form-horizontal">\n        <div class="row">\n          <div class="col-lg-12">\n            <div class="form-body">\n              <div class="row">\n                <div class="col-md-2">\n                  <div class="form-group">\n                    <label class="control-label">Search Ledger</label>\n                    <div class="m-b-10">\n                   \n                      <input class="form-control" type="text" name="search" [(ngModel)]="searchText" autocomplete="off">\n\n                    </div>\n                  </div>\n                </div>\n                <div class="col-md-3">\n                  \x3c!-- <div class="form-group" style="display: inline-block;padding-top: 1.5rem;">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary" type="submit"\n                      ><i class="fal fa-search"></i> Search</button>\n                  </div> --\x3e\n                </div>\n                <div class="col-md-6">\n                  \x3c!-- <div class="form-group float-right" style="display: inline-block;padding-top: 1.5rem;">\n                    <button class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary "\n                      (click)="submitPost(SRHeaderForm)">ADD</button>\n                  </div> --\x3e\n                  <div class="form-group float-right" style="display: inline-block;padding-top: 1.5rem;">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary" (click)="getHtmlPrint()" type="submit"\n                      ><i class="fal fa-search"></i> Print</button>\n                  </div>\n                  <div class="form-group float-right" style="display: inline-block;padding-top: 1.5rem;">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary" type="submit"\n                      (click)="Add()"><i class="fal fa-add"></i> Add</button>\n                  </div>                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \x3c!-- <pre>{{ SRHeaderForm | json }}</pre> --\x3e\n      </form>\n    </div>\n  </div>\n</div>\n<br>\n<div class="card mb-0">\n  <div class="card-body">\n    <div class="table-responsive">\n      <table class="table table-bordered">\n        <thead class="topbar">\n          <tr>\n            <th>AccCode</th>\n            <th>Account Name</th>\n            <th>Type</th>\n            <th>Sub-Group</th>\n            <th>Opn Bal.</th>\n            <th>B.Type</th>\n            <th>Cls Bal.</th>\n            <th>Cls Bal.</th>\n            <th>Budget</th>\n            <th>Status</th>\n            <th>Edit</th>\n            <th>Open</th>\n            <th>Close</th>\n          </tr>\n        </thead>\n        <tbody *ngFor="let _ledgerList of LedgerList | filter:searchText">\n          <tr>\n            <td>{{_ledgerList.AccountCode}}</td>\n            <td>{{_ledgerList.AccountName}}</td>\n            <td>{{_ledgerList.Type}}</td>\n            <td>{{_ledgerList.GroupName}}</td>\n            <td>{{_ledgerList.Opening}}</td>\n            <td>{{_ledgerList.BalanceType}}</td>\n            <td>{{_ledgerList.closingBalance}}</td>\n            <td>{{_ledgerList.ClosingType}}</td>\n            <td>{{_ledgerList.BudgAmt}}</td>\n            <td>{{_ledgerList.obj_status}}</td>\n            <td>\n              <i class="fas fa-edit" title="edit" (click)="editField(_ledgerList.AccountCode)"></i>\n            </td>\n            <td>\n              <i class="fas fa-lock-open" title="open" (click)="openField(_ledgerList)"></i>              \n            <td>\n              <i class="fas fa-lock" title="close" (click)="closeField(_ledgerList)"></i>              \n            </td>\n          </tr>\n          <tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n<div class="modal overlay" id="Ledger" role="dialog" data-backdrop="static" data-keyboard="false">\n\n  <div class="modal-dialog modal-lg" style="max-width: 2000px">\n    <div class="modal-content ">\n\n      \x3c!-- Modal Header --\x3e\n      <div class="modal-header">\n        <h4 class="modal-title">Ledger Entry</h4>\n        <button type="button" class="close" data-dismiss="modal">&times;</button>\n      </div>\n\n      \x3c!-- Modal body --\x3e\n      <div class="modal-body">\n          <form [formGroup]="LedgerEntryForm">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td class="float-rt">Ledger Type</td>\n              <td>\n                <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="ledgerModel.LedgerType" \n                formControlName="LedgerType">\n                  <option [ngValue]="null" [disabled]="disabled">Select</option>\n                  <option *ngFor="let _LedgerType of LedgerType" [disabled]="disabled" [value]="_LedgerType.Code">\n                    {{_LedgerType.Name}}\n                  </option>            \n                </select>\n              </td>\n              <ng-container *ngIf="ledgerModel.LedgerType !=\'CR\'">\n              <td class="float-rt">Scheme Code</td>\n              <td><input type="text" class="form-control" [(ngModel)]="ledgerModel.SchemeCode" \n                formControlName="SchemeCode"></td>\n              </ng-container>  \n            </tr>\n            <tr>\n              <td class="float-rt">Ledger Name</td>\n              <td>\n                <input type="text" class="form-control" [(ngModel)]="ledgerModel.AccName" \n                formControlName="AccName">\n              </td>\n              <ng-container *ngIf="ledgerModel.LedgerType == \'CR\'">\n              <td class="float-rt">Party Code</td>\n              <td><input type="text" class="form-control" [(ngModel)]="ledgerModel.PartyCode" \n                formControlName="PartyCode"></td>\n              </ng-container>\n            </tr>\n            <tr>\n              <td class="float-rt">Subgroup</td>\n              <td>\n                <select class="form-control mr-auto mt-2 mt-lg-0"  [(ngModel)]="ledgerModel.GroupID" \n                formControlName="GroupID" (change)="GetGroup(ledgerModel.GroupID)">\n                  <option [ngValue]="null">Select</option>\n                  <option *ngFor="let _SubGroup of SubGroup" [value]="_SubGroup.GroupID">\n                    {{_SubGroup.GroupName}}\n                  </option>            \n                </select>\n              </td>\n              <td class="float-rt">Group</td>\n              <td><input type="text" class="form-control"  formControlName="GroupName" [(ngModel)]="GroupName" readonly></td>\n            </tr>\n            <tr>\n              <td class="float-rt">Ledger Category</td>\n              <td>\n                <select class="form-control mr-auto mt-2 mt-lg-0"  [(ngModel)]="ledgerModel.AccType" \n                formControlName="AccType" (change)="EnableOD()" >\n                <option [ngValue]="null">Select</option>\n                <option *ngFor="let _LedgerCategory of LedgerCategory" [value]="_LedgerCategory.Value">\n                  {{_LedgerCategory.Name}}\n                </option> \n                </select>\n              </td>\n              <td class="float-rt">Balance Type</td>\n              <td>\n                <select class="form-control mr-auto mt-2 mt-lg-0"  [(ngModel)]="ledgerModel.OpnBalType" \n                formControlName="OpnBalType">\n                <option [ngValue]="null">Select</option>\n                <option *ngFor="let _BalanceType of BalanceType" [value]="_BalanceType.Value">\n                  {{_BalanceType.Name}}\n                </option>                  \n                </select>\n              </td>\n              <td class="float-rt">Open Bal</td>\n              <td><input type="text" class="form-control"  [(ngModel)]="ledgerModel.OpeBal" \n                formControlName="OpeBal"></td>\n            </tr>\n            <tr>\n              <ng-container *ngIf="ledgerModel.LedgerType == \'CR\'">\n              <td class="float-rt">GSTIN</td>\n              <td>\n                <input type="text" class="form-control"  [(ngModel)]="ledgerModel.TIN" \n                formControlName="TIN">\n              </td>\n              </ng-container>\n              <ng-container *ngIf="EnableDisableODLimit">\n              <td class="float-rt">OD Limit</td>\n              <td>\n                <input type="text" class="form-control"  [(ngModel)]="ledgerModel.OdLimit" \n                formControlName="OdLimit">\n              </td>   \n              </ng-container>            \n            </tr>\n            <tr *ngIf="ledgerModel.LedgerType == \'CR\'">\n              <td class="float-rt">Address1</td>\n              <td>\n                <input type="text" class="form-control" [(ngModel)]="ledgerModel.Address1" \n                formControlName="Address1">\n              </td>\n              <td class="float-rt">Ph No</td>\n              <td><input type="text" class="form-control" [(ngModel)]="ledgerModel.Phone" \n                formControlName="Phone"></td>\n            </tr>\n            <tr *ngIf="ledgerModel.LedgerType == \'CR\'">\n              <td class="float-rt">Address2</td>\n              <td>\n                <input type="text" class="form-control" [(ngModel)]="ledgerModel.Address2" \n                formControlName="Address2">\n              </td>\n              <td class="float-rt">Mob No</td>\n              <td><input type="text" class="form-control" [(ngModel)]="ledgerModel.Mobile" \n                formControlName="Mobile"></td>\n            </tr>\n            <tr *ngIf="ledgerModel.LedgerType == \'CR\'">\n              <td class="float-rt">Address3</td>\n              <td>\n                <input type="text" class="form-control" [(ngModel)]="ledgerModel.Address3" \n                formControlName="Address3">\n              </td>\n              <td class="float-rt">Email ID</td>\n              <td><input type="text" class="form-control" [(ngModel)]="ledgerModel.EmailID" \n                formControlName="EmailID"></td>\n            </tr>\n            <tr *ngIf="ledgerModel.LedgerType == \'CR\'">\n              <td class="float-rt">City</td>\n              <td>\n                <input type="text" class="form-control" [(ngModel)]="ledgerModel.City" \n                formControlName="City">\n              </td>\n              <td class="float-rt">Website</td>\n              <td><input type="text" class="form-control" [(ngModel)]="ledgerModel.WebSite" \n                formControlName="WebSite"></td>\n            </tr>\n            <tr *ngIf="ledgerModel.LedgerType == \'CR\'">\n              <td class="float-rt">District</td>\n              <td>\n                <input type="text" class="form-control" [(ngModel)]="ledgerModel.District" \n                formControlName="District">\n              </td>\n              <td class="float-rt">PAN</td>\n              <td><input type="text" class="form-control" [(ngModel)]="ledgerModel.PANCard" \n                formControlName="PANCard"></td>\n            </tr>\n            <tr>\n              <td  *ngIf="ledgerModel.LedgerType == \'CR\'" class="float-rt">PIN Code</td>\n              <td  *ngIf="ledgerModel.LedgerType == \'CR\'">\n                <input type="text" class="form-control" [(ngModel)]="ledgerModel.PinCode" \n                formControlName="PinCode">\n              </td>\n              <td class="float-rt">Group Code</td>\n              <td>\n                <select class="form-control mr-auto mt-2 mt-lg-0" (change)="getHsnSac(GroupCode.value)"  [(ngModel)]="ledgerModel.GSTGoodsGroupCode" \n                formControlName="GSTGoodsGroupCode" #GroupCode>\n                  <option [ngValue]="null">Select</option>\n                  <option *ngFor="let _GSTGroup of GSTGroup" [value]="_GSTGroup.Code">\n                    {{_GSTGroup.Type}}\n                  </option>            \n                </select>\n              </td>\n              <td class="float-rt">Type</td>\n              <td>\n                <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="ledgerModel.GSTServicesGroupCode" \n                formControlName="GSTServicesGroupCode">\n                  <option [ngValue]="null">Select</option>\n                  <option *ngFor="let _GSTServiceGroup of GSTServiceGroup" [value]="_GSTServiceGroup.Code">\n                    {{_GSTServiceGroup.Type}}\n                  </option>            \n                </select>\n              </td>\n              <td class="float-rt">HSN/SAC</td>\n              <td>\n                <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="ledgerModel.HSN" \n                formControlName="HSN">\n                  <option [ngValue]="null">Select</option>\n                  <option *ngFor="let _HSNSAC of HSNSAC" [value]="_HSNSAC.Code">\n                    {{_HSNSAC.Type}}\n                  </option>            \n                </select>\n              </td>\n            </tr>\n            <tr  *ngIf="ledgerModel.LedgerType == \'CR\'">\n              <td class="float-rt">Country</td>\n              <td>\n                <input type="text" class="form-control" [(ngModel)]="ledgerModel.Country" \n                formControlName="Country">\n              </td>\n              <td class="float-rt">TDS</td>\n              <td><input type="text" class="form-control" [(ngModel)]="ledgerModel.TDSID" \n                formControlName="TDSID"></td>\n            </tr>\n            <tr>\n              <td class="float-rt">Budget Amount</td>\n              <td>\n                <input type="text" class="form-control" [(ngModel)]="ledgerModel.BudgetAmt" \n                formControlName="BudgetAmt">\n              </td>\n              <td class="float-rt">Schedule Type</td>\n              <td><input type="text" class="form-control" [(ngModel)]="ledgerModel.LedgerType" \n                formControlName="LedgerType"></td>\n            </tr>\n            <tr  *ngIf="ledgerModel.LedgerType == \'CR\'">\n              <td class="float-rt">State</td>\n              <td>\n                <input type="text" class="form-control" [(ngModel)]="ledgerModel.State" \n                formControlName="State">\n              </td>            \n            </tr>\n            <tr>\n              <td class="float-rt">Trans Type</td>\n              <td>\n                <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="ledgerModel.TransType" \n                formControlName="TransType">\n                  <option [ngValue]="null">Select</option>\n                  <option *ngFor="let _TransactionType of TransactionType" [value]="_TransactionType.Code">\n                    {{_TransactionType.Name}}\n                  </option>            \n                </select>\n              </td>\n              <td class="float-rt">V Type</td>  \n              <td>\n                <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="ledgerModel.VTYPE" \n                formControlName="VTYPE">\n                  <option [ngValue]="null">Select</option>\n                  <option *ngFor="let _VType of VType" [value]="_VType.Code">\n                    {{_VType.Name}}\n                  </option>            \n                </select>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        </form>\n      </div>\n      \x3c!-- Modal footer --\x3e\n      <div class="modal-footer">\n        <div class="input-group">\n          <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" (click)="Save()" type="button"><i\n              class="fal fa-save"></i> Save</button>             \n          <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" type="button" data-dismiss="modal"\n            ><i class="far fa-window-close"></i>\n            Exit</button>\n        </div>\n      </div>\n      \x3c!-- <pre>{{ledgerModel | json}}</pre> --\x3e\n    </div>\n  </div>\n</div>\n\n<div class="modal fade" id="ReprintModal" tabindex="-1" data-backdrop="static" data-keyboard="false" role="dialog"\naria-labelledby="exampleModalLabel" aria-hidden="true">\n<div class="modal-dialog modal-lg" role="document" style="max-width: 1400px">\n  <div class="modal-content">\n    <div class="modal-header">\n      <button type="button"\n        class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary"\n        id="exampleModalLabel" (click)=print()><i class="fal fa-print"></i> Print</button>\n      <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n        <span aria-hidden="true">&times;</span>\n      </button>\n    </div>\n    <span>\n      <div id="DisplayData" class="center" [innerHTML]=\'PrintDetails\'></div>\n    </span>\n  </div>\n</div>\n</div>'},ITU0:function(t,e,n){"use strict";n.r(e),e.default='<div class="card mb-0">\n  <div class="card-body">\n      \x3c!-- <div class="card-body"> --\x3e\n      <form class="form-horizontal">\n          <div class="row">\n              <div class="col-md-3 ">\n                  <div class="form-group">\n                      <div>\n                          <i class="fal fa-calendar-alt"></i>&nbsp; <span class="text-muted">\n                              Voucher Date</span>\n                          \x3c!-- <h2 class="font-light">{{voucherDate | date: \'yyyy-MM-dd\'}}</h2> --\x3e\n                          <h2 class="font-light">{{voucherDate | date:\'dd/MM/yyyy\'}}</h2>\n                      </div>\n                  </div>\n              </div>\n\n              <div class="col-md-3">\n                  <div class="form-group">\n                      <label for="NewVoucherNo">Voucher No.</label>\n                      <input type="number" class="form-control" name="NewVoucherNo"\n                          [(ngModel)]="JournalEntryHeader.NewVoucherNo" readonly>\n                  </div>\n              </div>\n              <div class="col-md-3">\n              </div>\n              <div class="col-md-3 ">\n              </div>\n          </div>\n      </form>\n      <div class="row">\n          <div class="col-md-12">\n          <div class="table-responsive">\n              <table class="table table-bordered">\n                  <thead class="topbar">\n                      <tr>\n                          <th>Account Name</th>\n                          <th>Debit</th>\n                          <th>Credit</th>\n                          <th>Narration</th>\n                          <th>Receipt No</th>                          \n                          <th>Action</th>                                                 \n                      </tr>\n                  </thead>\n                  <tbody>\n                      <tr>\n                          <td>\n                              <select class="form-control" [(ngModel)]="JournalEntryHeader.AccountCode">\n                                  <option [ngValue]="0">Select</option>\n                                  <option *ngFor="let _accountNameList of AccountNameList" [value]="_accountNameList.acc_code">\n                                      {{_accountNameList.acc_name}}</option>\n                              </select>\n                          </td>\n                          <td>\n                              <input type="number" class="form-control"\n                                  [(ngModel)]="JournalEntryHeader.DebitAmount">\n                          </td>\n                          <td>\n                              <input type="number" class="form-control"\n                                  [(ngModel)]="JournalEntryHeader.CreditAmount">\n                          </td>                          \n                          <td>\n                              \x3c!-- <select class="form-control" [(ngModel)]="JournalEntryHeader.Narration">\n                                  <option [ngValue]="null">Select</option>\n                                  <option *ngFor="let list of NarrationList" [value]="list.Narration">\n                                      {{list.Narration}}</option>\n                              </select> --\x3e\n                              <input list="narrationList" class="form-control" name="narration" [(ngModel)]="JournalEntryHeader.Narration"/>\n                              <datalist id="narrationList">\n                                <option [ngValue]="null">Select</option>\n                                <option *ngFor="let list of NarrationList" [value]="list.Narration">\n                                  {{list.Narration}}</option>\n                              </datalist>\n                          </td>\n                          <td>\n                            <input type="number" class="form-control"\n                                [(ngModel)]="JournalEntryHeader.ReceiptNo">\n                        </td>\n                          <td>\n                              <ng-container *ngIf="EnableAdd">\n                                  <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                                      style="margin-top: 0.2rem !important;" (click)="add()">\n                                      <i class="far fa-plus-circle" style="padding-right:10px"></i>Add</button>\n                              </ng-container>\n                              <ng-container *ngIf="EnableSave">\n                                  <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                                      style="margin-top: 0.2rem !important;" (click)="save()">\n                                      <i class="fal fa-save" style="padding-right:10px"></i>Save</button>\n                              </ng-container>\n                              <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                              style="margin-top: 0.2rem !important;" (click)="clear()">\n                              <i class="fal fa-window-close" style="padding-right:10px"></i>Clear</button>\n                          </td>\n                          \x3c!-- <td>\n                              <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                                  style="margin-top: 0.2rem !important;" (click)="clear()">\n                                  <i class="fal fa-window-close" style="padding-right:10px"></i>Clear</button>\n                          </td> --\x3e\n                      </tr>\n                  </tbody>\n              </table>\n          </div>\n          </div>\n      </div>\n  </div>\n</div>\n<br>\n<ng-container *ngIf="JournalList.length>0">\n<div class="card mb-0">\n  <div class="card-body">\n      <div class="row">\n          <div class="table-responsive">\n              <table class="table table-bordered">\n                  <thead class="topbar">\n                      <tr>\n                          <th>Action</th>\n                          <th>SNo</th>\n                          <th>Account Name</th>\n                          <th>Debit</th>\n                          <th>Credit</th>\n                          <th>Naration</th>\n                          <th>Receipt No</th>\n                      </tr>\n                  </thead>\n                  <tbody *ngFor="let _journalVoucherList of JournalList;let i=index">\n                      <tr>\n                          <td><i class="fas fa-edit" title="edit" (click)="EditRow(_journalVoucherList,i)" style="padding-right:10px"></i>\n                              <i class="fas fa-trash" title="delete" (click)="DeleteRow(i)"></i>\n                          </td>\n                          <td>{{i+1}}</td>\n                          <td>\n                            <select class="form-control" [(ngModel)]="_journalVoucherList.AccountCode">\n                                <option [ngValue]="0">Select</option>\n                                <option *ngFor="let _accountNameList of AccountNameList" [value]="_accountNameList.acc_code">\n                                    {{_accountNameList.acc_name}}</option>\n                            </select>\n                          </td>\n                          <td>{{_journalVoucherList.DebitAmount}}</td>\n                          <td>{{_journalVoucherList.CreditAmount}}</td>\n                          <td>{{_journalVoucherList.Narration}}</td>\n                          <td>{{_journalVoucherList.ReceiptNo}}</td>\n                      </tr>\n                  </tbody>\n                  <tr style=" border: none;">\n                    <td class="border-none"></td>\n                    <td class="border-none"></td>\n                    <td class="border-none"></td>\n                    <td class="border-none">{{DebitAmount(JournalList) | number : \'1.2-2\'}}</td>      \n                    <td class="border-none">{{CreditAmount(JournalList) | number : \'1.2-2\'}}</td>      \n                    <td class="border-none"></td>\n                    <td class="border-none"></td>                                  \n                  </tr>\n                  <tr style=" border: none;">\n                    <td class="border-none"></td>\n                    <td class="border-none"></td>\n                    <td class="border-none"></td>\n                    <td class="border-none"></td>\n                    <td class="border-none"></td>\n                    <td class="border-none">Difference</td>                                  \n                    <td class="border-none">{{differenceAmount() | number : \'1.2-2\'}}</td>      \n                  </tr>\n              </table>\n          </div>\n      </div>\n  </div>\n</div>\n</ng-container>\n\x3c!-- </div> --\x3e\n\x3c!-- </div> --\x3e\n\n<div class="modal fade" id="ReprintJournalEntryModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"\n  aria-hidden="true">\n  <div class="modal-dialog modal-lg" role="document" style="max-width: 1400px">\n      <div class="modal-content">\n          <div class="modal-header">\n              <button type="button"\n                  class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary"\n                  id="exampleModalLabel" (click)=print()><i class="fal fa-print"></i> Print</button>\n              <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                  <span aria-hidden="true">&times;</span>\n              </button>\n          </div>\n          <div class="print">\n          <span>\n              <div id="DisplayData" [innerHTML]=\'PrintDetails\'></div>\n          </span>\n          </div>\n      </div>\n  </div>\n</div>\n\n<div class="row pt-1" *ngIf="JournalList.length>0">\n    <div class="col-md-4">\n        <button class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary "\n            (click)="Submit()" [disabled]="EnableSubmitButton">\n            <i class="far fa-save"></i> Submit</button>\n    </div>\n</div>\n\n\x3c!-- <pre>{{JournalList | json}}</pre> --\x3e'},"K9l/":function(t,e,n){"use strict";n.r(e),e.default='.print{\r\n    padding-left:200px;\r\n    padding-bottom: 50px;\r\n    padding-top:-200px;\r\n    \r\n  }\r\n  \r\n  .card-title {\r\n      margin-bottom: -0.3rem !important;\r\n  }\r\n  \r\n  .table-responsive {\r\n      display: block;\r\n      width: 99.9% !important;\r\n      overflow-x: auto;\r\n      -ms-overflow-style: -ms-autohiding-scrollbar;\r\n  }\r\n  \r\n  .card-header{\r\n      border-radius: 15px !important;\r\n    }\r\n  \r\n  .card{\r\n      border-radius: 15px !important;\r\n    \r\n    }\r\n  \r\n  .card-body{ \r\n      padding: 10px 30px 0px 30px !important; \r\n      border-bottom: 2px solid black;\r\n      border-radius: 15px;\r\n    }\r\n  \r\n  .p-38 { height: 38px; }\r\n  \r\n  .text-white { color: white;}\r\n  \r\n  .Pointer { cursor: pointer; }\r\n  \r\n  .footer {\r\n      position: fixed;\r\n      left: 0;\r\n      bottom: 0;\r\n    }\r\n  \r\n  .hide{\r\n     display: hide;\r\n    }\r\n  \r\n  .show{\r\n      display: block;\r\n    }\r\n  \r\n  .accordion .card-header.collapsed:after {\r\n      /* symbol for "collapsed" panels */\r\n      content: "\\f067"; \r\n      position: absolute;\r\n      right: 20px;\r\n      font-size: 20px;\r\n      font-weight: 400;\r\n    \r\n      line-height: 1;\r\n      margin-top: -25px;\r\n      transition: .3s transform ease-in-out;\r\n    }\r\n  \r\n  .accordion .card-header:after {\r\n      font-family: \'FontAwesome\'; \r\n      content: "\\f068";\r\n      position: absolute;\r\n      right: 20px;\r\n      font-size: 20px;\r\n      font-weight: 400;\r\n      line-height: 1;\r\n      margin-top: -25px;\r\n    }\r\n  \r\n  .text-red{\r\n      color:red;\r\n    }\r\n  \r\n  .text-green{\r\n    color:#16d616; \r\n    }'},KHTg:function(t,e,n){"use strict";n.r(e),e.default='<form [formGroup]="ChequeForm" class="form-horizontal">\n<div class="card mb-0">\n  <div class="card-body">\n    <div class="table-responsive">\n      <table class="table table-bordered">\n        <thead class="topbar">\n          <tr>\n            <th>Bank</th>\n            <th>No of Cheques</th>\n            <th>Cheque Start No</th>\n            <th>Cheque End No</th>\n            <th>Max Amount</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n        <tr>\n          <td>\n            <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="ChequeModel.AccCode" formControlName="AccCode">\n              <option [ngValue]="null">Select</option>\n                            <option *ngFor="let _masterLedgerList of MasterLedgerList" [value]="_masterLedgerList.Code">\n                                {{_masterLedgerList.Name}}\n              </option>\n            </select>\n          </td>\n          <td><input type="text" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, \'\').replace(/(\\..*)\\./g, \'$1\');" onKeyPress="if(this.value.length==4) return false;"  [(ngModel)]="ChequeModel.NoOfChqs" formControlName="NoOfCheques"></td>\n          <td><input type="text" class="form-control" oninput="this.value = this.value.replace(/[^0-9.]/g, \'\').replace(/(\\..*)\\./g, \'$1\');" onKeyPress="if(this.value.length==6) return false;" [(ngModel)]="ChequeModel.ChqStartNo" formControlName="ChqStart" (change)="calcChqEndNo()"></td>\n          <td><input type="text" class="form-control"  [(ngModel)]="ChequeModel.ChqEndNo" formControlName="ChqEnd" readonly></td>\n          <td><input type="text" class="form-control"  [(ngModel)]="ChequeModel.MaxAmount" formControlName="MaxAmount"></td>\n          <td>\n            <button class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary"\n              (click)="add(ChequeForm)">ADD</button>\n            <button class="btn btn-outline-danger waves-effect waves-light btn-rounded btn-outline-secondary "\n              (click)="clear()">CLEAR</button>\n          </td>\n        </tr>\n      </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n<br>\n<div class="card mb-0">\n  <div class="card-body">\n    <div class="table-responsive">\n      <table class="table table-bordered">\n        <thead class="topbar">\n          <tr>\n            <th>Bank</th>\n            <th>No of Cheques</th>\n            <th>Cheque Start</th>\n            <th>Cheque End</th>\n            <th>Max Amount</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody *ngFor="let _chequeList of ChequeList;">\n          <tr>\n            <td>{{_chequeList.AccName}}</td>\n            <td>{{_chequeList.Nos}}</td>\n            <td>{{_chequeList.StartNo}}</td>\n            <td>{{_chequeList.EndNo}}</td>\n            <td>{{_chequeList.MaxAmt}}</td>\n            <td>\n              <button class="btn btn-default btn-rounded" type="button" (click)="DeleteRow(_chequeList)"><i\n                  class="far fa-window-close"></i>\n                Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n\x3c!-- <pre>\n  {{ChequeModel | json}}\n</pre> --\x3e\n'},UAMs:function(t,e,n){"use strict";n.r(e),e.default='<div id="accordian" class="accordion">\n  <div class="card mb-0">\n    <div id="header" class="card-body show">\n      <form [formGroup]="NarrationForm" class="form-horizontal">\n        <div class="row">\n          <div class="col-md-4">\n            <div class="form-group">\n              <label for="Narration">Narration</label>\n              <div class="form-group">\n                <input type="text" class="form-control" [(ngModel)]="NarrationModel.Narration"\n                  formControlName="Narration">\n              </div>\n            </div>\n          </div>\n          <div class="col-md-3">\n            <div class="form-group">\n                <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                  style="margin-top: 1.2rem !important;" (click)="add(NarrationForm)">\n                  <i class="far fa-plus-circle"></i>Add</button>\n              <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                style="margin-top: 1.2rem !important;" (click)="clear()">\n                <i class="far fal fa-trash"></i>Clear</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<br>\n<div class="card mb-0">\n  <div class="card-body">\n    <div class="table-responsive">\n      <table class="table table-bordered">\n        <thead class="topbar">\n          <tr>\n            <th>Delete</th>\n            <th>Narration</th>\n          </tr>\n        </thead>\n        <tbody *ngFor="let _narrationList of NarrationList">\n          <tr>\n            <td>\n              \x3c!-- <i class="fas fa-close" title="Delete" (click)="deleteField(_narrationList)"></i> --\x3e\n              <button class="btn btn-default btn-rounded" type="button" (click)="deleteField(_narrationList)"><i\n                class="far fa-window-close"></i>\n              Delete</button>            </td>\n            <td>{{_narrationList.Narration}}</td>           \n          </tr>\n          <tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n<br>\n\n\x3c!-- <pre>{{NarrationModel | json}}</pre>   --\x3e'},XRoq:function(t,e,n){"use strict";n.r(e),e.default='.card-title {\r\n    margin-bottom: -0.3rem !important;\r\n}\r\n\r\n.table-responsive {\r\n    display: block;\r\n    width: 99.9% !important;\r\n    overflow-x: auto;\r\n    -ms-overflow-style: -ms-autohiding-scrollbar;\r\n}\r\n\r\n.card-header{\r\n    border-radius: 15px !important;\r\n  }\r\n\r\n.card{\r\n    border-radius: 15px !important;  \r\n  }\r\n\r\n.card-body{ \r\n    padding: 10px 30px 0px 30px !important; \r\n    border-bottom: 2px solid black;\r\n    border-radius: 15px;\r\n  }\r\n\r\n.p-38 { height: 38px; }\r\n\r\n.text-white { color: white;}\r\n\r\n.Pointer { cursor: pointer; }\r\n\r\n.footer {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n.hide{\r\n   display: hide;\r\n  }\r\n\r\n.show{\r\n    display: block;\r\n  }\r\n\r\n.accordion .card-header.collapsed:after {\r\n    /* symbol for "collapsed" panels */\r\n    content: "\\f067"; \r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    transition: .3s transform ease-in-out;\r\n  }\r\n\r\n.accordion .card-header:after {\r\n    font-family: \'FontAwesome\';  \r\n    content: "\\f068";\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    margin-top: -25px;\r\n  }\r\n\r\n.text-red{\r\n    color:red;\r\n  }\r\n\r\n.text-green{\r\n  color:#16d616; \r\n  }'},YtRN:function(t,e,n){"use strict";n.r(e),e.default='.print{\r\n   padding-left:200px;\r\n   padding-bottom: 50px;\r\n   padding-top:-200px;\r\n   \r\n}\r\n.card-title {\r\n   margin-bottom: -0.3rem !important;\r\n}\r\n.table-responsive {\r\n   display: block;\r\n   width: 99.9% !important;\r\n   overflow-x: auto;\r\n   -ms-overflow-style: -ms-autohiding-scrollbar;\r\n}\r\n.card-header{\r\n   border-radius: 15px !important;\r\n }\r\n.card{\r\n   border-radius: 15px !important;  \r\n }\r\n.card-body{ \r\n   padding: 10px 30px 0px 30px !important; \r\n   border-bottom: 2px solid black;\r\n   border-radius: 15px;\r\n }\r\n.p-38 { height: 38px; }\r\n.text-white { color: white;}\r\n.Pointer { cursor: pointer; }\r\n.footer {\r\n   position: fixed;\r\n   left: 0;\r\n   bottom: 0;\r\n }\r\n.hide{\r\n  display: hide;\r\n }\r\n.show{\r\n   display: block;\r\n }\r\n.accordion .card-header.collapsed:after {\r\n   /* symbol for "collapsed" panels */\r\n   content: "\\f067"; \r\n   position: absolute;\r\n   right: 20px;\r\n   font-size: 20px;\r\n   font-weight: 400;\r\n \r\n   line-height: 1;\r\n   margin-top: -25px;\r\n   transition: .3s transform ease-in-out;\r\n }\r\n.accordion .card-header:after {\r\n   font-family: \'FontAwesome\';  \r\n   content: "\\f068";\r\n   position: absolute;\r\n   right: 20px;\r\n   font-size: 20px;\r\n   font-weight: 400;\r\n   line-height: 1;\r\n   margin-top: -25px;\r\n }\r\n.text-red{\r\n   color:red;\r\n }\r\n.text-green{\r\n color:#16d616; \r\n }'},b7L2:function(t,e,n){"use strict";n.r(e),e.default='.card-title {\r\n    margin-bottom: -0.3rem !important;\r\n}\r\n\r\n.table-responsive {\r\n    display: block;\r\n    width: 99.9% !important;\r\n    overflow-x: auto;\r\n    -ms-overflow-style: -ms-autohiding-scrollbar;\r\n}\r\n\r\n.card-header{\r\n    border-radius: 15px !important;\r\n  }\r\n\r\n.card{\r\n    border-radius: 15px !important;  \r\n  }\r\n\r\n.card-body{ \r\n    padding: 10px 30px 0px 30px !important; \r\n    border-bottom: 2px solid black;\r\n    border-radius: 15px;\r\n  }\r\n\r\n.p-38 { height: 38px; }\r\n\r\n.text-white { color: white;}\r\n\r\n.Pointer { cursor: pointer; }\r\n\r\n.footer {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n.hide{\r\n   display: hide;\r\n  }\r\n\r\n.show{\r\n    display: block;\r\n  }\r\n\r\n.accordion .card-header.collapsed:after {\r\n    /* symbol for "collapsed" panels */\r\n    content: "\\f067"; \r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    transition: .3s transform ease-in-out;\r\n  }\r\n\r\n.accordion .card-header:after {\r\n    font-family: \'FontAwesome\';  \r\n    content: "\\f068";\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    margin-top: -25px;\r\n  }\r\n\r\n.text-red{\r\n    color:red;\r\n  }\r\n\r\n.text-green{\r\n  color:#16d616; \r\n  }\r\n\r\n.center {\r\n    margin: auto;\r\n    width: 70%;\r\n    padding: 5px;\r\n  }'},dB2Y:function(t,e,n){"use strict";n.r(e),e.default='.print{\r\n  padding-left:200px;\r\n  padding-bottom: 50px;\r\n  padding-top:-200px;\r\n  \r\n}\r\n.card-title {\r\n  margin-bottom: -0.3rem !important;\r\n}\r\n.table-responsive {\r\n  display: block;\r\n  width: 99.9% !important;\r\n  overflow-x: auto;\r\n  -ms-overflow-style: -ms-autohiding-scrollbar;\r\n}\r\n.card-header{\r\n    border-radius: 15px !important;\r\n  }\r\n.card{\r\n    border-radius: 15px !important;\r\n  \r\n  }\r\n.card-body{ \r\n    padding: 10px 30px 0px 30px !important; \r\n    border-bottom: 2px solid black;\r\n    border-radius: 15px;\r\n  }\r\n.p-38 { height: 38px; }\r\n.text-white { color: white;}\r\n.Pointer { cursor: pointer; }\r\n.footer {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n.hide{\r\n   display: hide;\r\n  }\r\n.show{\r\n    display: block;\r\n  }\r\n.accordion .card-header.collapsed:after {\r\n    /* symbol for "collapsed" panels */\r\n    content: "\\f067"; \r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    transition: .3s transform ease-in-out;\r\n  }\r\n.accordion .card-header:after {\r\n    font-family: \'FontAwesome\';  \r\n    content: "\\f068";\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    margin-top: -25px;\r\n  }\r\n.text-red{\r\n    color:red;\r\n  }\r\n.text-green{\r\n  color:#16d616; \r\n  }\r\n  \r\n  \r\n  \r\n'},"g/Jk":function(t,e,n){"use strict";n.r(e),e.default='<div id="accordian" class="accordion">\n  <div class="card mb-0">\n    <div id="header" class="card-body show">\n      <form class="form-horizontal">\n        <div class="row">\n          <div class="col-lg-12">\n            <div class="form-body">\n              <div class="row">\n                <div class="col-md-2">\n                  <div class="form-group">\n                    <label class="control-label">Search Group</label>\n                    <div class="m-b-10">\n                      \x3c!-- <input type="text" class="form-control" formControlName="SubGroup"> --\x3e\n                      <input class="form-control" type="text" name="search" [(ngModel)]="searchText" autocomplete="off">\n                    </div>\n                  </div>\n                </div>\n                <div class="col-md-3">\n                  \x3c!-- <div class="form-group" style="display: inline-block;padding-top: 1.5rem;">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary" type="submit"><i\n                        class="fal fa-search"></i> Search</button>\n                  </div> --\x3e\n                </div>\n                <div class="col-md-6">\n                  <div class="form-group float-right" style="display: inline-block;padding-top: 1.5rem;">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary" type="submit"><i\n                        class="fal fa-search"></i> Print</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \x3c!-- <pre>{{ SRHeaderForm | json }}</pre> --\x3e\n      </form>\n    </div>\n  </div>\n</div>\n<br>\n<div id="accordian" class="accordion">\n  <div class="card mb-0">\n    <div id="header" class="card-body show">\n<form [formGroup]="MasterGroupForm" class="form-horizontal">\n  \x3c!-- <div class="card mb-0">\n    <div class="card-body">\n      <div class="table-responsive">\n        <table class="table table-bordered">\n          <tr>\n            <td><input type="text" class="form-control" formControlName="GroupName"></td>\n            <td>\n              <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="GroupType" (change)="chngGroupName(MasterGroupForm)">\n                <option [ngValue]="null">Select</option>\n                <option *ngFor="let _masterGroupType of MasterGroupType" [value]="_masterGroupType.GSCode">\n                  {{_masterGroupType.ItemName}}\n                </option>\n              </select>\n            </td>\n            <td>\n              <ng-container *ngIf="GroupType ==\'I\'">\n              <input type="checkbox" formControlName="IsTrading"/>\n              <span>Trading</span>\n              </ng-container>\n            </td>\n            <td>\n              <button\n                class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary" (click)="add(MasterGroupForm)">ADD</button>\n              <button\n                class="btn btn-outline-danger waves-effect waves-light btn-rounded btn-outline-secondary ">CLEAR</button>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div> --\x3e\n  \n  <div class="row">\n    <div class="col-md-4">\n        <div class="form-group">\n            <label for="GroupName">Group Name</label>\n            <div class="form-group">\n              <input type="text" class="form-control" [(ngModel)]="MasterGroupModel.GroupName" formControlName="GroupName">\n            </div>\n        </div>\n    </div>\n    <div class="col-md-4">\n      <div class="form-group">\n          <label for="GroupType">Group Type</label>\n          <div class="form-group">\n            <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="MasterGroupModel.GroupType" formControlName="GroupType" (change)="chngGroupName(MasterGroupForm)">\n              <option [ngValue]="null">Select</option>\n              <option *ngFor="let _masterGroupType of MasterGroupType" [value]="_masterGroupType.GSCode">\n                {{_masterGroupType.ItemName}}\n              </option>\n            </select>\n          </div>\n      </div>\n  </div>\n  <div class="col-md-1">\n    <div class="form-group">\n      <ng-container *ngIf="MasterGroupModel.GroupType ==\'I\' || MasterGroupModel.GroupType ==\'E\'">\n        <label for="IsTrading">Trading</label>     \n        <div class="form-group">\n          <input type="checkbox" class="chkbxsize" [checked]="chkchkbxchked" [(ngModel)]="MasterGroupModel.IsTrading" formControlName="IsTrading" (change)="chkbxchng($event)"/>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n  <div class="col-md-3">\n    <div class="form-group">\n      <ng-container *ngIf="EnableAdd">\n      <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n      style="margin-top: 1.2rem !important;"\n      (click)="add(MasterGroupForm)">\n      <i class="far fa-plus-circle"></i>Add</button>\n    </ng-container>\n    <ng-container *ngIf="EnableSave">\n      <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n      style="margin-top: 1.2rem !important;"\n      (click)="save(MasterGroupForm)">\n      <i class="fal fa-save"></i>Save</button>\n    </ng-container>\n        <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n        style="margin-top: 1.2rem !important;"\n        (click)="clear()">\n        <i class="fal fa-trash"></i>Clear</button>\n      </div>\n    </div>\n  </div>\n  </form>\n  </div>\n  </div>\n  </div>\n<br>\n<div class="card mb-0">\n  <div class="card-body">\n    <div class="table-responsive">\n      <table class="table table-bordered">\n        <thead class="topbar">\n          <tr>\n            <th>Edit</th>\n            <th>Open</th>\n            <th>Close</th>\n            <th>Group Name</th>\n            <th>Group Type</th>\n            <th>Status</th>\n            <th>Trading</th>\n          </tr>\n        </thead>\n        <tbody *ngFor="let _masterGroupList of MasterGroupList | filter:searchText">\n          <tr>\n            <td>\n              <i class="fas fa-edit" title="edit" (click)="editField(_masterGroupList)"></i>\n            </td>\n            <td>\n              <i class="fas fa-lock-open" title="open" (click)="openField(_masterGroupList)"></i>              \n            <td>\n              <i class="fas fa-lock" title="close" (click)="closeField(_masterGroupList)"></i>              \n            </td>\n            <td>{{_masterGroupList.GroupName}} ( {{_masterGroupList.GroupID}} )</td>\n            <td>{{_masterGroupList.Under}}</td>\n            <td>{{_masterGroupList.ObjStatus}}</td>\n            <td>{{_masterGroupList.IsTrading}}</td>            \n          </tr>\n          <tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n<br>\n\x3c!-- \n<pre>\n{{MasterGroupModel | json}}\n</pre> --\x3e'},k3CP:function(t,e,n){"use strict";n.r(e),e.default='<div id="accordian" class="accordion">\n  <div class="card mb-0">\n    <div id="header" class="card-body show">\n      <form class="form-horizontal">\n        <div class="row">\n          <div class="col-lg-12">\n            <div class="form-body">\n              <div class="row">\n                <div class="col-md-12">\n                  <div class="">\n                    <div><i class="fal fa-calendar-alt"></i>&nbsp; <span class="text-muted">\n                        Voucher Date</span>\n                      \x3c!-- <h2 class="font-light">{{applicationDate | date: \'yyyy-MM-dd\'}}</h2> --\x3e\n                      <h2 class="font-light">{{applicationDate | date:\'dd/MM/yyyy\'}}</h2>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class="row">\n                <div class="col-md-6">\n                  <label *ngFor="let radiobutton of radioItems" class="form-check-inline">\n                    <input type="radio" name="optionDefault" (click)="OnRadioBtnChnge(radiobutton)"\n                      class="form-check-input" [value]="radiobutton" [checked]="radiobutton === model.option">\n                    <h3 style="margin-top: 5px;">{{radiobutton}}</h3>\n                  </label>\n                </div>\n              </div>\n              <br>\n              <div class="row">\n                <ng-container *ngIf="model.option !== \'Contra\' && model.option !== \'Journal\'">\n                  <div class="col-md-3 ">\n                        <label for="">Type</label>\n                        <select class="form-control mr-auto mt-2 mt-lg-0" (change)="getVoucherNo(TransType.value)" name="TransType" #TransType>\n                            <option [ngValue]="null">Select</option>\n                            <option *ngFor="let _paymentType of PaymentType" [value]="_paymentType.Code">\n                                {{_paymentType.Name}}\n                            </option>\n                        </select>\n                </div>\n              </ng-container>\n                <div class="col-md-3 ">\n                      <label for="">Voucher No</label>\n                      <select class="form-control mr-auto mt-2 mt-lg-0" (change)="ChangeVoucherDets(VoucherNo.value)" name="VoucherNo" #VoucherNo>\n                          <option [ngValue]="null">Select</option>\n                          <ng-container *ngIf="model.option !== \'Journal\'">\n                          <option *ngFor="let _voucherList of VoucherList" [value]="_voucherList.VoucherNo">\n                              {{_voucherList.AccName}} - {{_voucherList.VoucherNo}}\n                          </option>\n                        </ng-container>\n                        <ng-container *ngIf="model.option === \'Journal\'">\n                          <option *ngFor="let _voucherList of VoucherList" [value]="_voucherList.VoucherNo">\n                              {{_voucherList.Partyname}} - {{_voucherList.VoucherNo}}\n                          </option>\n                        </ng-container>\n                      </select>\n              </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n      <br>\n      <div class="input-group">\n        <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" type="button" (click)="rePrint()"><i\n            class="fal fa-print"></i> Reprint</button>             \n        <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" type="button" (click)="Cancel()"\n          ><i class="far fa-window-close"></i>\n          Exit</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class="modal fade" id="ReprintVoucherModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"\n    aria-hidden="true">\n    <div class="modal-dialog modal-lg" role="document" style="max-width: 1400px">\n        <div class="modal-content">\n            <div class="modal-header">\n                <button type="button"\n                    class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary"\n                    id="exampleModalLabel" (click)=print()><i class="fal fa-print"></i> Print</button>\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">&times;</span>\n                </button>\n            </div>\n            <div class="print">\n                <span>\n                    <div id="DisplayData" [innerHTML]=\'PrintDetails\'></div>\n                </span>\n            </div>\n        </div>\n    </div>\n</div>\n\n'},mQSa:function(t,e,n){"use strict";n.r(e);var r=n("mrSG"),o=n("fXoL"),a=n("ofXK"),s=n("3Pt+"),i=n("tyNb"),l=n("5nbR"),d=n("tk/3"),c=n("NFKh"),h=n("qlSq");let u=class{constructor(t,e){this._http=t,this.appConfigService=e,this.ccode="",this.bcode="",this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=c.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(c.enc.Utf8),this.bcode=c.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(c.enc.Utf8)}GetMasterLedger(){return this._http.get(this.apiBaseUrl+"api/Accounts/CashVoucherEntry/MasterLedger/"+this.ccode+"/"+this.bcode)}gettype(){return this._http.get(this.apiBaseUrl+"api/Accounts/CashVoucherEntry/TransactionType")}updateAccounts(t){return this._http.get(this.apiBaseUrl+"api/Accounts/AccountsUpdate/Update?companyCode="+this.ccode+"&branchCode="+this.bcode+"&startDate="+t+"&endDate="+t)}GetAccountNames(t){return this._http.get(this.apiBaseUrl+"api/Accounts/CashVoucherEntry/AccountName/"+this.ccode+"/"+this.bcode+"/"+t)}GetNarration(){return this._http.get(this.apiBaseUrl+"api/Accounts/CashVoucherEntry/Narration/"+this.ccode+"/"+this.bcode)}getApplicationDate(){return this._http.get(this.apiBaseUrl+"api/Masters/GetApplicationDate/"+this.ccode+"/"+this.bcode)}getCashVoucherTable(t,e,n){return this._http.get(this.apiBaseUrl+"api/Accounts/CashVoucherEntry/VoucherDetails/"+this.ccode+"/"+this.bcode+"/"+t+"/"+e+"/"+n)}editGet(t,e,n){return this._http.get(this.apiBaseUrl+"api/Accounts/CashVoucherEntry/Voucher/"+this.ccode+"/"+this.bcode+"/"+t+"/"+e+"/"+n)}getCashVoucherForCancel(t,e,n){return this._http.get(this.apiBaseUrl+"api/Accounts/CashVoucherEntry/Get/"+this.ccode+"/"+this.bcode+"/"+t+"/"+e+"/"+n)}PostCashVoucher(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/CashVoucherEntry/Post",e)}PutCashVoucher(t,e){const n=JSON.stringify(t);return this._http.put(this.apiBaseUrl+"api/Accounts/CashVoucherEntry/Put?voucherNo="+e,n)}deleteCashVoucherDet(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/CashVoucherEntry/Delete",e)}print(t,e,n,r,o){return this._http.get(this.apiBaseUrl+"api/Accounts/CashVoucherEntry/Print/"+this.ccode+"/"+this.bcode+"/"+t+"/"+e+"/"+n+"/"+r+"?tranType="+o)}getMasterGroupType(){return this._http.get(this.apiBaseUrl+"api/Accounts/MasterGroup/GroupType/"+this.ccode+"/"+this.bcode)}getMasterGroupList(){return this._http.get(this.apiBaseUrl+"api/Accounts/MasterGroup/List/"+this.ccode+"/"+this.bcode)}postMasterGroup(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/MasterGroup/Post",e)}putMasterGroup(t,e){const n=JSON.stringify(t);return this._http.put(this.apiBaseUrl+"api/Accounts/MasterGroup/Put?objID="+e,n)}getSubGroup(){return this._http.get(this.apiBaseUrl+"api/Accounts/SubGroup/ParentGroup?companyCode="+this.ccode+"&branchCode="+this.bcode)}getSubGroupList(){return this._http.get(this.apiBaseUrl+"api/Accounts/SubGroup/List?companyCode="+this.ccode+"&branchCode="+this.bcode)}postSubGroup(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/SubGroup/Post",e)}putSubGroup(t,e){const n=JSON.stringify(t);return this._http.put(this.apiBaseUrl+"api/Accounts/SubGroup/Put?objID="+e,n)}getNarrationList(){return this._http.get(this.apiBaseUrl+"api/Accounts/Narration/List?companyCode="+this.ccode+"&branchCode="+this.bcode)}postNarration(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/Narration/Post",e)}deleteNarration(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/Narration/Delete",e)}getMasterLedgerList(){return this._http.get(this.apiBaseUrl+"api/Accounts/ContraEntry/MasterLedger/"+this.ccode+"/"+this.bcode+"/B")}getContraPrintList(t){return this._http.get(this.apiBaseUrl+"api/Accounts/ContraEntry/PrintList/"+this.ccode+"/"+this.bcode+"/"+t)}getPaymentType(){return this._http.get(this.apiBaseUrl+"api/Accounts/BankVoucherEntry/Type")}getBankVoucherEntryList(t,e,n){return this._http.get(this.apiBaseUrl+"api/Accounts/BankVoucherEntry/List/"+this.ccode+"/"+this.bcode+"/"+t+"/"+e+"/"+n)}getBankVoucherDetails(t,e){return this._http.get(this.apiBaseUrl+"api/Accounts/BankVoucherEntry/Voucher?companyCode="+this.ccode+"&branchCode="+this.bcode+"&voucherNo="+t.VoucherNo+"&accCodeMaster="+t.AccCodeMaster+"&tranType="+e)}getBankVoucherDetailsForCancel(t,e,n){return this._http.get(this.apiBaseUrl+"api/Accounts/BankVoucherEntry/Voucher?companyCode="+this.ccode+"&branchCode="+this.bcode+"&voucherNo="+t+"&accCodeMaster="+e+"&tranType="+n)}getBankVoucherPrintList(t,e){return this._http.get(this.apiBaseUrl+"api/Accounts/BankVoucherEntry/PrintList/"+this.ccode+"/"+this.bcode+"/"+t+"/"+e)}postBankVoucherEntry(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/BankVoucherEntry/Post",e)}putBankVoucherEntry(t){const e=JSON.stringify(t);return this._http.put(this.apiBaseUrl+"api/Accounts/BankVoucherEntry/Put?voucherNo="+t[0].VoucherNo,e)}deleteBankVoucherEntry(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/BankVoucherEntry/Delete",e)}printBankVoucherEntry(t,e,n,r){return this._http.get(this.apiBaseUrl+"api/Accounts/BankVoucherEntry/Print?companyCode="+this.ccode+"&branchCode="+this.bcode+"&voucherNo="+t+"&accCodeMaster="+e+"&tranType="+n+"&accType="+r)}getAccountNameforJournalEntry(){return this._http.get(this.apiBaseUrl+"api/Accounts/JournalEntry/AccountName/"+this.ccode+"/"+this.bcode)}getJournalEntryDetails(t){return this._http.get(this.apiBaseUrl+"api/Accounts/JournalEntry/Get/"+this.ccode+"/"+this.bcode+"/"+t)}postJournalEntry(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/JournalEntry/Post",e)}cancelJournalEntry(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/JournalEntry/Delete",e)}printJournalEntry(t){return this._http.get(this.apiBaseUrl+"api/Accounts/JournalEntry/Print?companyCode="+this.ccode+"&branchCode="+this.bcode+"&voucherNo="+t.VoucherNo+"&accCodeMaster="+t.AccountCodeMaster+"&tranType="+t.TransType+"&accType="+t.AccountType)}getContraDetails(t){return this._http.get(this.apiBaseUrl+"api/Accounts/ContraEntry/Voucher/"+this.ccode+"/"+this.bcode+"/"+t+"/0/0")}getCashType(){return this._http.get(this.apiBaseUrl+"api/Accounts/ContraEntry/MasterLedger/"+this.ccode+"/"+this.bcode+"/C")}cancelContraEntry(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/ContraEntry/Delete",e)}getChequelist(){return this._http.get(this.apiBaseUrl+"api/Accounts/Cheque/List/"+this.ccode+"/"+this.bcode)}postCheque(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/Cheque/Post",e)}DeleteCheque(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/Cheque/Delete",e)}getChequeClosinglist(t){return this._http.get(this.apiBaseUrl+"api/Accounts/Cheque/ChequeList/"+this.ccode+"/"+this.bcode+"/"+t)}postOpenCloseCheque(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/Cheque/OpenClose",e)}getCashInHand(t){return this._http.get(this.apiBaseUrl+"api/Accounts/CashInHand/Get?companyCode="+this.ccode+"&branchCode="+this.bcode+"&date="+t)}postCashInHand(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/CashInHand/Post",e)}getPrintListJournalEntry(t){return this._http.get(this.apiBaseUrl+"api/Accounts/JournalEntry/PrintList/"+this.ccode+"/"+this.bcode+"/"+t)}reprintJournalEntry(t){return this._http.get(this.apiBaseUrl+"api/Accounts/JournalEntry/Print?companyCode="+this.ccode+"&branchCode="+this.bcode+"&voucherNo="+t[0].VoucherNo+"&accCodeMaster="+t[0].AccountCodeMaster+"&tranType="+t[0].TransType+"&accType="+t[0].AccountType)}getContraType(){return this._http.get(this.apiBaseUrl+"api/Accounts/ContraEntry/Type/"+this.ccode+"/"+this.bcode)}getContraLedger(t){return this._http.get(this.apiBaseUrl+"api/Accounts/ContraEntry/MasterLedger/"+this.ccode+"/"+this.bcode+"/"+t)}getContraEntryList(t,e){return this._http.get(this.apiBaseUrl+"api/Accounts/ContraEntry/list/"+this.ccode+"/"+this.bcode+"/"+t+"/"+e)}editGetContraEntry(t,e,n){return this._http.get(this.apiBaseUrl+"api/Accounts/ContraEntry/Voucher/"+this.ccode+"/"+this.bcode+"/"+t+"/"+e+"/"+n)}PutContraVoucher(t,e){const n=JSON.stringify(t);return this._http.put(this.apiBaseUrl+"api/Accounts/ContraEntry/Put?voucherNo="+e,n)}PostContraVoucher(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/ContraEntry/Post",e)}printContraEntry(t,e,n,r,o){return this._http.get(this.apiBaseUrl+"api/Accounts/ContraEntry/Print/"+this.ccode+"/"+this.bcode+"/"+t+"/"+e+"/"+n+"/"+r+"?tranType="+o)}getLedgerList(){return this._http.get(this.apiBaseUrl+"api/Accounts/Ledger/List/"+this.ccode+"/"+this.bcode)}getLedgerType(){return this._http.get(this.apiBaseUrl+"api/Accounts/Ledger/LedgerType/"+this.ccode+"/"+this.bcode)}getLedgerSubGroup(){return this._http.get(this.apiBaseUrl+"api/Accounts/Ledger/SubGroup/"+this.ccode+"/"+this.bcode)}getLedgerTransactionType(){return this._http.get(this.apiBaseUrl+"api/Accounts/Ledger/TransactionType/"+this.ccode+"/"+this.bcode)}getLedgerVType(){return this._http.get(this.apiBaseUrl+"api/Accounts/Ledger/VType/"+this.ccode+"/"+this.bcode)}getGSTGroup(){return this._http.get(this.apiBaseUrl+"api/Accounts/Ledger/GSTGroupCode/"+this.ccode+"/"+this.bcode)}getGSTServiceGroup(){return this._http.get(this.apiBaseUrl+"api/Accounts/Ledger/GSTServiceGroupCode/"+this.ccode+"/"+this.bcode)}getHSNbyGST(t){return this._http.get(this.apiBaseUrl+"api/Accounts/Ledger/HSNByGSTGroupCode/"+this.ccode+"/"+this.bcode+"/"+t)}getGroup(t){return this._http.get(this.apiBaseUrl+"api/Accounts/Ledger/Group/"+this.ccode+"/"+this.bcode+"/"+t)}getLedgerDetailsByID(t){return this._http.get(this.apiBaseUrl+"api/Accounts/Ledger/LedgerDetail/"+this.ccode+"/"+this.bcode+"/"+t)}PostLedger(t){const e=JSON.stringify(t);return this._http.post(this.apiBaseUrl+"api/Accounts/Ledger/Post",e)}PutLedger(t,e){const n=JSON.stringify(e);return this._http.put(this.apiBaseUrl+"api/Accounts/Ledger/Put?objID="+t,n)}PrintLedger(){return this._http.get(this.apiBaseUrl+"api/Accounts/Ledger/LedgerDetPrint/"+this.ccode+"/"+this.bcode)}};u.ctorParameters=()=>[{type:d.b},{type:h.a}],u=r.a([Object(o.Injectable)({providedIn:"root"}),r.c("design:paramtypes",[d.b,h.a])],u);var p=n("GUC0"),b=n.n(p),m=n("5eHb");let g=class{constructor(t,e,n,r){this.fb=t,this.service=e,this.toastr=n,this.appConfigService=r,this.ccode="",this.bcode="",this.EnableAdd=!0,this.EnableSave=!1,this.isDisabled=!1,this.CashSummaryHeader={CompanyCode:this.ccode,BranchCode:this.bcode,TxtSeqNo:0,VoucherSeqNo:0,VoucherNo:0,VoucherDate:null,AccountCode:null,AccountType:null,AccountCodeMaster:null,ApprovedBy:null,AuthorizedBy:null,AuthorizedDate:null,AuthorizedRemarks:null,CancelledBy:null,CancelledRemarks:null,ChequeDate:null,ChequeNo:null,CreditAmount:0,CurrencyType:null,CurrencyValue:null,ContraSeqNo:0,DebitAmount:0,ExchangeRate:0,FinalPeriod:0,FinalYear:0,Narration:null,NewVoucherNo:0,Partyname:null,ReceiptNo:null,ReconsileBy:null,ReconsileFlag:null,SectionID:null,TransType:null,Cflag:null,IsApproved:null,SubledgerAccCode:0,VerifiedBy:null,VerifiedRemarks:null,VoucherType:null},this.MasterLedger=[],this.TypeList=[],this.appDate=[],this.rpDate=[],this.ApplicationNameList=[],this.NarrationList=[],this.CashVoucherList=[],this.getList=[],this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=c.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(c.enc.Utf8),this.bcode=c.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(c.enc.Utf8)}ngOnInit(){this.getMasterLedger(),this.CashSummaryHeader.CompanyCode=this.ccode,this.CashSummaryHeader.BranchCode=this.bcode,this.getApplicationdate(),this.getType(),this.getNarrationList()}getMasterLedger(){this.service.GetMasterLedger().subscribe(t=>{this.MasterLedger=t})}getType(){this.service.gettype().subscribe(t=>{this.TypeList=t})}getApplicationdate(){this.service.getApplicationDate().subscribe(t=>{this.appDate=t,this.rpDate=this.appDate.applcationDate,this.CashSummaryHeader.VoucherDate=this.rpDate,this.CashSummaryHeader.ChequeDate=this.rpDate})}getAccountName(t){this.service.GetAccountNames(t).subscribe(t=>{this.ApplicationNameList=t})}getNarrationList(){this.service.GetNarration().subscribe(t=>{this.NarrationList=t})}getcashvouchertable(){this.service.getCashVoucherTable(this.CashSummaryHeader.TransType,this.CashSummaryHeader.AccountCodeMaster,this.rpDate).subscribe(t=>{this.CashVoucherList=t,console.log(this.CashVoucherList)})}Data(t){this.EnableAdd=!1,this.EnableSave=!0,this.isDisabled=!0,this.service.editGet(t.VoucherNo,t.AccCode,t.AccCodeMaster).subscribe(t=>{this.getList=t,this.CashSummaryHeader=this.getList,console.log(this.CashSummaryHeader)})}clear(){this.EnableAdd=!0,this.EnableSave=!1,this.isDisabled=!1,this.CashSummaryHeader.CreditAmount=0,this.CashSummaryHeader.DebitAmount=0,this.CashSummaryHeader.AccountCode=null,this.CashSummaryHeader.ReceiptNo=null,this.CashSummaryHeader.Narration=0}deleteField(t){this.CashSummaryHeader.CreditAmount=t.Credit,this.CashSummaryHeader.DebitAmount=t.Debit,this.CashSummaryHeader.AccountCode=t.AccCode,this.CashSummaryHeader.ReceiptNo=t.RefNo,this.CashSummaryHeader.Narration=t.Narration,this.CashSummaryHeader.VoucherNo=t.VoucherNo,confirm("Do you want to delete??")&&this.service.deleteCashVoucherDet(this.CashSummaryHeader).subscribe(t=>{b()("Deleted!","Cash Voucher Entry deleted successfully.","success"),this.getcashvouchertable(),this.clear()})}PostCashVoucher(){if(null==this.CashSummaryHeader.AccountCodeMaster)this.toastr.warning("Please select master ledger","Alert!");else if(null==this.CashSummaryHeader.TransType)this.toastr.warning("Please Select Type","Alert!");else if(null==this.CashSummaryHeader.AccountCode)this.toastr.warning("please select Account Name","Alert!");else if("PAY"==this.CashSummaryHeader.TransType&&0==this.CashSummaryHeader.DebitAmount)this.toastr.warning("Please enter Debit Amount","Alert!");else if("REC"==this.CashSummaryHeader.TransType&&0==this.CashSummaryHeader.CreditAmount)this.toastr.warning("Please enter Credit Amount","Alert!");else if(null==this.CashSummaryHeader.Narration)this.toastr.warning("Please select Narration","Alert!");else var t=confirm("Do you want to Save");t&&this.service.PostCashVoucher(this.CashSummaryHeader).subscribe(t=>{this.PostVoucher=t,console.log(this.PostVoucher),b()("success!","Added successfully","success"),this.getcashvouchertable(),this.service.print(this.PostVoucher.VoucherNo,this.PostVoucher.AccountCodeMaster,this.PostVoucher.TransType,this.PostVoucher.AccountType,this.PostVoucher.TransType).subscribe(t=>{this.PrintDetails=t,$("#ReprintCashVoucher").modal("show"),$("#DisplayData").html(this.PrintDetails)}),this.clear()})}PutCashVoucher(){if(null==this.CashSummaryHeader.AccountCodeMaster)this.toastr.warning("Please select master ledger","Alert!");else if(null==this.CashSummaryHeader.TransType)this.toastr.warning("Please Select Type","Alert!");else if(null==this.CashSummaryHeader.AccountCode)this.toastr.warning("please select Account Name","Alert!");else if("PAY"==this.CashSummaryHeader.TransType&&0==this.CashSummaryHeader.DebitAmount)this.toastr.warning("Please enter Debit Amount","Alert!");else if("REC"==this.CashSummaryHeader.TransType&&0==this.CashSummaryHeader.CreditAmount)this.toastr.warning("Please enter Credit Amount","Alert!");else if(null==this.CashSummaryHeader.Narration)this.toastr.warning("Please select Narration","Alert!");else var t=confirm("Do you want to Save");t&&this.service.PutCashVoucher(this.CashSummaryHeader,this.CashSummaryHeader.VoucherNo).subscribe(t=>{this.PostVoucher=t,b()("success!","Saved successfully","success"),this.getcashvouchertable(),this.clear()})}PrintVoucher(t){this.service.print(t.VoucherNo,t.AccCodeMaster,this.CashSummaryHeader.TransType,t.AccType,this.CashSummaryHeader.TransType).subscribe(t=>{this.PrintDetails=t,$("#ReprintCashVoucher").modal("show"),$("#DisplayData").html(this.PrintDetails)})}print(){let t,e;t=document.getElementById("DisplayData").innerHTML,e=window.open("","_blank","top=0,left=0,height=100%,width=auto"),e.document.open(),e.document.write(t),e.document.close()}changeLeagueOwner(t){this.CashSummaryHeader.Narration=t.Narration}};g.ctorParameters=()=>[{type:s.FormBuilder},{type:u},{type:m.b},{type:h.a}],g=r.a([Object(o.Component)({selector:"app-cash-voucher-entry",template:r.b(n("wIep")).default,styles:[r.b(n("YtRN")).default]}),r.c("design:paramtypes",[s.FormBuilder,u,m.b,h.a])],g);let y=class{constructor(t,e,n,r){this.accountsService=t,this.formBuilder=e,this.toastr=n,this.appConfigService=r,this.SubGroupType=[],this.SubGroupList=[],this.ccode="",this.bcode="",this.EnableAdd=!0,this.EnableSave=!1,this.SubGroupModel={ParentGroupName:"",ObjID:"",CompanyCode:"",BranchCode:"",GroupID:0,GroupName:"",GroupType:"A",Under:"",GroupDescription:"",IsTrading:"",ObjStatus:"",ParentGroupID:0,NewGroupCode:"",NewSubGroupCode:""},this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}ngOnInit(){this.getSubGroupType(),this.getSubGroupList(),this.SubGroupForm=this.formBuilder.group({GroupName:["",s.Validators.required],ParentGroupID:[0,s.Validators.required]})}getSubGroupType(){this.accountsService.getSubGroup().subscribe(t=>{this.SubGroupType=t})}getSubGroupList(){this.accountsService.getSubGroupList().subscribe(t=>{this.SubGroupList=t})}getCB(){this.ccode=c.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(c.enc.Utf8),this.bcode=c.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(c.enc.Utf8)}add(t){if(null==t.value.GroupName||""==t.value.GroupName)this.toastr.warning("Please enter sub-group name","Alert!");else if(null==t.value.ParentGroupID||""==t.value.ParentGroupID)this.toastr.warning("Please select group name","Alert!");else{this.SubGroupModel.CompanyCode=this.ccode,this.SubGroupModel.BranchCode=this.bcode,this.SubGroupModel.ObjStatus="O",confirm("Do you want to save??")&&this.accountsService.postSubGroup(this.SubGroupModel).subscribe(t=>{b()("Saved!","Sub-Group "+this.SubGroupModel.GroupName+" Saved","success"),this.getSubGroupList(),this.ClearValues()})}}save(t){if(null==t.value.GroupName||""==t.value.GroupName)this.toastr.warning("Please enter sub-group name","Alert!");else if(null==t.value.ParentGroupID||""==t.value.ParentGroupID)this.toastr.warning("Please select group name","Alert!");else{confirm("Do you want to save??")&&this.accountsService.putMasterGroup(this.SubGroupModel,this.SubGroupModel.ObjID).subscribe(t=>{b()("Updated!","Group "+this.SubGroupModel.GroupName+" Updated","success"),this.getSubGroupList(),this.ClearValues()})}}ClearValues(){this.SubGroupForm.reset(),this.EnableAdd=!0,this.EnableSave=!1,this.SubGroupModel={ParentGroupName:"",ObjID:"",CompanyCode:"",BranchCode:"",GroupID:0,GroupName:"",GroupType:"",Under:"",GroupDescription:"",IsTrading:"",ObjStatus:"",ParentGroupID:0,NewGroupCode:"",NewSubGroupCode:""}}clear(){this.SubGroupForm.reset()}editField(t){console.log(t),"C"==t.ObjStatus?b()("Warning!","Sub-Group: "+t.GroupName+" is closed","warning"):(this.EnableAdd=!1,this.EnableSave=!0,this.SubGroupModel=t)}openField(t){"O"==t.ObjStatus?b()("Warning!","Sub-Group: "+t.GroupName+" is already opened","warning"):confirm("Do you want to open Sub-Group: "+t.GroupName+"?")&&(t.ObjStatus="O",this.accountsService.putMasterGroup(t,t.ObjID).subscribe(e=>{b()("Opened!","Sub-Group: "+t.GroupName+" opened","success"),this.getSubGroupList()}))}closeField(t){"C"==t.ObjStatus?b()("Warning!","Sub-Group: "+t.GroupName+" is already closed","warning"):confirm("Do you want to close the Sub-Group?")&&(t.ObjStatus="C",this.accountsService.putMasterGroup(t,t.ObjID).subscribe(e=>{b()("Closed!","Sub-Group: "+t.GroupName+" closed","success"),this.getSubGroupList()}))}};y.ctorParameters=()=>[{type:u},{type:s.FormBuilder},{type:m.b},{type:h.a}],y=r.a([Object(o.Component)({selector:"app-sub-group",template:r.b(n("oVTU")).default,styles:[r.b(n("x8xV")).default]}),r.c("design:paramtypes",[u,s.FormBuilder,m.b,h.a])],y);let f=class{constructor(t,e,n,r){this.accountsService=t,this.formBuilder=e,this.toastr=n,this.appConfigService=r,this.MasterGroupType=[],this.MasterGroupList=[],this.GroupType="I",this.IsTrading="N",this.ccode="",this.bcode="",this.EnableAdd=!0,this.EnableSave=!1,this.chkchkbxchked=!1,this.MasterGroupModel={ObjID:"",CompanyCode:"",BranchCode:"",GroupID:0,GroupName:"",GroupType:"",Under:"",GroupDescription:"",IsTrading:"",ObjStatus:"",ParentGroupID:0,NewGroupCode:"",NewSubGroupCode:""},this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}ngOnInit(){this.getMasterGroupType(),this.getMasterGroupList(),this.MasterGroupForm=this.formBuilder.group({GroupName:["",s.Validators.required],GroupType:[null,s.Validators.required],IsTrading:["",s.Validators.required]})}getMasterGroupType(){this.accountsService.getMasterGroupType().subscribe(t=>{this.MasterGroupType=t})}getMasterGroupList(){this.accountsService.getMasterGroupList().subscribe(t=>{this.MasterGroupList=t})}getCB(){this.ccode=c.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(c.enc.Utf8),this.bcode=c.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(c.enc.Utf8)}add(t){if(null==t.value.GroupName||""==t.value.GroupName)this.toastr.warning("Please enter group name","Alert!");else if(null==t.value.GroupType||""==t.value.GroupType)this.toastr.warning("Please select group type","Alert!");else{this.MasterGroupModel.CompanyCode=this.ccode,this.MasterGroupModel.BranchCode=this.bcode,this.MasterGroupModel.ObjStatus="O",this.MasterGroupModel.GroupType=this.GroupType,confirm("Do you want to save??")&&this.accountsService.postMasterGroup(this.MasterGroupModel).subscribe(t=>{b()("Saved!","Group "+this.MasterGroupModel.GroupName+" Saved","success"),this.getMasterGroupList(),this.ClearValues()})}}save(t){if(null==t.value.GroupName||""==t.value.GroupName)this.toastr.warning("Please enter group name","Alert!");else if(null==t.value.GroupType||""==t.value.GroupType)this.toastr.warning("Please select group type","Alert!");else{confirm("Do you want to save??")&&this.accountsService.putMasterGroup(this.MasterGroupModel,this.MasterGroupModel.ObjID).subscribe(t=>{b()("Updated!","Group "+this.MasterGroupModel.GroupName+" Updated","success"),this.getMasterGroupList(),this.ClearValues()})}}ClearValues(){this.MasterGroupForm.reset(),this.EnableAdd=!0,this.EnableSave=!1,this.MasterGroupModel={ObjID:"",CompanyCode:"",BranchCode:"",GroupID:0,GroupName:"",GroupType:"",Under:"",GroupDescription:"",IsTrading:"",ObjStatus:"",ParentGroupID:0,NewGroupCode:"",NewSubGroupCode:""}}clear(){this.MasterGroupForm.reset()}chngGroupName(t){this.GroupType=t.value.GroupType,this.chkchkbxchked=!1}chkbxchng(t){t.target.checked?this.MasterGroupModel.IsTrading="Y":this.MasterGroupModel.IsTrading="N"}editField(t){"C"==t.ObjStatus?b()("Warning!",t.GroupName+" is closed","warning"):(this.EnableAdd=!1,this.EnableSave=!0,this.MasterGroupModel=t,"Y"==this.MasterGroupModel.IsTrading?this.chkchkbxchked=!0:this.chkchkbxchked=!1)}openField(t){"O"==t.ObjStatus?b()("Warning!","Group: "+t.GroupName+" is already opened","warning"):confirm("Do you want to open Group: "+t.GroupName+"?")&&(t.ObjStatus="O",this.accountsService.putMasterGroup(t,t.ObjID).subscribe(e=>{b()("Opened!","Group ("+t.GroupID+"): "+t.GroupName+" is opened","success"),this.getMasterGroupList()}))}closeField(t){"C"==t.ObjStatus?b()("Warning!","Group: "+t.GroupName+" is already closed","warning"):confirm("Do you want to close the group?")&&(t.ObjStatus="C",this.accountsService.putMasterGroup(t,t.ObjID).subscribe(e=>{b()("Closed!","Group: "+t.GroupName+" closed","success"),this.getMasterGroupList()}))}};f.ctorParameters=()=>[{type:u},{type:s.FormBuilder},{type:m.b},{type:h.a}],f=r.a([Object(o.Component)({selector:"app-master-group",template:r.b(n("g/Jk")).default,styles:[r.b(n("qaPn")).default]}),r.c("design:paramtypes",[u,s.FormBuilder,m.b,h.a])],f);let C=class{constructor(t,e,n){this.accountService=t,this.formBuilder=e,this.appConfigService=n,this.LedgerList=[],this.LedgerType=[],this.SubGroup=[],this.TransactionType=[],this.disabled=!1,this.VType=[],this.GSTGroup=[],this.GSTServiceGroup=[],this.EnableDisableODLimit=!1,this.HSNSAC=[],this.ccode="",this.bcode="",this.LedgerCategory=[{Name:"CASH",Value:"C"},{Name:"BANK",Value:"B"},{Name:"OTHER",Value:"O"},{Name:"CCARD",Value:"R"}],this.BalanceType=[{Name:"CR",Value:"C"},{Name:"DR",Value:"D"}],this.ledgerModel={ObjID:null,CompanyCode:null,BranchCode:null,AccCode:0,AccName:null,AccType:null,GroupID:0,OpeBal:0,OpnBalType:null,CustID:0,PartyCode:null,GSCode:null,ObjStatus:null,GSSeqNo:0,SchemeCode:null,VATID:null,OdLimit:0,UpdateOn:null,JFlag:null,PANCard:null,TIN:null,LedgerType:null,Address1:null,Address2:null,Address3:null,City:null,State:null,District:null,Country:null,PinCode:null,Phone:null,Mobile:null,FaxNo:null,WebSite:null,CSTNo:null,BudgetAmt:0,TDSID:0,EmailID:null,HSN:null,GSTGoodsGroupCode:null,GSTServicesGroupCode:null,StateCode:0,VTYPE:null,UniqRowID:null,TransType:null,IsAutomatic:null,Schedule_Name:null,NewAccCode:null,PartyACNo:null,PartyACName:null,PartyMICR_No:null,PartyBankName:null,PartyBankBranch:null,PartyBankAddress:null,PartyRTGScode:null,PartyNEFTcode:null,PartyIFSCcode:null,swiftcode:null},this.PrintDetails=[],this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}ngOnInit(){this.getLedgerList(),this.LedgerEntryForm=this.formBuilder.group({ObjID:["",s.Validators.required],CompanyCode:["",s.Validators.required],BranchCode:["",s.Validators.required],AccCode:["",s.Validators.required],AccName:["",s.Validators.required],AccType:["",s.Validators.required],GroupName:["",s.Validators.required],GroupID:["",s.Validators.required],OpeBal:["",s.Validators.required],OpnBalType:["",s.Validators.required],CustID:["",s.Validators.required],PartyCode:["",s.Validators.required],GSCode:["",s.Validators.required],ObjStatus:["",s.Validators.required],GSSeqNo:["",s.Validators.required],SchemeCode:["",s.Validators.required],VATID:["",s.Validators.required],OdLimit:["",s.Validators.required],UpdateOn:["",s.Validators.required],JFlag:["",s.Validators.required],PANCard:["",s.Validators.required],TIN:["",s.Validators.required],LedgerType:["",s.Validators.required],Address1:["",s.Validators.required],Address2:["",s.Validators.required],Address3:["",s.Validators.required],City:["",s.Validators.required],State:["",s.Validators.required],District:["",s.Validators.required],Country:["",s.Validators.required],PinCode:["",s.Validators.required],Phone:["",s.Validators.required],Mobile:["",s.Validators.required],FaxNo:["",s.Validators.required],WebSite:["",s.Validators.required],CSTNo:["",s.Validators.required],BudgetAmt:["",s.Validators.required],TDSID:["",s.Validators.required],EmailID:["",s.Validators.required],HSN:["",s.Validators.required],GSTGoodsGroupCode:["",s.Validators.required],GSTServicesGroupCode:["",s.Validators.required],StateCode:["",s.Validators.required],VTYPE:["",s.Validators.required],UniqRowID:["",s.Validators.required],TransType:["",s.Validators.required],IsAutomatic:["",s.Validators.required],Schedule_Name:["",s.Validators.required],NewAccCode:["",s.Validators.required],PartyACNo:["",s.Validators.required],PartyACName:["",s.Validators.required],PartyMICR_No:["",s.Validators.required],PartyBankName:["",s.Validators.required],PartyBankBranch:["",s.Validators.required],PartyBankAddress:["",s.Validators.required],PartyRTGScode:["",s.Validators.required],PartyNEFTcode:["",s.Validators.required],PartyIFSCcode:["",s.Validators.required],swiftcode:["",s.Validators.required]})}getCB(){this.ccode=c.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(c.enc.Utf8),this.bcode=c.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(c.enc.Utf8)}getLedgerList(){this.accountService.getLedgerList().subscribe(t=>{this.LedgerList=t})}Add(){this.ledgerModel={ObjID:null,CompanyCode:null,BranchCode:null,AccCode:0,AccName:null,AccType:null,GroupID:0,OpeBal:0,OpnBalType:null,CustID:0,PartyCode:null,GSCode:null,ObjStatus:null,GSSeqNo:0,SchemeCode:null,VATID:null,OdLimit:0,UpdateOn:null,JFlag:null,PANCard:null,TIN:null,LedgerType:null,Address1:null,Address2:null,Address3:null,City:null,State:null,District:null,Country:null,PinCode:null,Phone:null,Mobile:null,FaxNo:null,WebSite:null,CSTNo:null,BudgetAmt:0,TDSID:0,EmailID:null,HSN:null,GSTGoodsGroupCode:null,GSTServicesGroupCode:null,StateCode:0,VTYPE:null,UniqRowID:null,TransType:null,IsAutomatic:null,Schedule_Name:null,NewAccCode:null,PartyACNo:null,PartyACName:null,PartyMICR_No:null,PartyBankName:null,PartyBankBranch:null,PartyBankAddress:null,PartyRTGScode:null,PartyNEFTcode:null,PartyIFSCcode:null,swiftcode:null},this.LedgerEntryForm.reset(),$("#Ledger").modal("show"),this.getLedgerType(),this.getSubGroup(),this.getLedgerTransactionType(),this.getLedgerVType(),this.getGSTGroup(),this.getGSTServiceGroup(),this.disabled=!1}getLedgerType(){this.accountService.getLedgerType().subscribe(t=>{this.LedgerType=t})}getSubGroup(){this.accountService.getLedgerSubGroup().subscribe(t=>{this.SubGroup=t})}getLedgerTransactionType(){this.accountService.getLedgerTransactionType().subscribe(t=>{this.TransactionType=t})}getGSTGroup(){this.accountService.getGSTGroup().subscribe(t=>{this.GSTGroup=t})}getLedgerVType(){this.accountService.getLedgerVType().subscribe(t=>{this.VType=t})}getGSTServiceGroup(){this.accountService.getGSTServiceGroup().subscribe(t=>{this.GSTServiceGroup=t})}getHsnSac(t){this.accountService.getHSNbyGST(t).subscribe(t=>{this.HSNSAC=t})}openField(t){this.ledgerModel.CompanyCode=this.ccode,this.ledgerModel.BranchCode=this.bcode,this.ledgerModel.JFlag="",this.accountService.getLedgerDetailsByID(t.AccountCode).subscribe(e=>{(this.LedgerDets=e,this.ledgerModel=this.LedgerDets,"O"==this.ledgerModel.ObjStatus)?b()("Warning!","Ledger: "+this.ledgerModel.AccName+" is already opened","warning"):confirm("Do you want to open the Ledger: "+this.ledgerModel.AccName+"?")&&(this.ledgerModel.ObjStatus="O",this.accountService.PutLedger(t.obj_id,this.ledgerModel).subscribe(t=>{b()("Saved!","Ledger: "+this.ledgerModel.AccName+" Opened","success"),this.getLedgerList()}))})}closeField(t){this.ledgerModel.CompanyCode=this.ccode,this.ledgerModel.BranchCode=this.bcode,this.ledgerModel.JFlag="",this.accountService.getLedgerDetailsByID(t.AccountCode).subscribe(e=>{(this.LedgerDets=e,this.ledgerModel=this.LedgerDets,"C"==this.ledgerModel.ObjStatus)?b()("Warning!","Ledger: "+this.ledgerModel.AccName+" is already closed","warning"):confirm("Do you want to close the Ledger: "+this.ledgerModel.AccName+"?")&&(this.ledgerModel.ObjStatus="C",this.accountService.PutLedger(t.obj_id,this.ledgerModel).subscribe(t=>{b()("Saved!","Ledger: "+this.ledgerModel.AccName+" Closed","success"),this.getLedgerList()}))})}editField(t){this.disabled=!0,this.getLedgerType(),this.getSubGroup(),this.getLedgerTransactionType(),this.getLedgerVType(),this.getGSTGroup(),this.getGSTServiceGroup(),this.accountService.getLedgerDetailsByID(t).subscribe(t=>{this.LedgerDets=t,this.ledgerModel=this.LedgerDets,"C"==this.ledgerModel.ObjStatus?(b()("Warning!",this.ledgerModel.AccName+" ( "+this.ledgerModel.AccCode+" ) is closed.","warning"),$("#Ledger").modal("hide")):($("#Ledger").modal("show"),null!=this.ledgerModel.GroupID&&this.GetGroup(this.ledgerModel.GroupID),null!=this.ledgerModel.GSTGoodsGroupCode&&this.getHsnSac(this.ledgerModel.GSTGoodsGroupCode))})}GetGroup(t){this.accountService.getGroup(t).subscribe(t=>{this.GroupId=t,this.GroupName=this.GroupId.Group})}EnableOD(){"B"==this.ledgerModel.AccType?this.EnableDisableODLimit=!0:this.EnableDisableODLimit=!1}Save(){if(null==this.ledgerModel.LedgerType)alert("Please select the Ledger Type.");else if(null==this.ledgerModel.AccName)alert("Please enter the Ledger Name.");else if(null==this.ledgerModel.AccType)alert("Please select the Ledger Category.");else if(null==this.ledgerModel.OpnBalType)alert("Please select the Balance Type.");else{this.ledgerModel.CompanyCode=this.ccode,this.ledgerModel.BranchCode=this.bcode,this.ledgerModel.JFlag="",this.ledgerModel.ObjStatus="O",confirm("Do you want to save details?")&&(null==this.ledgerModel.ObjID?this.accountService.PostLedger(this.ledgerModel).subscribe(t=>{$("#Ledger").modal("hide"),this.LedgerEntryForm.reset(),this.getLedgerList()}):this.accountService.PutLedger(this.ledgerModel.ObjID,this.ledgerModel).subscribe(t=>{$("#Ledger").modal("hide"),this.LedgerEntryForm.reset(),this.getLedgerList()}))}}getHtmlPrint(){this.accountService.PrintLedger().subscribe(t=>{this.PrintDetails=t,$("#ReprintModal").modal("show"),$("#DisplayData").html(this.PrintDetails)})}print(){let t,e;t=document.getElementById("DisplayData").innerHTML,e=window.open("","_blank","top=0,left=0,height=100%,width=auto"),e.document.open(),e.document.write(`\n      <html>\n        <head>\n          <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">\n          <title>Print tab</title>\n          <style>\n         .htmlPrint{display:none;}\n\n          @media print {\n            .table-bordered\n        {\n            border-style: solid;\n            border: 3px solid rgb(0, 0, 0);\n        }\n        .margin{\n          margin-top:-24px;\n        }\n        .mb{\n          vertical-align:middle;position:absolute;\n        }\n        tr.spaceUnder>td {\n          padding-bottom: 40px !important;\n        }\n        .top {\n          margin-top:10px;\n          border-bottom: 3px solid rgb(0, 0, 0) !important;\n          line-height: 1.6;\n        }\n        .modal-content{\n          font-family: "Times New Roman", Times, serif;\n\n        }\n       .padding-top {\n         padding-top:20px;\n       }\n        .watermark{\n          -webkit-transform: rotate(331deg);\n          -moz-transform: rotate(331deg);\n          -o-transform: rotate(331deg);\n          transform: rotate(331deg);\n          font-size: 15em;\n          color: rgba(255, 5, 5, 0.37);\n          position: absolute;\n          text-transform:uppercase;\n          padding-left: 10%;\n          margin-top:-10px;\n        }\n        .right{\n          text-align:left;\n        }\n        .px-2 {\n          padding-left: 10px !important;\n        }\n        thead > tr\n        {\n            border-style: solid;\n            border: 3px solid rgb(0, 0, 0);\n        }\n        table tr td.classname{\n          border-right: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr td.bottom{\n          border-bottom: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr th.classname{\n          border-right: 3px solid rgb(0, 0, 0) !important;\n        }\n        .divborder {\n          border-right: 3px solid rgb(0, 0, 0) !important;\n          line-height: 1.6;\n        }\n        .lastdivborder{\n          line-height: 1.6;\n        }\n    .border{\n      border-right: 3px solid rgb(0, 0, 0) !important;\n      border-bottom: 3px solid rgb(0, 0, 0) !important;\n    }\n\n    .tdborder{\n      border-right: 3px solid rgb(0, 0, 0) !important;\n    }\n        .invoice {\n          margin-top: 250px;\n      }\n        .card{\n          border-style: solid;\n          border-width: 5px;\n          border: 3px solid rgb(0, 0, 0);\n      }\n        .printMe {\n          display: none !important;\n        }\n      }\n      body{\n            font-size: 15px;\n            line-height: 18px;\n      }\n </style>\n        </head>\n    <body onload="window.print();window.close()">\n    ${t}</body>\n      </html>`),e.document.close()}};C.ctorParameters=()=>[{type:u},{type:s.FormBuilder},{type:h.a}],C=r.a([Object(o.Component)({selector:"app-ledger",template:r.b(n("E+DD")).default,styles:[r.b(n("b7L2")).default]}),r.c("design:paramtypes",[u,s.FormBuilder,h.a])],C);let v=class{constructor(t,e,n,r){this.accountsService=t,this.formBuilder=e,this.toastr=n,this.appConfigService=r,this.NarrationList=[],this.ccode="",this.bcode="",this.NarrationModel={ObjID:"",CompanyCode:this.ccode,BranchCode:this.bcode,NarrID:0,Narration:""},this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB(),this.NarrationModel={ObjID:"",CompanyCode:this.ccode,BranchCode:this.bcode,NarrID:0,Narration:""}}ngOnInit(){this.getNarrationList(),this.NarrationForm=this.formBuilder.group({NarrID:["",s.Validators.required],Narration:[null,s.Validators.required]})}getNarrationList(){this.accountsService.getNarrationList().subscribe(t=>{this.NarrationList=t})}getCB(){this.ccode=c.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(c.enc.Utf8),this.bcode=c.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(c.enc.Utf8)}add(t){null==t.value.Narration||""==t.value.Narration?this.toastr.warning("Please enter narration","Alert!"):confirm("Do you want to save??")&&this.accountsService.postNarration(this.NarrationModel).subscribe(t=>{b()("Saved!","Narration saved successfully.","success"),this.getNarrationList(),this.ClearValues()})}ClearValues(){this.NarrationForm.reset(),this.NarrationModel={ObjID:"",CompanyCode:"",BranchCode:"",NarrID:0,Narration:""}}deleteField(t){this.NarrationModel=t,confirm("Do you want to delete??")&&this.accountsService.deleteNarration(this.NarrationModel).subscribe(t=>{b()("Deleted!","Narration deleted successfully.","success"),this.getNarrationList(),this.ClearValues()})}clear(){this.NarrationForm.reset()}};v.ctorParameters=()=>[{type:u},{type:s.FormBuilder},{type:m.b},{type:h.a}],v=r.a([Object(o.Component)({selector:"app-narration",template:r.b(n("UAMs")).default,styles:[r.b(n("Chaw")).default]}),r.c("design:paramtypes",[u,s.FormBuilder,m.b,h.a])],v);let N=class{constructor(t,e,n,r){this.AccountsService=t,this.formBuilder=e,this.toastr=n,this.appConfigService=r,this.ccode="",this.bcode="",this.ChequeModel={ObjID:"",CompanyCode:"",BranchCode:"",AccCode:0,ChqNo:0,NoOfChqs:0,ChqStartNo:0,ChqEndNo:0,ChqIssueDate:null,ChqIssued:"",ChqClosed:"",ChqClosedBy:"",ChqClosedRemarks:"",MaxAmount:0},this.ChequeList=[],this.MasterLedgerList=[],this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}ngOnInit(){this.getChequeData(),this.getMasterLedgerList(),this.getApplicationdate(),this.ChequeForm=this.formBuilder.group({AccCode:[0,s.Validators.required],NoOfCheques:[0,s.Validators.required],ChqStart:[0,s.Validators.required],ChqEnd:[0,s.Validators.required],MaxAmount:[0,s.Validators.required]})}getCB(){this.ccode=c.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(c.enc.Utf8),this.bcode=c.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(c.enc.Utf8)}getChequeData(){this.AccountsService.getChequelist().subscribe(t=>{this.ChequeList=t})}DeleteRow(t){confirm("Do you want to delete")&&(this.ChequeModel.CompanyCode=this.ccode,this.ChequeModel.BranchCode=this.bcode,this.ChequeModel.AccCode=t.AccCode,this.ChequeModel.NoOfChqs=t.Nos,this.ChequeModel.ChqStartNo=t.StartNo,this.ChequeModel.ChqEndNo=t.EndNo,this.ChequeModel.MaxAmount=t.MaxAmt,this.ChequeModel.ChqIssueDate=this.voucherDate,this.AccountsService.DeleteCheque(this.ChequeModel).subscribe(t=>{b()("Deleted!","Cheque details deleted successfully.","success"),this.getChequeData(),this.clear()}))}add(t){if(null==t.value.AccCode||0==t.value.AccCode)this.toastr.warning("Please select the bank.","Alert!");else if(null==t.value.NoOfCheques||0==t.value.NoOfCheques)this.toastr.warning("Please enter the valid no of cheques","Alert!");else if(null==t.value.ChqStart||0==t.value.ChqStart)this.toastr.warning("Please enter the valid cheque no","Alert!");else{this.ChequeModel.CompanyCode=this.ccode,this.ChequeModel.BranchCode=this.bcode,this.ChequeModel.ChqIssueDate=this.voucherDate,confirm("Do you want to save??")&&this.AccountsService.postCheque(this.ChequeModel).subscribe(t=>{b()("Saved!","Saved successfully","success"),this.getChequeData(),this.clear()})}}getApplicationdate(){this.AccountsService.getApplicationDate().subscribe(t=>{let e=t.applcationDate;this.voucherDate=e})}clear(){this.ChequeModel={ObjID:"",CompanyCode:"",BranchCode:"",AccCode:0,ChqNo:0,NoOfChqs:0,ChqStartNo:0,ChqEndNo:0,ChqIssueDate:null,ChqIssued:"",ChqClosed:"",ChqClosedBy:"",ChqClosedRemarks:"",MaxAmount:0}}getMasterLedgerList(){this.AccountsService.getMasterLedgerList().subscribe(t=>{this.MasterLedgerList=t})}calcChqEndNo(){this.ChequeModel.ChqEndNo=Number(this.ChequeModel.ChqStartNo-1)+Number(this.ChequeModel.NoOfChqs)}};N.ctorParameters=()=>[{type:u},{type:s.FormBuilder},{type:m.b},{type:h.a}],N=r.a([Object(o.Component)({selector:"app-cheque-entry",template:r.b(n("KHTg")).default,styles:[r.b(n("XRoq")).default]}),r.c("design:paramtypes",[u,s.FormBuilder,m.b,h.a])],N);let A=class{constructor(t,e,n){this._accountsService=t,this.toastr=e,this.router=n,this.model={option:"Journal"},this.modelvoucher={option:"Cash"},this.TransType="",this.CashType="",this.BankType="",this.VoucherNo=0,this.DataList=[],this.PaymentType=[],this.CashTypeList=[],this.MasterLedgerList=[],this.radioItems=["Journal","Contra","Voucher"],this.VoucherItems=["Cash","Bank"]}ngOnInit(){this.getPaymentType(),this.getCashTypeList(),this.getMasterLedgerList()}OnRadioBtnChnge(t){this.model.option=t}OnVoucherRadioBtnChnge(t){this.modelvoucher.option=t}getVoucherDets(t){""==t||null==t?this.toastr.warning("Please enter the voucher number.","Alert!"):(this.VoucherNo=t,"Journal"==this.model.option?this._accountsService.getJournalEntryDetails(t).subscribe(t=>{this.DataList=t}):"Contra"==this.model.option?this._accountsService.getContraDetails(t).subscribe(t=>{this.DataList=t,console.log(this.DataList)}):"Voucher"==this.model.option&&(""==this.TransType?this.toastr.warning("Please select the type.","Alert!"):"Cash"==this.modelvoucher.option?""==this.CashType?this.toastr.warning("Please select the cash.","Alert!"):this._accountsService.getCashVoucherForCancel(this.VoucherNo,this.CashType,this.TransType).subscribe(t=>{this.DataList=t}):"Bank"==this.modelvoucher.option&&(""==this.BankType?this.toastr.warning("Please select the bank.","Alert!"):this._accountsService.getBankVoucherDetailsForCancel(this.VoucherNo,this.BankType,this.TransType).subscribe(t=>{this.DataList=t}))))}getPaymentType(){this._accountsService.getPaymentType().subscribe(t=>{this.PaymentType=t})}getCashTypeList(){this._accountsService.getCashType().subscribe(t=>{this.CashTypeList=t})}getMasterLedgerList(){this._accountsService.getMasterLedgerList().subscribe(t=>{this.MasterLedgerList=t})}GetTransType(t){this.TransType=t}GetCashType(t){this.CashType=t}GetBankType(t){this.BankType=t}cancel(t){""==t||null==t?this.toastr.warning("Please enter the cancel remarks.","Alert!"):confirm("Do you want to cancel")&&("Journal"==this.model.option?(this.DataList[0].CancelledRemarks=t,this.DataList[0].CancelledBy=localStorage.getItem("Login"),this._accountsService.cancelJournalEntry(this.DataList).subscribe(t=>{b()("Cancelled!","Voucher no "+this.VoucherNo+" Cancelled successfully.","success")})):"Contra"==this.model.option?(this.DataList.CancelledRemarks=t,this.DataList.CancelledBy=localStorage.getItem("Login"),this._accountsService.cancelContraEntry(this.DataList).subscribe(t=>{b()("Cancelled!","Voucher no "+this.VoucherNo+" Cancelled successfully.","success")})):"Voucher"==this.model.option&&("Bank"==this.modelvoucher.option?(this.DataList[0].CancelledRemarks=t,this.DataList[0].CancelledBy=localStorage.getItem("Login"),this._accountsService.deleteBankVoucherEntry(this.DataList).subscribe(t=>{b()("Cancelled!","Voucher no "+this.VoucherNo+" Cancelled successfully.","success")})):"Cash"==this.modelvoucher.option&&(this.DataList.CancelledRemarks=t,this.DataList.CancelledBy=localStorage.getItem("Login"),this._accountsService.deleteCashVoucherDet(this.DataList).subscribe(t=>{b()("Cancelled!","Voucher no "+this.VoucherNo+" Cancelled successfully.","success")}))),this.router.navigateByUrl("/redirect",{skipLocationChange:!0}).then(()=>this.router.navigate(["/accounts/voucher-cancel"])))}};A.ctorParameters=()=>[{type:u},{type:m.b},{type:i.c}],A=r.a([Object(o.Component)({selector:"app-voucher-cancel",template:r.b(n("4Egk")).default,styles:[r.b(n("7CJy")).default]}),r.c("design:paramtypes",[u,m.b,i.c])],A);let S=class{constructor(t,e,n){this.AccountsService=t,this.toastr=e,this.appConfigService=n,this.ccode="",this.bcode="",this.ChequeModel={ObjID:"",CompanyCode:"",BranchCode:"",AccCode:0,ChqNo:0,NoOfChqs:0,ChqStartNo:0,ChqEndNo:0,ChqIssueDate:null,ChqIssued:"",ChqClosed:"",ChqClosedBy:"",ChqClosedRemarks:"",MaxAmount:0},this.MasterLedgerList=[],this.ChequeList=[],this.BankCode=0,this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}ngOnInit(){this.getMasterLedgerList(),this.getApplicationdate(),$("#ChqClosing").modal("hide")}getCB(){this.ccode=c.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(c.enc.Utf8),this.bcode=c.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(c.enc.Utf8)}getApplicationdate(){this.AccountsService.getApplicationDate().subscribe(t=>{let e=t.applcationDate;this.voucherDate=e})}getMasterLedgerList(){this.AccountsService.getMasterLedgerList().subscribe(t=>{this.MasterLedgerList=t})}getChqList(t){this.AccountsService.getChequeClosinglist(t).subscribe(e=>{this.ChequeList=e,this.BankCode=t})}open(t){"O"==t.ChqStatus?this.toastr.warning("Cheque no : "+t.ChequeNo+" is already open","Alert!"):confirm("Do you want to open cheque no = "+t.ChequeNo+" ?")&&(this.ChequeModel.ChqNo=t.ChequeNo,this.ChequeModel.CompanyCode=this.ccode,this.ChequeModel.BranchCode=this.bcode,this.ChequeModel.ChqIssueDate=this.voucherDate,this.ChequeModel.ChqClosedRemarks="",this.ChequeModel.ChqClosed="N",this.ChequeModel.ChqClosedBy=localStorage.getItem("Login"),this.AccountsService.postOpenCloseCheque(this.ChequeModel).subscribe(t=>{b()("Opened!","Cheque opened successfully.","success"),this.getChqList(this.BankCode)}))}close(t){"C"==t.ChqStatus?this.toastr.warning("Cheque no : "+t.ChequeNo+" is already closed","Alert!"):confirm("Do you want to close cheque no = "+t.ChequeNo+" ?")&&(this.ChequeModel.ChqNo=t.ChequeNo,this.ChequeModel.CompanyCode=this.ccode,this.ChequeModel.BranchCode=this.bcode,this.ChequeModel.ChqIssueDate=this.voucherDate,this.ChequeModel.ChqClosed="Y",this.ChequeModel.ChqClosedRemarks=t.ClosedRemarks,this.ChequeModel.ChqClosedBy=localStorage.getItem("Login"),$("#ChqClosing").modal("show"))}SaveRemaks(t){this.ChequeModel.ChqClosedRemarks=t,this.AccountsService.postOpenCloseCheque(this.ChequeModel).subscribe(t=>{b()("Closed!","Cheque closed successfully.","success"),this.getChqList(this.BankCode)}),$("#ChqClosing").modal("hide")}Cancel(){$("#ChqClosing").modal("hide"),this.ChequeModel={ObjID:"",CompanyCode:"",BranchCode:"",AccCode:0,ChqNo:0,NoOfChqs:0,ChqStartNo:0,ChqEndNo:0,ChqIssueDate:null,ChqIssued:"",ChqClosed:"",ChqClosedBy:"",ChqClosedRemarks:"",MaxAmount:0}}};S.ctorParameters=()=>[{type:u},{type:m.b},{type:h.a}],S=r.a([Object(o.Component)({selector:"app-cheque-closing",template:r.b(n("DGF2")).default,styles:[r.b(n("9G4G")).default]}),r.c("design:paramtypes",[u,m.b,h.a])],S);var x=n("eya4");let L=class{constructor(t,e,n,r,o,s){this._masterService=t,this.AccountsService=e,this.formBuilder=n,this.toastr=r,this.Router=o,this.appConfigService=s,this.today=new Date,this.ordDate="",this.ccode="",this.bcode="",this.CashInHandModel={ObjID:"",BranchCode:"",CompanyCode:"",SlNo:0,CashBalance:0,CashInHand:0,BillDate:0,FinYear:0},this.ordDate=Object(a.formatDate)(this.today,"MM-DD-YYYY","en-US","+0530"),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB(),this.datePickerConfig=Object.assign({},{containerClass:"theme-dark-blue",showWeekNumbers:!1,maxDate:new Date(2020,7,28),dateInputFormat:"YYYY-MM-DD"})}ngOnInit(){this.getApplicationDate(),this.CashInHandForm=this.formBuilder.group({CashBalance:["",s.Validators.required],CashInHand:[0,s.Validators.required]})}getCB(){this.ccode=c.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(c.enc.Utf8),this.bcode=c.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(c.enc.Utf8)}getApplicationDate(){this._masterService.getApplicationDate().subscribe(t=>{this.appDate=t,this.applicationDate=Object(a.formatDate)(this.appDate.applcationDate,"dd/MM/yyyy","en_GB"),this.getCashDetails(this.appDate.applcationDate)})}getCashDetails(t){this.AccountsService.getCashInHand(t).subscribe(t=>{this.CashDetails=t,this.CashInHandModel.CompanyCode=this.ccode,this.CashInHandModel.BranchCode=this.bcode,this.CashInHandModel.BillDate=this.appDate.applcationDate,this.CashInHandModel.CashBalance=this.CashDetails[0].C2})}Save(){if(null==this.CashInHandModel.CashInHand||0==this.CashInHandModel.CashInHand)alert("Please enter cash in hand?");else if(this.CashInHandModel.CashInHand>this.CashInHandModel.CashBalance)alert("Cash in hand should not exceed cash balance?");else{confirm("Do you want to save??")&&this.AccountsService.postCashInHand(this.CashInHandModel).subscribe(t=>{b()("Saved!","Cash In Hand saved successfully.","success"),this.Router.navigateByUrl("/redirect",{skipLocationChange:!0}).then(()=>this.Router.navigate(["/accounts/cash-in-hand"]))})}}exit(){this.Router.navigate(["/dashboard"])}CalDifference(){this.cashDifference=Number(this.CashInHandModel.CashBalance-this.CashInHandModel.CashInHand).toFixed(2)}};L.ctorParameters=()=>[{type:x.a},{type:u},{type:s.FormBuilder},{type:m.b},{type:i.c},{type:h.a}],L=r.a([Object(o.Component)({selector:"app-cash-in-hand",template:r.b(n("+SIy")).default,styles:[r.b(n("uHHy")).default]}),r.c("design:paramtypes",[x.a,u,s.FormBuilder,m.b,i.c,h.a])],L);let D=class{constructor(t,e){this._masterService=t,this._accountsService=e,this.today=new Date,this.ordDate="",this.ordDate=Object(a.formatDate)(this.today,"MM-DD-YYYY","en-US","+0530"),this.datePickerConfig=Object.assign({},{containerClass:"theme-dark-blue",showWeekNumbers:!1,maxDate:new Date(2020,7,28),dateInputFormat:"YYYY-MM-DD"})}ngOnInit(){this.getApplicationDate()}getApplicationDate(){this._masterService.getApplicationDate().subscribe(t=>{let e=t;this.applicationDate=Object(a.formatDate)(e.applcationDate,"dd/MM/yyyy","en_GB")})}UpdateAccounts(){confirm("Do you want to update accounts??")&&this._accountsService.updateAccounts(this.applicationDate).subscribe(t=>{this.output=t,b()("Updated!","Updated Successfully","success")})}};D.ctorParameters=()=>[{type:x.a},{type:u}],D=r.a([Object(o.Component)({selector:"app-accounts-update",template:r.b(n("v+Yy")).default,styles:[r.b(n("ozl1")).default]}),r.c("design:paramtypes",[x.a,u])],D);var T=n("3TGi");let w=class{constructor(t,e,n,r){this.accountservice=t,this.toastr=e,this._paymentService=n,this.appConfigService=r,this.ccode="",this.bcode="",this.today=new Date,this.EnableAdd=!0,this.EnableSave=!1,this.AccountMaster=0,this.TransType=null,this.BankVoucherEntryHeader={CompanyCode:this.ccode,BranchCode:this.bcode,TxtSeqNo:0,VoucherSeqNo:0,VoucherNo:0,AccountCode:0,AccountType:null,DebitAmount:0,CreditAmount:0,ChequeNo:null,ChequeDate:null,FinalPeriod:0,FinalYear:0,AccountCodeMaster:null,Narration:null,ReceiptNo:null,TransType:null,ApprovedBy:null,CancelledBy:null,CancelledRemarks:null,Partyname:null,VoucherType:null,ReconsileBy:null,CurrencyType:null,NewVoucherNo:0,SectionID:null,VerifiedBy:null,VerifiedRemarks:null,AuthorizedBy:null,AuthorizedRemarks:null,CurrencyValue:null,ExchangeRate:0,ContraSeqNo:0,ReconsileFlag:null,Cflag:null,IsApproved:null,SubledgerAccCode:0},this.MasterLedger=[],this.ChequeNo=[],this.BankVoucherList=[],this.BankVoucherFinalJsonList=[],this.MasterLedgerCode=0,this.NarrationList=[],this.MasterLedgerList=[],this.PaymentType=[],this.PaymentFlag="",this.EnableCredit=!0,this.EnableDebit=!0,this.VoucherDetails=[],this.index=0,this.datePickerConfig=Object.assign({},{containerClass:"theme-dark-blue",showWeekNumbers:!1,maxDate:this.today,dateInputFormat:"DD/MM/YYYY"}),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=c.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(c.enc.Utf8),this.bcode=c.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(c.enc.Utf8)}ngOnInit(){this.getMasterLedger(),this.BankVoucherEntryHeader.CompanyCode=this.ccode,this.BankVoucherEntryHeader.BranchCode=this.bcode,this.getApplicationdate(),this.getPaymentType(),this.getNarrationList(),this.getMasterLedgerList(),$("#ReprintBankVoucherModal").modal("hide")}getMasterLedger(){this.accountservice.GetMasterLedger().subscribe(t=>{this.MasterLedger=t})}getApplicationdate(){this.accountservice.getApplicationDate().subscribe(t=>{let e=t.applcationDate;this.voucherDate=e})}getChequeNumber(){this._paymentService.getChequeList(this.BankVoucherEntryHeader.AccountCodeMaster).subscribe(t=>{this.ChequeNo=t})}getAccountName(t){this.accountservice.GetAccountNames(t).subscribe(e=>{this.ApplicationNameList=e,this.getBankVoucherEntryList(t)})}getAccName(t){this.AccName=this.ApplicationNameList.filter(e=>e.acc_code==t),this.AccName=this.AccName[0].acc_name}getBankVoucherEntryList(t){this.MasterLedgerCode=this.BankVoucherEntryHeader.AccountCodeMaster,this.accountservice.getBankVoucherEntryList(this.BankVoucherEntryHeader.AccountCodeMaster,t,this.voucherDate).subscribe(t=>{this.BankVoucherList=t})}getNarrationList(){this.accountservice.GetNarration().subscribe(t=>{this.NarrationList=t,console.log(this.NarrationList)})}clear(){this.BankVoucherEntryHeader={CompanyCode:this.ccode,BranchCode:this.bcode,TxtSeqNo:0,VoucherSeqNo:0,VoucherNo:0,AccountCode:0,AccountType:null,DebitAmount:0,CreditAmount:0,ChequeNo:"",ChequeDate:null,FinalPeriod:0,FinalYear:0,AccountCodeMaster:null,Narration:null,ReceiptNo:null,TransType:null,ApprovedBy:null,CancelledBy:null,CancelledRemarks:null,Partyname:null,VoucherType:null,ReconsileBy:null,CurrencyType:null,NewVoucherNo:0,SectionID:null,VerifiedBy:null,VerifiedRemarks:null,AuthorizedBy:null,AuthorizedRemarks:null,CurrencyValue:null,ExchangeRate:0,ContraSeqNo:0,ReconsileFlag:null,Cflag:null,IsApproved:null,SubledgerAccCode:0},this.EnableAdd=!0,this.EnableSave=!1}add(){null==this.BankVoucherEntryHeader.AccountCodeMaster||0==this.BankVoucherEntryHeader.AccountCodeMaster?this.toastr.warning("Please select the Master Ledger","Alert!"):null==this.BankVoucherEntryHeader.TransType?this.toastr.warning("Please select the Type","Alert!"):null==this.BankVoucherEntryHeader.AccountCode||0==this.BankVoucherEntryHeader.AccountCode?this.toastr.warning("Please select the Account Name","Alert!"):0!=this.EnableDebit||0!=this.BankVoucherEntryHeader.DebitAmount&&null!=this.BankVoucherEntryHeader.DebitAmount?0!=this.EnableCredit||0!=this.BankVoucherEntryHeader.CreditAmount&&null!=this.BankVoucherEntryHeader.CreditAmount?(this.AccountMaster=this.BankVoucherEntryHeader.AccountCodeMaster,this.TransType=this.BankVoucherEntryHeader.TransType,this.BankVoucherEntryHeader.Partyname=this.AccName,this.BankVoucherFinalJsonList.push(this.BankVoucherEntryHeader),this.clear(),this.BankVoucherEntryHeader.AccountCodeMaster=this.AccountMaster,this.BankVoucherEntryHeader.TransType=this.TransType):this.toastr.warning("Please enter Credit Amount","Alert!"):this.toastr.warning("Please enter the Debit Amount","Alert!")}getMasterLedgerList(){this.accountservice.getMasterLedgerList().subscribe(t=>{this.MasterLedgerList=t})}getPaymentType(){this.accountservice.getPaymentType().subscribe(t=>{this.PaymentType=t})}chngType(t){"PAY"==t?(this.EnableCredit=!0,this.EnableDebit=!1,this.getAccountName(t)):"REC"==t?(this.EnableCredit=!1,this.EnableDebit=!0,this.getAccountName(t)):(this.EnableCredit=!0,this.EnableDebit=!0)}EditRow(t){this.accountservice.getBankVoucherDetails(t,this.BankVoucherEntryHeader.TransType).subscribe(t=>{this.VoucherDetails=t,this.BankVoucherFinalJsonList=this.VoucherDetails})}EditTempRow(t,e){this.index=e,this.BankVoucherEntryHeader.TxtSeqNo=t.TxtSeqNo,this.BankVoucherEntryHeader.VoucherNo=t.VoucherNo,this.BankVoucherEntryHeader.AccountCode=t.AccountCode,this.BankVoucherEntryHeader.ChequeDate=t.ChequeDate,this.BankVoucherEntryHeader.DebitAmount=t.DebitAmount,this.BankVoucherEntryHeader.CreditAmount=t.CreditAmount,this.BankVoucherEntryHeader.Narration=t.Narration,this.BankVoucherEntryHeader.ReceiptNo=t.ReceiptNo,this.BankVoucherEntryHeader.AccountCodeMaster=t.AccountCodeMaster,this.BankVoucherEntryHeader.TransType=t.TransType,this.BankVoucherEntryHeader.ChequeNo=t.ChequeNo,this.BankVoucherEntryHeader.Partyname=t.Partyname,this.EnableAdd=!1,this.EnableSave=!0}DeleteRow(t){confirm("Do you want to delete??")&&(this.BankVoucherEntryHeader.VoucherNo=t.VoucherNo,this.BankVoucherEntryHeader.AccountCode=t.AccCode,this.BankVoucherEntryHeader.ChequeDate=t.ChequeDate,this.BankVoucherEntryHeader.DebitAmount=t.Debit,this.BankVoucherEntryHeader.CreditAmount=t.Credit,this.BankVoucherEntryHeader.Narration=t.Narration,this.BankVoucherEntryHeader.ReceiptNo=t.RefNo,this.BankVoucherEntryHeader.AccountCodeMaster=t.AccCodeMaster,this.BankVoucherEntryHeader.ChequeNo=t.ChequeNo,this.accountservice.deleteBankVoucherEntry(this.BankVoucherEntryHeader).subscribe(t=>{b()("Deleted!","Deleted successfully.","success"),this.getBankVoucherEntryList(this.BankVoucherEntryHeader.TransType),this.clear()}))}save(){null==this.BankVoucherEntryHeader.AccountCodeMaster||0==this.BankVoucherEntryHeader.AccountCodeMaster?this.toastr.warning("Please select the Master Ledger","Alert!"):null==this.BankVoucherEntryHeader.TransType?this.toastr.warning("Please select the Type","Alert!"):null==this.BankVoucherEntryHeader.AccountCode||0==this.BankVoucherEntryHeader.AccountCode?this.toastr.warning("Please select the Account Name","Alert!"):0!=this.EnableDebit||0!=this.BankVoucherEntryHeader.DebitAmount&&null!=this.BankVoucherEntryHeader.DebitAmount?0!=this.EnableCredit||0!=this.BankVoucherEntryHeader.CreditAmount&&null!=this.BankVoucherEntryHeader.CreditAmount?(null!=this.AccName&&(this.BankVoucherEntryHeader.Partyname=this.AccName),this.BankVoucherFinalJsonList.splice(this.index,1),this.BankVoucherFinalJsonList.push(this.BankVoucherEntryHeader),this.clear()):this.toastr.warning("Please enter Credit Amount","Alert!"):this.toastr.warning("Please enter the Debit Amount","Alert!")}onPrint(t){this.accountservice.printBankVoucherEntry(t.VoucherNo,this.BankVoucherEntryHeader.AccountCodeMaster,t.TranType,"B").subscribe(t=>{this.PrintDetails=t,$("#ReprintBankVoucherModal").modal("show"),$("#DisplayData").html(this.PrintDetails)})}DeleteTempRow(t,e){confirm("Do you want to delete??")&&this.BankVoucherFinalJsonList.splice(e,1)}print(){let t,e;t=document.getElementById("DisplayData").innerHTML,e=window.open("","_blank","top=0,left=0,height=100%,width=auto"),e.document.open(),e.document.write(`\n      <html>\n        <head>\n          <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">\n          <title>Print tab</title>\n          <style>\n         .htmlPrint{display:none;}\n\n          @media print {\n            .table-bordered\n        {\n            border-style: solid;\n            border: 3px solid rgb(0, 0, 0);\n        }\n        .margin{\n          margin-top:-24px;\n        }\n        .mb{\n          vertical-align:middle;position:absolute;\n        }\n        tr.spaceUnder>td {\n          padding-bottom: 40px !important;\n        }\n        .top {\n          margin-top:10px;\n          border-bottom: 3px solid rgb(0, 0, 0) !important;\n          line-height: 1.6;\n        }\n        .modal-content{\n          font-family: "Times New Roman", Times, serif;\n\n        }\n       .padding-top {\n         padding-top:20px;\n       }\n        .watermark{\n          -webkit-transform: rotate(331deg);\n          -moz-transform: rotate(331deg);\n          -o-transform: rotate(331deg);\n          transform: rotate(331deg);\n          font-size: 15em;\n          color: rgba(255, 5, 5, 0.37);\n          position: absolute;\n          text-transform:uppercase;\n          padding-left: 10%;\n          margin-top:-10px;\n        }\n        .right{\n          text-align:left;\n        }\n        .px-2 {\n          padding-left: 10px !important;\n        }\n        thead > tr\n        {\n            border-style: solid;\n            border: 3px solid rgb(0, 0, 0);\n        }\n        table tr td.classname{\n          border-right: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr td.borderLeft{\n          border-left: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr td.bottom{\n          border-bottom: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr th.classname{\n          border-right: 3px solid rgb(0, 0, 0) !important;\n        }\n        .divborder {\n          border-right: 3px solid rgb(0, 0, 0) !important;\n          line-height: 1.6;\n        }\n        .lastdivborder{\n          line-height: 1.6;\n        }\n    .border{\n      border-right: 3px solid rgb(0, 0, 0) !important;\n      border-bottom: 3px solid rgb(0, 0, 0) !important;\n    }\n\n    .tdborder{\n      border-right: 3px solid rgb(0, 0, 0) !important;\n    }\n        .invoice {\n          margin-top: 250px;\n      }\n        .card{\n          border-style: solid;\n          border-width: 5px;\n          border: 3px solid rgb(0, 0, 0);\n      }\n        .printMe {\n          display: none !important;\n        }\n      }\n      body{\n            font-size: 15px;\n            line-height: 18px;\n      }\n </style>\n        </head>\n    <body onload="window.print();window.close()">\n\n    ${t}</body>\n      </html>`),e.document.close()}Submit(){confirm("Do you want to submit??")&&("0"!=this.BankVoucherFinalJsonList[0].VoucherNo&&""!=this.BankVoucherFinalJsonList[0].VoucherNo?this.accountservice.putBankVoucherEntry(this.BankVoucherFinalJsonList).subscribe(t=>{this.Submitted=t,b()("Updated!","Bank voucher updated successfully.","success"),this.BankVoucherEntryHeader.NewVoucherNo=this.Submitted.VoucherNo,this.accountservice.getBankVoucherEntryList(this.MasterLedgerCode,this.Submitted.TransType,this.voucherDate).subscribe(t=>{this.BankVoucherList=t,this.onPrint(this.Submitted),this.BankVoucherEntryHeader.AccountCodeMaster=this.MasterLedgerCode,this.BankVoucherEntryHeader.TransType=this.TransType,this.clear(),this.BankVoucherFinalJsonList=[]})}):this.accountservice.postBankVoucherEntry(this.BankVoucherFinalJsonList).subscribe(t=>{this.Submitted=t,b()("Submitted!","Bank voucher submitted successfully.","success"),this.BankVoucherEntryHeader.NewVoucherNo=this.Submitted.VoucherNo,this.accountservice.getBankVoucherEntryList(this.MasterLedgerCode,this.Submitted.TransType,this.voucherDate).subscribe(t=>{this.BankVoucherList=t,this.onPrint(this.Submitted),this.BankVoucherEntryHeader.AccountCodeMaster=this.MasterLedgerCode,this.BankVoucherEntryHeader.TransType=this.TransType,this.clear(),this.BankVoucherFinalJsonList=[]})}))}};w.ctorParameters=()=>[{type:u},{type:m.b},{type:T.a},{type:h.a}],w=r.a([Object(o.Component)({selector:"app-bank-voucher-entry",template:r.b(n("9rGd")).default,providers:[a.DatePipe],styles:[r.b(n("ooVE")).default]}),r.c("design:paramtypes",[u,m.b,T.a,h.a])],w);let M=class{constructor(t,e,n,r){this.accountservice=t,this.toastr=e,this._paymentService=n,this.appConfigService=r,this.ccode="",this.bcode="",this.today=new Date,this.EnableAdd=!0,this.EnableSave=!1,this.JournalEntryHeader={CompanyCode:this.ccode,BranchCode:this.bcode,TxtSeqNo:0,VoucherSeqNo:0,VoucherNo:0,AccountCode:0,AccountType:null,DebitAmount:null,CreditAmount:null,ChequeNo:"",ChequeDate:null,FinalPeriod:0,FinalYear:0,AccountCodeMaster:0,Narration:null,ReceiptNo:null,TransType:null,ApprovedBy:null,CancelledBy:null,CancelledRemarks:null,Partyname:null,VoucherType:null,ReconsileBy:null,CurrencyType:null,NewVoucherNo:0,SectionID:null,VerifiedBy:null,VerifiedRemarks:null,AuthorizedBy:null,AuthorizedRemarks:null,CurrencyValue:null,ExchangeRate:0,ContraSeqNo:0,ReconsileFlag:null,Cflag:null,IsApproved:null,SubledgerAccCode:0},this.ChequeNo=[],this.AccountNameList=[],this.NarrationList=[],this.MasterLedgerList=[],this.JournalList=[],this.PaymentType=[],this.PaymentFlag="",this.EnableCredit=!0,this.EnableDebit=!0,this.index=0,this.DifferenceFinalAmount=0,this.DebitFinalAmount=0,this.CreditFinalAmount=0,this.datePickerConfig=Object.assign({},{containerClass:"theme-dark-blue",showWeekNumbers:!1,maxDate:this.today,dateInputFormat:"YYYY-MM-DD"}),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=c.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(c.enc.Utf8),this.bcode=c.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(c.enc.Utf8)}ngOnInit(){this.getAccountName(),this.JournalEntryHeader.CompanyCode=this.ccode,this.JournalEntryHeader.BranchCode=this.bcode,this.getApplicationdate(),this.getPaymentType(),this.getNarrationList(),$("#ReprintJournalEntryModal").modal("hide")}getApplicationdate(){this.accountservice.getApplicationDate().subscribe(t=>{let e=t.applcationDate;this.voucherDate=e})}getChequeNumber(){this._paymentService.getChequeList(this.JournalEntryHeader.AccountCodeMaster).subscribe(t=>{this.ChequeNo=t})}getAccountName(){this.accountservice.getAccountNameforJournalEntry().subscribe(t=>{this.AccountNameList=t})}getNarrationList(){this.accountservice.GetNarration().subscribe(t=>{this.NarrationList=t})}clear(){this.JournalEntryHeader={CompanyCode:this.ccode,BranchCode:this.bcode,TxtSeqNo:0,VoucherSeqNo:0,VoucherNo:0,AccountCode:0,AccountType:null,DebitAmount:null,CreditAmount:null,ChequeNo:"",ChequeDate:null,FinalPeriod:0,FinalYear:0,AccountCodeMaster:null,Narration:null,ReceiptNo:null,TransType:null,ApprovedBy:null,CancelledBy:null,CancelledRemarks:null,Partyname:null,VoucherType:null,ReconsileBy:null,CurrencyType:null,NewVoucherNo:0,SectionID:null,VerifiedBy:null,VerifiedRemarks:null,AuthorizedBy:null,AuthorizedRemarks:null,CurrencyValue:null,ExchangeRate:0,ContraSeqNo:0,ReconsileFlag:null,Cflag:null,IsApproved:null,SubledgerAccCode:0},this.EnableAdd=!0,this.EnableSave=!1}add(){null==this.JournalEntryHeader.AccountCode||0==this.JournalEntryHeader.AccountCode?this.toastr.warning("Please select the Account Name","Alert!"):null==this.JournalEntryHeader.DebitAmount&&null==this.JournalEntryHeader.CreditAmount||null!=this.JournalEntryHeader.DebitAmount&&null!=this.JournalEntryHeader.CreditAmount?this.toastr.warning("Please enter Credit/Debit Amount","Alert!"):(this.JournalEntryHeader.AccountCodeMaster=0,this.JournalEntryHeader.ChequeDate=this.voucherDate,this.JournalEntryHeader.ChequeNo="",null==this.JournalEntryHeader.CreditAmount&&(this.JournalEntryHeader.CreditAmount=0),null==this.JournalEntryHeader.DebitAmount&&(this.JournalEntryHeader.DebitAmount=0),this.JournalList.push(this.JournalEntryHeader),this.clear())}getMasterLedgerList(){this.accountservice.getMasterLedgerList().subscribe(t=>{this.MasterLedgerList=t})}getPaymentType(){this.accountservice.getPaymentType().subscribe(t=>{this.PaymentType=t})}chngType(t){"PAY"==t?(this.EnableCredit=!0,this.EnableDebit=!1):"REC"==t?(this.EnableCredit=!1,this.EnableDebit=!0):(this.EnableCredit=!0,this.EnableDebit=!0)}EditRow(t,e){this.index=e,this.JournalEntryHeader.AccountCodeMaster=0,this.JournalEntryHeader.AccountCode=t.AccountCode,this.JournalEntryHeader.DebitAmount=t.DebitAmount,this.JournalEntryHeader.CreditAmount=t.CreditAmount,this.JournalEntryHeader.Narration=t.Narration,this.JournalEntryHeader.ReceiptNo=t.ReceiptNo,this.JournalEntryHeader.ChequeDate=this.voucherDate,this.JournalEntryHeader.ChequeNo="",this.EnableAdd=!1,this.EnableSave=!0}DeleteRow(t){confirm("Do you want to delete??")&&(this.JournalList.splice(t,1),b()("Deleted!","Deleted successfully.","success"))}save(){null==this.JournalEntryHeader.AccountCode||0==this.JournalEntryHeader.AccountCode?this.toastr.warning("Please select the Account Name","Alert!"):null==this.JournalEntryHeader.DebitAmount&&null==this.JournalEntryHeader.CreditAmount||null!=this.JournalEntryHeader.DebitAmount&&null!=this.JournalEntryHeader.CreditAmount?this.toastr.warning("Please enter Credit/Debit Amount","Alert!"):(this.JournalEntryHeader.ChequeDate=this.voucherDate,this.JournalEntryHeader.ChequeNo="",this.JournalEntryHeader.AccountCodeMaster=0,this.JournalList.splice(this.index,1),null==this.JournalEntryHeader.CreditAmount&&(this.JournalEntryHeader.CreditAmount=0),null==this.JournalEntryHeader.DebitAmount&&(this.JournalEntryHeader.DebitAmount=0),this.JournalList.push(this.JournalEntryHeader),this.clear())}onPrint(t){this.accountservice.printJournalEntry(t).subscribe(t=>{this.PrintDetails=t,$("#ReprintJournalEntryModal").modal("show"),$("#DisplayData").html(this.PrintDetails)})}print(){let t,e;t=document.getElementById("DisplayData").innerHTML,e=window.open("","_blank","top=0,left=0,height=100%,width=auto"),e.document.open(),e.document.write(`\n      <html>\n        <head>\n          <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">\n          <title>Print tab</title>\n          <style>\n         .htmlPrint{display:none;}\n\n          @media print {\n            .table-bordered\n        {\n            border-style: solid;\n            border: 3px solid rgb(0, 0, 0);\n        }\n        .margin{\n          margin-top:-24px;\n        }\n        .mb{\n          vertical-align:middle;position:absolute;\n        }\n        tr.spaceUnder>td {\n          padding-bottom: 40px !important;\n        }\n        .top {\n          margin-top:10px;\n          border-bottom: 3px solid rgb(0, 0, 0) !important;\n          line-height: 1.6;\n        }\n        .modal-content{\n          font-family: "Times New Roman", Times, serif;\n\n        }\n       .padding-top {\n         padding-top:20px;\n       }\n        .watermark{\n          -webkit-transform: rotate(331deg);\n          -moz-transform: rotate(331deg);\n          -o-transform: rotate(331deg);\n          transform: rotate(331deg);\n          font-size: 15em;\n          color: rgba(255, 5, 5, 0.37);\n          position: absolute;\n          text-transform:uppercase;\n          padding-left: 10%;\n          margin-top:-10px;\n        }\n        .right{\n          text-align:left;\n        }\n        .px-2 {\n          padding-left: 10px !important;\n        }\n        thead > tr\n        {\n            border-style: solid;\n            border: 3px solid rgb(0, 0, 0);\n        }\n        table tr td.classname{\n          border-right: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr td.borderLeft{\n          border-left: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr td.bottom{\n          border-bottom: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr th.classname{\n          border-right: 3px solid rgb(0, 0, 0) !important;\n        }\n        .divborder {\n          border-right: 3px solid rgb(0, 0, 0) !important;\n          line-height: 1.6;\n        }\n        .lastdivborder{\n          line-height: 1.6;\n        }\n    .border{\n      border-right: 3px solid rgb(0, 0, 0) !important;\n      border-bottom: 3px solid rgb(0, 0, 0) !important;\n    }\n\n    .tdborder{\n      border-right: 3px solid rgb(0, 0, 0) !important;\n    }\n        .invoice {\n          margin-top: 250px;\n      }\n        .card{\n          border-style: solid;\n          border-width: 5px;\n          border: 3px solid rgb(0, 0, 0);\n      }\n        .printMe {\n          display: none !important;\n        }\n      }\n      body{\n            font-size: 15px;\n            line-height: 18px;\n      }\n </style>\n        </head>\n    <body onload="window.print();window.close()">\n\n    ${t}</body>\n      </html>`),e.document.close()}Submit(){0!=this.DifferenceFinalAmount||0!=this.DifferenceFinalAmount?this.toastr.warning("Cannot save entry until difference is nil","Alert!"):confirm("Do you want to submit??")&&this.accountservice.postJournalEntry(this.JournalList).subscribe(t=>{this.voucherNo=t,b()("Submitted!","Voucher no "+this.voucherNo.VoucherNo+" saved successfully.","success"),this.clear(),this.JournalList=[],confirm("Do you want to print??")&&this.onPrint(this.voucherNo)})}differenceAmount(){return this.DifferenceFinalAmount=this.CreditFinalAmount-this.DebitFinalAmount,this.DifferenceFinalAmount}DebitAmount(t=[]){let e=0;return t.forEach(t=>{e+=Number(t.DebitAmount)}),this.DebitFinalAmount=e,e}CreditAmount(t=[]){let e=0;return t.forEach(t=>{e+=Number(t.CreditAmount)}),this.CreditFinalAmount=e,e}};M.ctorParameters=()=>[{type:u},{type:m.b},{type:T.a},{type:h.a}],M=r.a([Object(o.Component)({selector:"app-journal-entry",template:r.b(n("ITU0")).default,providers:[a.DatePipe],styles:[r.b(n("K9l/")).default]}),r.c("design:paramtypes",[u,m.b,T.a,h.a])],M);let V=class{constructor(t,e,n,r){this._masterService=t,this.AccountsService=e,this.toastr=n,this.Router=r,this.model={option:"Cash"},this.PaymentType=[],this.MasterLedgerNo=0,this.VoucherList=[],this.TransType="",this.voucherNo=0,this.radioItems=["Cash","Bank","Contra","Journal","Petty Cash"]}ngOnInit(){this.getApplicationDate(),this.getPaymentType()}getApplicationDate(){this._masterService.getApplicationDate().subscribe(t=>{let e=t;this.applicationDate=e.applcationDate})}getPaymentType(){this.AccountsService.getPaymentType().subscribe(t=>{this.PaymentType=t})}OnRadioBtnChnge(t){this.model.option=t,this.voucherNo=0,"Cash"==this.model.option?(this.MasterLedgerNo=1,this.AccountsService.getCashVoucherTable(this.TransType,this.MasterLedgerNo,this.applicationDate).subscribe(t=>{this.VoucherList=t})):"Petty Cash"==this.model.option?(this.MasterLedgerNo=2000117,this.AccountsService.getCashVoucherTable(this.TransType,this.MasterLedgerNo,this.applicationDate).subscribe(t=>{this.VoucherList=t})):"Bank"==this.model.option?this.AccountsService.getBankVoucherPrintList(this.TransType,this.applicationDate).subscribe(t=>{this.VoucherList=t}):"Contra"==this.model.option?this.AccountsService.getContraPrintList(this.applicationDate).subscribe(t=>{this.VoucherList=t}):"Journal"==this.model.option&&this.AccountsService.getPrintListJournalEntry(this.applicationDate).subscribe(t=>{this.VoucherList=t})}Cancel(){this.Router.navigate(["/dashboard"])}getVoucherNo(t){this.TransType=t,"Cash"==this.model.option?(this.MasterLedgerNo=1,this.AccountsService.getCashVoucherTable(t,this.MasterLedgerNo,this.applicationDate).subscribe(t=>{this.VoucherList=t})):"Petty Cash"==this.model.option?(this.MasterLedgerNo=2000117,this.AccountsService.getCashVoucherTable(t,this.MasterLedgerNo,this.applicationDate).subscribe(t=>{this.VoucherList=t})):"Bank"==this.model.option?this.AccountsService.getBankVoucherPrintList(this.TransType,this.applicationDate).subscribe(t=>{this.VoucherList=t}):"Contra"==this.model.option?this.AccountsService.getContraPrintList(this.applicationDate).subscribe(t=>{this.VoucherList=t}):"Journal"==this.model.option&&this.AccountsService.getPrintListJournalEntry(this.applicationDate).subscribe(t=>{this.VoucherList=t})}ChangeVoucherDets(t){this.voucherNo=t}rePrint(){"Cash"==this.model.option||"Petty Cash"==this.model.option?""==this.TransType?this.toastr.warning("Please select the type","Alert!"):0==this.voucherNo?this.toastr.warning("Please select the voucher","Alert!"):(this.Voucherdets=this.VoucherList.filter(t=>t.VoucherNo==this.voucherNo),this.AccountsService.print(this.voucherNo,this.Voucherdets[0].AccCodeMaster,this.TransType,this.Voucherdets[0].AccType,this.TransType).subscribe(t=>{this.PrintDetails=t,$("#ReprintVoucherModal").modal("show"),$("#DisplayData").html(this.PrintDetails)})):"Bank"==this.model.option?""==this.TransType?this.toastr.warning("Please select the type","Alert!"):0==this.voucherNo?this.toastr.warning("Please select the voucher","Alert!"):(this.Voucherdets=this.VoucherList.filter(t=>t.VoucherNo==this.voucherNo),this.AccountsService.printBankVoucherEntry(this.voucherNo,this.Voucherdets[0].AccCodeMaster,this.TransType,"B").subscribe(t=>{this.PrintDetails=t,$("#ReprintVoucherModal").modal("show"),$("#DisplayData").html(this.PrintDetails)})):"Contra"==this.model.option?0==this.voucherNo?this.toastr.warning("Please select the voucher","Alert!"):(this.Voucherdets=this.VoucherList.filter(t=>t.VoucherNo==this.voucherNo),this.AccountsService.printContraEntry(this.voucherNo,this.Voucherdets[0].AccCodeMaster,"CONT","N","CONT").subscribe(t=>{this.PrintDetails=t,$("#ReprintVoucherModal").modal("show"),$("#DisplayData").html(this.PrintDetails)})):"Journal"==this.model.option&&(0==this.voucherNo?this.toastr.warning("Please select the voucher","Alert!"):(this.Voucherdets=this.VoucherList.filter(t=>t.VoucherNo==this.voucherNo),this.AccountsService.reprintJournalEntry(this.Voucherdets).subscribe(t=>{this.PrintDetails=t,$("#ReprintVoucherModal").modal("show"),$("#DisplayData").html(this.PrintDetails)})))}print(){let t,e;t=document.getElementById("DisplayData").innerHTML,e=window.open("","_blank","top=0,left=0,height=100%,width=auto"),e.document.open(),e.document.write(`\n      <html>\n        <head>\n          <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">\n          <title>Print tab</title>\n          <style>\n         .htmlPrint{display:none;}\n\n          @media print {\n            .table-bordered\n        {\n            border-style: solid;\n            border: 3px solid rgb(0, 0, 0);\n        }\n        .margin{\n          margin-top:-24px;\n        }\n        .mb{\n          vertical-align:middle;position:absolute;\n        }\n        tr.spaceUnder>td {\n          padding-bottom: 40px !important;\n        }\n        .top {\n          margin-top:10px;\n          border-bottom: 3px solid rgb(0, 0, 0) !important;\n          line-height: 1.6;\n        }\n        .modal-content{\n          font-family: "Times New Roman", Times, serif;\n\n        }\n       .padding-top {\n         padding-top:20px;\n       }\n        .watermark{\n          -webkit-transform: rotate(331deg);\n          -moz-transform: rotate(331deg);\n          -o-transform: rotate(331deg);\n          transform: rotate(331deg);\n          font-size: 15em;\n          color: rgba(255, 5, 5, 0.37);\n          position: absolute;\n          text-transform:uppercase;\n          padding-left: 10%;\n          margin-top:-10px;\n        }\n        .right{\n          text-align:left;\n        }\n        .px-2 {\n          padding-left: 10px !important;\n        }\n        thead > tr\n        {\n            border-style: solid;\n            border: 3px solid rgb(0, 0, 0);\n        }\n        table tr td.classname{\n          border-right: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr td.borderLeft{\n          border-left: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr td.bottom{\n          border-bottom: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr th.classname{\n          border-right: 3px solid rgb(0, 0, 0) !important;\n        }\n        .divborder {\n          border-right: 3px solid rgb(0, 0, 0) !important;\n          line-height: 1.6;\n        }\n        .lastdivborder{\n          line-height: 1.6;\n        }\n    .border{\n      border-right: 3px solid rgb(0, 0, 0) !important;\n      border-bottom: 3px solid rgb(0, 0, 0) !important;\n    }\n\n    .tdborder{\n      border-right: 3px solid rgb(0, 0, 0) !important;\n    }\n        .invoice {\n          margin-top: 250px;\n      }\n        .card{\n          border-style: solid;\n          border-width: 5px;\n          border: 3px solid rgb(0, 0, 0);\n      }\n        .printMe {\n          display: none !important;\n        }\n      }\n      body{\n            font-size: 15px;\n            line-height: 18px;\n      }\n </style>\n        </head>\n    <body onload="window.print();window.close()">\n\n    ${t}</body>\n      </html>`),e.document.close()}};V.ctorParameters=()=>[{type:x.a},{type:u},{type:m.b},{type:i.c}],V=r.a([Object(o.Component)({selector:"app-reprint-voucher",template:r.b(n("k3CP")).default,styles:[r.b(n("uT0M")).default]}),r.c("design:paramtypes",[x.a,u,m.b,i.c])],V);let E=class{constructor(t,e,n,r,o){this.fb=t,this.service=e,this.toastr=n,this.datePipe=r,this.appConfigService=o,this.ccode="",this.bcode="",this.EnableAdd=!0,this.EnableSave=!1,this.today=new Date,this.EnableDebit=!0,this.EnableCredit=!0,this.EnableChequeNo=!0,this.EnableChequeDate=!0,this.typevalue=null,this.ContraEntryHeader={objID:null,CompanyCode:this.ccode,BranchCode:this.bcode,TxtSeqNo:0,VoucherSeqNo:0,VoucherNo:0,AccountCode:null,AccountType:"N",DebitAmount:0,CreditAmount:0,ChequeNo:0,ChequeDate:null,FinalYear:0,FinalPeriod:0,AccountCodeMaster:null,Narration:null,ReceiptNo:0,TransType:"CONT",ApprovedBy:null,CancelledRemarks:null,CancelledBy:null,Partyname:null,VoucherType:null,ReconsileBy:null,CurrencyType:null,NewVoucherNo:0,SectionID:null,VerifiedBy:null,VerifiedRemarks:null,AuthorizedBy:null,AuthorizedRemarks:null,ExchangeRate:1,CurrencyValue:1,ContraSeqNo:0,ReconsileFlag:null,Cflag:null,IsApproved:null,SubledgerAccCode:1},this.appDate=[],this.rpDate=[],this.TransTypeList=[],this.TypeName=null,this.TypeCode="",this.LedgerList=[],this.typearg=[],this.ApplicationNameList=[],this.NarrationList=[],this.ContraEntryList=[],this.GetContraList=[],this.datePickerConfig=Object.assign({},{containerClass:"theme-dark-blue",showWeekNumbers:!1,maxDate:this.today,dateInputFormat:"DD-MM-YYYY"}),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=c.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(c.enc.Utf8),this.bcode=c.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(c.enc.Utf8)}ngOnInit(){this.ContraEntryHeader.CompanyCode=this.ccode,this.ContraEntryHeader.BranchCode=this.bcode,this.getApplicationDate(),this.getType(),this.getAccountNames(1),this.getNarrationList(),this.contraEntryForm=this.fb.group({applicationDate:null,CompanyCode:this.ccode,BranchCode:this.bcode})}getApplicationDate(){this.service.getApplicationDate().subscribe(t=>{this.appDate=t,this.rpDate=this.appDate.applcationDate,this.applicationDate=this.appDate.applcationDate,this.ContraEntryHeader.ChequeDate=this.rpDate})}getType(){this.service.getContraType().subscribe(t=>{this.TransTypeList=t})}onTypeSelected(t){this.Type=this.TransTypeList.filter(e=>e.Name==t),this.TypeName=this.Type[0].Name,this.TypeCode=this.Type[0].Code,"CASH DEPOSIT"==t?(this.EnableDebit=!1,this.EnableCredit=!0,this.EnableChequeNo=!0,this.EnableChequeDate=!0):"CASH WITHDRAWAL"==t?(this.EnableDebit=!0,this.EnableCredit=!1,this.EnableChequeNo=!0,this.EnableChequeDate=!0):(this.EnableDebit=!1,this.EnableCredit=!0,this.EnableChequeNo=!1,this.EnableChequeDate=!1),this.service.getContraLedger(this.TypeCode).subscribe(t=>{this.LedgerList=t,this.getContraEntryTable()})}getLedger(){this.service.getContraLedger(this.Type).subscribe(t=>{this.LedgerList=t,this.getContraEntryTable()})}getAccountNames(t){this.service.GetAccountNames(t).subscribe(t=>{this.ApplicationNameList=t})}getNarrationList(){this.service.GetNarration().subscribe(t=>{this.NarrationList=t})}getContraEntryTable(){this.ContraEntryHeader.TransType="CONT",this.service.getContraEntryList(this.ContraEntryHeader.AccountCodeMaster,this.rpDate).subscribe(t=>{this.ContraEntryList=t,console.log(this.ContraEntryList)})}getContraEntryList(t){this.EnableAdd=!1,this.EnableSave=!0,this.service.editGetContraEntry(t.VoucherNo,t.AccCode,t.AccCodeMaster).subscribe(t=>{this.GetContraList=t,this.ContraEntryHeader=this.GetContraList})}clear(){this.EnableAdd=!0,this.EnableSave=!1,this.ContraEntryHeader.AccountCode=null,this.ContraEntryHeader.DebitAmount=0,this.ContraEntryHeader.CreditAmount=0,this.ContraEntryHeader.Narration=null,this.ContraEntryHeader.ReceiptNo=0,this.ContraEntryHeader.ChequeNo=0}PrintContraEntry(t){t.TransType=this.ContraEntryHeader.TransType,this.service.printContraEntry(t.VoucherNo,t.AccCodeMaster,t.TransType,t.AccType,t.TransType).subscribe(t=>{this.PrintContraDetails=t,console.log(this.PrintContraDetails),$("#ReprintContraEntry").modal("show"),$("#DisplayData").html(this.PrintContraDetails)})}print(){let t,e;t=document.getElementById("DisplayData").innerHTML,e=window.open("","_blank","top=0,left=0,height=100%,width=auto"),e.document.open(),e.document.write(t),e.document.close()}putContraEntryTable(){if(null==this.ContraEntryHeader.AccountCode)this.toastr.warning("Please select the Account Name","Alert!");else if("PAY"==this.ContraEntryHeader.TransType&&0==this.ContraEntryHeader.DebitAmount)this.toastr.warning("Please enter the Debit Amount","Alert!");else if("REC"==this.ContraEntryHeader.TransType&&0==this.ContraEntryHeader.CreditAmount)this.toastr.warning("Please enter the Credit Amount","Alert!");else if(0==this.ContraEntryHeader.ReceiptNo)this.toastr.warning("Please enter the Ref No.","Alert!");else if("B"==this.Type&&this.ContraEntryHeader.AccountCodeMaster==this.ContraEntryHeader.AccountCode)this.toastr.warning("Master Ledger and Account Name could not be same","Alert!");else if("B"==this.Type&&0==this.ContraEntryHeader.ChequeNo)this.toastr.warning("Please enter the Cheque No.","Alert!");else var t=confirm("Do you want to Save");t&&(this.ContraEntryHeader.TransType="CONT",this.service.PutContraVoucher(this.ContraEntryHeader,this.ContraEntryHeader.VoucherNo).subscribe(t=>{this.PostContra=t,b()("success!","Saved successfully","success"),this.getContraEntryTable(),this.clear()}))}postContraEntry(){if(null==this.ContraEntryHeader.AccountCodeMaster)this.toastr.warning("Please select the Master Ledger","Alert!");else if(null==this.ContraEntryHeader.AccountCode)this.toastr.warning("Please select the Account Name","Alert!");else if("PAY"==this.ContraEntryHeader.TransType&&0==this.ContraEntryHeader.DebitAmount)this.toastr.warning("Please enter the Debit Amount","Alert!");else if("REC"==this.ContraEntryHeader.TransType&&0==this.ContraEntryHeader.CreditAmount)this.toastr.warning("Please enter the Credit Amount","Alert!");else if(0==this.ContraEntryHeader.ReceiptNo)this.toastr.warning("Please enter the Ref No.","Alert!");else if("B"==this.Type&&this.ContraEntryHeader.AccountCodeMaster==this.ContraEntryHeader.AccountCode)this.toastr.warning("Master Ledger and Account Name could not be same.","Alert!");else if("B"==this.Type&&0==this.ContraEntryHeader.ChequeNo)this.toastr.warning("Please enter the Cheque No.","Alert!");else var t=confirm("Do you want to Save");t&&this.service.PostContraVoucher(this.ContraEntryHeader).subscribe(t=>{this.PostContra=t,b()("success!","Saved successfully","success"),this.getContraEntryTable(),this.clear()})}};E.ctorParameters=()=>[{type:s.FormBuilder},{type:u},{type:m.b},{type:a.DatePipe},{type:h.a}],E=r.a([Object(o.Component)({selector:"app-contra-entry",template:r.b(n("mr+f")).default,providers:[a.DatePipe],styles:[r.b(n("dB2Y")).default]}),r.c("design:paramtypes",[s.FormBuilder,u,m.b,a.DatePipe,h.a])],E);const k=[{path:"cash-voucher",canActivate:[l.a],canActivateChild:[l.a],component:g,data:{title:"Cash Voucher Entry",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Cash Voucher Entry"}]}},{path:"sub-group",canActivate:[l.a],canActivateChild:[l.a],component:y,data:{title:"Sub Group",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Sub Group"}]}},{path:"master-group",canActivate:[l.a],canActivateChild:[l.a],component:f,data:{title:"Master Group",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Master Group"}]}},{path:"ledger",canActivate:[l.a],canActivateChild:[l.a],component:C,data:{title:"Ledger",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Ledger"}]}},{path:"narration",canActivate:[l.a],canActivateChild:[l.a],component:v,data:{title:"Narration",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Narration"}]}},{path:"cheque-entry",canActivate:[l.a],canActivateChild:[l.a],component:N,data:{title:"Cheque Entry",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Cheque Entry"}]}},{path:"voucher-cancel",canActivate:[l.a],canActivateChild:[l.a],component:A,data:{title:"Voucher Cancel",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Voucher Cancel"}]}},{path:"cheque-closing",canActivate:[l.a],canActivateChild:[l.a],component:S,data:{title:"Cheque Closing",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Cheque Closing"}]}},{path:"cash-in-hand",canActivate:[l.a],canActivateChild:[l.a],component:L,data:{title:"Cash In Hand",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Cash In Hand"}]}},{path:"accounts-update",canActivate:[l.a],canActivateChild:[l.a],component:D,data:{title:"Accounts Update",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Accounts Update"}]}},{path:"bank-voucher-entry",canActivate:[l.a],canActivateChild:[l.a],component:w,data:{title:"Bank Voucher Entry",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Bank Voucher Entry"}]}},{path:"journal-entry",canActivate:[l.a],canActivateChild:[l.a],component:M,data:{title:"Journal Entry",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Journal Entry"}]}},{path:"reprint-voucher",canActivate:[l.a],canActivateChild:[l.a],component:V,data:{title:"Reprint Voucher",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Reprint Voucher"}]}},{path:"contra-entry",canActivate:[l.a],canActivateChild:[l.a],component:E,data:{title:"Contra Entry",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Contra Entry"}]}}];let B=class{};B=r.a([Object(o.NgModule)({imports:[i.d.forChild(k)],exports:[i.d]})],B);var G=n("hzby"),P=n("CaAu"),q=n("cZdB");n.d(e,"AccountsModule",(function(){return H}));let H=class{};H=r.a([Object(o.NgModule)({declarations:[g,y,f,C,v,N,A,S,L,D,w,M,V,E],imports:[a.CommonModule,B,s.FormsModule,s.ReactiveFormsModule,G.b.forRoot(),P.a,q.a]})],H)},"mr+f":function(t,e,n){"use strict";n.r(e),e.default='<div class="card">\r\n    <div class="card-body">\r\n        <form class="form-horizontal">\r\n            <div class="row">\r\n                <div class="col-md-3 ">\r\n                    <div class="form-group">\r\n                        <div>\r\n                            <i class="fal fa-calendar-alt"></i>&nbsp; <span class="text-muted">\r\n                                Voucher Date</span>\r\n                            <h2 class="font-light">{{ContraEntryHeader.ChequeDate | date:\'dd/MM/yyyy\'}}</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-md-3">\r\n                    <div class="form-group">\r\n                        <label for="VoucherNo">Voucher No.</label>\r\n                        <input type="number" class="form-control" name="VoucherNo"\r\n                            [(ngModel)]="ContraEntryHeader.VoucherNo" readonly>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-md-3 ">\r\n                    <div class="form-group">\r\n                        <label for="">Type</label>\r\n                        <select class="form-control mr-auto mt-2 mt-lg-0" name="Type" [(ngModel)]="TypeName"\r\n                            (change)="onTypeSelected($event.target.value)">\r\n                            <option [ngValue]="null">Select</option>\r\n                            <option *ngFor="let type of TransTypeList" [value]="type.Name">\r\n                                {{type.Name}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-md-3">\r\n                    <div class="form-group">\r\n                        <label for="">Master Ledger</label>\r\n                        <select class="form-control mr-auto mt-2 mt-lg-0" name="AccountCodeMaster"\r\n                            [(ngModel)]="ContraEntryHeader.AccountCodeMaster" (change)="getContraEntryTable()">\r\n                            <option [ngValue]="null">Select</option>\r\n                            <option *ngFor="let ledger of LedgerList" [value]="ledger.Code">\r\n                                {{ledger.Name}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n        <div class="row">\r\n            <div class="table-responsive">\r\n                <table class="table table-bordered">\r\n                    <thead class="topbar">\r\n                        <tr>\r\n                            <th>Account Name</th>\r\n                            <th>Debit</th>\r\n                            <th>Credit</th>\r\n                            <th>Naration</th>\r\n                            <th>Ref. No.</th>\r\n                            <th>Cheque No.</th>\r\n                            <th>Cheque Date</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <select class="form-control" [(ngModel)]="ContraEntryHeader.AccountCode">\r\n                                    <option [ngValue]="null">Select</option>\r\n                                    <option *ngFor="let name of ApplicationNameList" [value]="name.acc_code">\r\n                                        {{name.acc_name}}</option>\r\n                                </select>\r\n                            </td>\r\n\r\n                            <td>\r\n                                <input type="number" class="form-control" [(ngModel)]="ContraEntryHeader.DebitAmount"\r\n                                    [readonly]="EnableDebit">\r\n                            </td>\r\n\r\n                            <td>\r\n                                <input type="number" class="form-control" [(ngModel)]="ContraEntryHeader.CreditAmount"\r\n                                    [readonly]="EnableCredit">\r\n                            </td>\r\n\r\n                            <td>\r\n                                <select class="form-control" [(ngModel)]="ContraEntryHeader.Narration">\r\n                                    <option [ngValue]="null">Select</option>\r\n                                    <option *ngFor="let list of NarrationList" [value]="list.Narration">\r\n                                        {{list.Narration}}</option>\r\n                                </select>\r\n                            </td>\r\n\r\n                            <td>\r\n                                <input type="number" class="form-control" [(ngModel)]="ContraEntryHeader.ReceiptNo">\r\n                            </td>\r\n\r\n                            <td>\r\n                                <input type="number" class="form-control" [(ngModel)]="ContraEntryHeader.ChequeNo"\r\n                                    [readonly]="EnableChequeNo">\r\n                            </td>\r\n\r\n                            <td>\r\n                                <form [formGroup]="contraEntryForm">\r\n                                    <input type="text" bsDatepicker class="form-control" [bsConfig]="datePickerConfig"\r\n                                        placeholder="Select Date" [(ngModel)]="applicationDate"\r\n                                        formControlName="applicationDate" [readonly]="EnableChequeDate">\r\n                                </form>\r\n                            </td>\r\n                            <td>\r\n                                <ng-container *ngIf="EnableAdd">\r\n                                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\r\n                                        [disabled]="EnableAddRow" (click)="postContraEntry();">\r\n                                        <i class="far fa-plus-circle" style="padding-right:10px"></i>Add</button>\r\n                                </ng-container>\r\n                                <ng-container *ngIf="EnableSave">\r\n                                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\r\n                                        (click)="putContraEntryTable();">\r\n                                        <i class="far fa-plus-circle" style="padding-right:10px"></i>Save</button>\r\n                                </ng-container>\r\n                            </td>\r\n                            <td>\r\n                                <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\r\n                                    (click)="clear()">\r\n                                    <i class="far fa-window-close" style="padding-right:10px"></i>Clear</button>\r\n\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="card-body">\r\n    <div class="row">\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead class="topbar">\r\n                    <tr>\r\n                        <th>Action</th>\r\n                        <th>Sl. No.</th>\r\n                        <th>Voucher No</th>\r\n                        <th>Account Name</th>\r\n                        <th>Debit</th>\r\n                        <th>Credit</th>\r\n                        <th>Naration</th>\r\n                        <th>Ref. No</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor="let table of ContraEntryList;let i = index">\r\n                        <td><i class="fas fa-edit" title="Edit" (click)="getContraEntryList(table)"\r\n                                style="padding-right:10px"></i>\r\n                            <i class="fal fa-print" (click)="PrintContraEntry(table)"></i>\r\n                        </td>\r\n                        <td>{{i+1}}</td>\r\n                        <td>{{table.VoucherNo}}</td>\r\n                        <td>{{table.AccName}}</td>\r\n                        <td>{{table.Debit}}</td>\r\n                        <td>{{table.Credit}}</td>\r\n                        <td>{{table.Narration}}</td>\r\n                        <td>{{table.RefNo}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="ReprintContraEntry" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"\r\n    aria-hidden="true">\r\n    <div class="modal-dialog modal-lg" role="document" style="max-width: 1400px">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button"\r\n                    class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary"\r\n                    id="exampleModalLabel" (click)=print()><i class="fal fa-print"></i> Print\r\n                </button>\r\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="print">\r\n                <span>\r\n                    <div id="DisplayData" [innerHTML]=\'PrintContraDetails\'></div>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\x3c!-- <pre>{{ ContraEntryHeader | json }}</pre> --\x3e'},oVTU:function(t,e,n){"use strict";n.r(e),e.default='<div id="accordian" class="accordion">\n  <div class="card mb-0">\n    <div id="header" class="card-body show">\n      <form class="form-horizontal">\n        <div class="row">\n          <div class="col-lg-12">\n            <div class="form-body">\n              <div class="row">\n                <div class="col-md-2">\n                  <div class="form-group">\n                    <label class="control-label">Search Sub_Group</label>\n                    <div class="m-b-10">\n                      <input class="form-control" type="text" name="search" [(ngModel)]="searchText" autocomplete="off">\n                    </div>\n                  </div>\n                </div>\n                <div class="col-md-3">\n                  \x3c!-- <div class="form-group" style="display: inline-block;padding-top: 1.5rem;">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary" type="submit"><i\n                        class="fal fa-search"></i> Search</button>\n                  </div> --\x3e\n                </div>\n                <div class="col-md-6">\n                  <div class="form-group float-right" style="display: inline-block;padding-top: 1.5rem;">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary" type="submit"><i\n                        class="fal fa-search"></i> Print</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \x3c!-- <pre>{{ SRHeaderForm | json }}</pre> --\x3e\n      </form>\n    </div>\n  </div>\n</div>\n<br>\n<div id="accordian" class="accordion">\n  <div class="card mb-0">\n    <div id="header" class="card-body show">\n      <form [formGroup]="SubGroupForm" class="form-horizontal">\n        <div class="row">\n          <div class="col-md-4">\n            <div class="form-group">\n              <label for="SubGroupName">Sub-Group Name</label>\n              <div class="form-group">\n                <input type="text" class="form-control" [(ngModel)]="SubGroupModel.GroupName"\n                  formControlName="GroupName">\n              </div>\n            </div>\n          </div>\n          <div class="col-md-4">\n            <div class="form-group">\n              <label for="GroupName">Group Name</label>\n              <div class="form-group">\n                <select class="form-control mr-auto mt-2 mt-lg-0" [(ngModel)]="SubGroupModel.ParentGroupID"\n                  formControlName="ParentGroupID">\n                  <option [ngValue]="null">Select</option>\n                  <option *ngFor="let _subGroupType of SubGroupType" [value]="_subGroupType.GroupID">\n                    {{_subGroupType.GroupName}}\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div class="col-md-3">\n            <div class="form-group">\n              <ng-container *ngIf="EnableAdd">\n                <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                  style="margin-top: 1.2rem !important;" (click)="add(SubGroupForm)">\n                  <i class="far fa-plus-circle"></i>Add</button>\n              </ng-container>\n              <ng-container *ngIf="EnableSave">\n                <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                  style="margin-top: 1.2rem !important;" (click)="save(SubGroupForm)">\n                  <i class="fal fa-save"></i>Save</button>\n              </ng-container>\n              <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                style="margin-top: 1.2rem !important;" (click)="clear()">\n                <i class="fal fa-trash"></i>Clear</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<br>\n<div class="card mb-0">\n  <div class="card-body">\n    <div class="table-responsive">\n      <table class="table table-bordered">\n        <thead class="topbar">\n          <tr>\n            <th>Edit</th>\n            <th>Open</th>\n            <th>Close</th>\n            <th>Sub-Group Name</th>\n            <th>Group Name</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody *ngFor="let _subGroupList of SubGroupList | filter:searchText">\n          <tr>\n            <td>\n              <i class="fas fa-edit" title="edit" (click)="editField(_subGroupList)"></i>\n            </td>\n            <td>\n              <i class="fas fa-lock-open" title="open" (click)="openField(_subGroupList)"></i>\n            <td>\n              <i class="fas fa-lock" title="close" (click)="closeField(_subGroupList)"></i>\n            </td>\n            <td>{{_subGroupList.GroupName}}</td>\n            <td>{{_subGroupList.ParentGroupName}}</td>\n            <td>{{_subGroupList.ObjStatus}}</td>            \n          </tr>\n          <tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n<br>\n\n\x3c!-- <pre>{{SubGroupModel | json}}</pre> --\x3e'},ooVE:function(t,e,n){"use strict";n.r(e),e.default='.print{\r\n  padding-left:200px;\r\n  padding-bottom: 50px;\r\n  padding-top:-200px;\r\n  \r\n}\r\n\r\n.card-title {\r\n    margin-bottom: -0.3rem !important;\r\n}\r\n\r\n.table-responsive {\r\n    display: block;\r\n    width: 99.9% !important;\r\n    overflow-x: auto;\r\n    -ms-overflow-style: -ms-autohiding-scrollbar;\r\n}\r\n\r\n.card-header{\r\n    border-radius: 15px !important;\r\n  }\r\n\r\n.card{\r\n    border-radius: 15px !important;\r\n  \r\n  }\r\n\r\n.card-body{ \r\n    padding: 10px 30px 0px 30px !important; \r\n    border-bottom: 2px solid black;\r\n    border-radius: 15px;\r\n  }\r\n\r\n.p-38 { height: 38px; }\r\n\r\n.text-white { color: white;}\r\n\r\n.Pointer { cursor: pointer; }\r\n\r\n.footer {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n.hide{\r\n   display: hide;\r\n  }\r\n\r\n.show{\r\n    display: block;\r\n  }\r\n\r\n.accordion .card-header.collapsed:after {\r\n    /* symbol for "collapsed" panels */\r\n    content: "\\f067"; \r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    transition: .3s transform ease-in-out;\r\n  }\r\n\r\n.accordion .card-header:after {\r\n    font-family: \'FontAwesome\';  \r\n    content: "\\f068";\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    margin-top: -25px;\r\n  }\r\n\r\n.text-red{\r\n    color:red;\r\n  }\r\n\r\n.text-green{\r\n  color:#16d616; \r\n  }\r\n  \r\n  \r\n  \r\n'},ozl1:function(t,e,n){"use strict";n.r(e),e.default='body{\r\n    font-size: 5px;\r\n    line-height: 18px;\r\n}\r\n.watermark {\r\n  transform: rotate(331deg);\r\n  font-size: 10em;\r\n  color: rgba(255, 5, 5, 0.37);\r\n  position: absolute;\r\n  text-transform:uppercase;\r\n  padding-left: 10%;\r\n}\r\nthead > tr {\r\n  color:black !important;\r\n  font-weight: 300;\r\n  background-color: blanchedalmond;\r\n}\r\n.modal-header{\r\npadding-left: 20rem !important;\r\n}\r\n.material-switch > input[type="checkbox"] {\r\ndisplay: none;   \r\n}\r\ntr.spaceUnder>td {\r\npadding-bottom: 0px;\r\n}\r\n.material-switch > label {\r\ncursor: pointer;\r\nheight: 0px;\r\nposition: relative; \r\nwidth: 40px;  \r\n}\r\n.material-switch > label::before {\r\nbackground: rgb(0, 0, 0);\r\nbox-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.5);\r\nborder-radius: 8px;\r\ncontent: \'\';\r\nheight: 16px;\r\nmargin-top: -8px;\r\nposition:absolute;\r\nopacity: 0.3;\r\ntransition: all 0.4s ease-in-out;\r\nwidth: 40px;\r\n}\r\n.material-switch > label::after {\r\nbackground: rgb(255, 255, 255);\r\nborder-radius: 16px;\r\nbox-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);\r\ncontent: \'\';\r\nheight: 24px;\r\nleft: -4px;\r\nmargin-top: -8px;\r\nposition: absolute;\r\ntop: -4px;\r\ntransition: all 0.3s ease-in-out;\r\nwidth: 24px;\r\n}\r\n.material-switch > input[type="checkbox"]:checked + label::before {\r\nbackground: inherit;\r\nopacity: 0.5;\r\n}\r\n.material-switch > input[type="checkbox"]:checked + label::after {\r\nbackground: inherit;\r\nleft: 20px;\r\n}'},qaPn:function(t,e,n){"use strict";n.r(e),e.default='.card-title {\r\n    margin-bottom: -0.3rem !important;\r\n}\r\n\r\n.table-responsive {\r\n    display: block;\r\n    width: 99.9% !important;\r\n    overflow-x: auto;\r\n    -ms-overflow-style: -ms-autohiding-scrollbar;\r\n}\r\n\r\n.card-header{\r\n    border-radius: 15px !important;\r\n  }\r\n\r\n.card{\r\n    border-radius: 15px !important;  \r\n  }\r\n\r\n.card-body{ \r\n    padding: 10px 30px 0px 30px !important; \r\n    border-bottom: 2px solid black;\r\n    border-radius: 15px;\r\n  }\r\n\r\n.chkbxsize{\r\n    width: 35px; \r\n    height: 35px; \r\n  }\r\n\r\n.p-38 { height: 38px; }\r\n\r\n.text-white { color: white;}\r\n\r\n.Pointer { cursor: pointer; }\r\n\r\n.footer {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n.hide{\r\n   display: hide;\r\n  }\r\n\r\n.show{\r\n    display: block;\r\n  }\r\n\r\n.accordion .card-header.collapsed:after {\r\n    /* symbol for "collapsed" panels */\r\n    content: "\\f067"; \r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    transition: .3s transform ease-in-out;\r\n  }\r\n\r\n.accordion .card-header:after {\r\n    font-family: \'FontAwesome\';  \r\n    content: "\\f068";\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    margin-top: -25px;\r\n  }\r\n\r\n.text-red{\r\n    color:red;\r\n  }\r\n\r\n.text-green{\r\n  color:#16d616; \r\n  }'},uHHy:function(t,e,n){"use strict";n.r(e),e.default='body{\r\n    font-size: 5px;\r\n    line-height: 18px;\r\n}\r\n.watermark {\r\n  transform: rotate(331deg);\r\n  font-size: 10em;\r\n  color: rgba(255, 5, 5, 0.37);\r\n  position: absolute;\r\n  text-transform:uppercase;\r\n  padding-left: 10%;\r\n}\r\nthead > tr {\r\n  color:black !important;\r\n  font-weight: 300;\r\n  background-color: blanchedalmond;\r\n}\r\n.modal-header{\r\npadding-left: 20rem !important;\r\n}\r\n.material-switch > input[type="checkbox"] {\r\ndisplay: none;   \r\n}\r\ntr.spaceUnder>td {\r\npadding-bottom: 0px;\r\n}\r\n.material-switch > label {\r\ncursor: pointer;\r\nheight: 0px;\r\nposition: relative; \r\nwidth: 40px;  \r\n}\r\n.material-switch > label::before {\r\nbackground: rgb(0, 0, 0);\r\nbox-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.5);\r\nborder-radius: 8px;\r\ncontent: \'\';\r\nheight: 16px;\r\nmargin-top: -8px;\r\nposition:absolute;\r\nopacity: 0.3;\r\ntransition: all 0.4s ease-in-out;\r\nwidth: 40px;\r\n}\r\n.material-switch > label::after {\r\nbackground: rgb(255, 255, 255);\r\nborder-radius: 16px;\r\nbox-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);\r\ncontent: \'\';\r\nheight: 24px;\r\nleft: -4px;\r\nmargin-top: -8px;\r\nposition: absolute;\r\ntop: -4px;\r\ntransition: all 0.3s ease-in-out;\r\nwidth: 24px;\r\n}\r\n.material-switch > input[type="checkbox"]:checked + label::before {\r\nbackground: inherit;\r\nopacity: 0.5;\r\n}\r\n.material-switch > input[type="checkbox"]:checked + label::after {\r\nbackground: inherit;\r\nleft: 20px;\r\n}'},uT0M:function(t,e,n){"use strict";n.r(e),e.default='.print{\r\n  padding-left:200px;\r\n  padding-bottom: 50px;\r\n  padding-top:-200px;\r\n  \r\n}\r\n\r\n.card-title {\r\n    margin-bottom: -0.3rem !important;\r\n}\r\n\r\n.table-responsive {\r\n    display: block;\r\n    width: 99.9% !important;\r\n    overflow-x: auto;\r\n    -ms-overflow-style: -ms-autohiding-scrollbar;\r\n}\r\n\r\n.card-header{\r\n    border-radius: 15px !important;\r\n  }\r\n\r\n.card{\r\n    border-radius: 15px !important;\r\n  \r\n  }\r\n\r\n.card-body{ \r\n    padding: 10px 30px 0px 30px !important; \r\n    border-bottom: 2px solid black;\r\n    border-radius: 15px;\r\n  }\r\n\r\n.p-38 { height: 38px; }\r\n\r\n.text-white { color: white;}\r\n\r\n.Pointer { cursor: pointer; }\r\n\r\n.footer {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n.hide{\r\n   display: hide;\r\n  }\r\n\r\n.show{\r\n    display: block;\r\n  }\r\n\r\n.accordion .card-header.collapsed:after {\r\n    /* symbol for "collapsed" panels */\r\n    content: "\\f067"; \r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    transition: .3s transform ease-in-out;\r\n  }\r\n\r\n.accordion .card-header:after {\r\n    font-family: \'FontAwesome\';  \r\n    content: "\\f068";\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    margin-top: -25px;\r\n  }\r\n\r\n.text-red{\r\n    color:red;\r\n  }\r\n\r\n.text-green{\r\n  color:#16d616; \r\n  }'},"v+Yy":function(t,e,n){"use strict";n.r(e),e.default='<div class="row" style="display:block;margin: auto;width: 30%;">\n  <form class="form-horizontal">\n      <div class="col-md-12">\n          <div class="card">\n              <div class="card-body">\n                  <div class="row">\n                      <div class="col-md-12">\n                        <div class="form-group">\n                          <label for="OrderNo">Transaction Date</label>\n                          <input type="text" class="form-control" [(ngModel)]="applicationDate"\n                    [ngModelOptions]="{standalone: true}" readonly />\n                        </div>\n                        <div class="form-group">\n                          <input type="checkbox" readonly/>&nbsp;&nbsp;Scheme Collection\n                        </div>                        \n                        <div class="form-group">\n                              <button\n                                  class="printMe btn btn-success waves-effect waves-light btn-rounded btn-secondary"\n                                  (click)="UpdateAccounts()"><i class="fal fa-save"></i>\n                                  Update Accounts</button>\n                                  <button\n                                  class="printMe btn btn-danger waves-effect waves-light btn-rounded btn-secondary"\n                                  ><i class="fal fa-remove"></i>\n                                  Exit </button>    \n                          </div>\n                      </div >\n                  </div>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>'},wIep:function(t,e,n){"use strict";n.r(e),e.default='<div class="card">\n  <div class="card-body">\n    <form class="form-horizontal">\n      <div class="row">\n\n        <div class="col-md-3 ">\n          <div class="">\n            <div><i class="fal fa-calendar-alt"></i>&nbsp; <span class="text-muted">\n                Voucher Date</span>\n              \x3c!-- <h2 class="font-light">{{CashSummaryHeader.VoucherDate | date: \'yyyy-MM-dd\'}}</h2> --\x3e\n              <h2 class="font-light">{{CashSummaryHeader.VoucherDate | date:\'dd/MM/yyyy\'}}</h2>\n            </div>\n          </div>\n        </div>\n\n        <div class="col-md-3">\n          <div class="form-group">\n            <label for="NewVoucherNo">Voucher No.</label>\n            <input type="number" class="form-control" name="NewVoucherNo" [(ngModel)]="CashSummaryHeader.NewVoucherNo"\n              readonly>\n          </div>\n        </div>\n\n        <div class="col-md-3">\n          <div class="form-group">\n            <label for="">Master Ledger</label>\n            <select class="form-control mr-auto mt-2 mt-lg-0" name="AccountCodeMaster"\n              [(ngModel)]="CashSummaryHeader.AccountCodeMaster"\n              (change)="getAccountName(CashSummaryHeader.AccountCodeMaster)" [disabled]="isDisabled">\n              <option [ngValue]="null">Select</option>\n              <option *ngFor="let ledger of MasterLedger" [value]="ledger.AccountCode">\n                {{ledger.AccountName}}\n              </option>\n            </select> \n          </div>\n        </div>\n\n        <div class="col-md-3 ">\n          <div class="form-group">\n            <label for="">Type</label>\n            <select class="form-control mr-auto mt-2 mt-lg-0" name="TransType" [(ngModel)]="CashSummaryHeader.TransType"\n              (change)="getcashvouchertable()" [disabled]="isDisabled">\n              <option [ngValue]="null">Select</option>\n              <option *ngFor="let type of TypeList" [value]="type.Code">\n                {{type.Name}}\n              </option>\n            </select>\n          </div>\n        </div>\n\n      </div>\n    </form>\n    <div class="row">\n      <div class="col-md-12">\n        <div class="table-responsive">\n          <table class="table table-bordered">\n            <thead class="topbar">\n              <tr>\n                <th>Account Name</th>\n                <th>Debit</th>\n                <th>Credit</th>\n                <th>Naration</th>\n                <th>Ref. No</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <select class="form-control" [(ngModel)]="CashSummaryHeader.AccountCode">\n                    <option [ngValue]="null">Select</option>\n                    <option *ngFor="let name of ApplicationNameList" [value]="name.acc_code">\n                      {{name.acc_name}}</option>\n                  </select>\n                </td>\n\n                <td>\n                  <input type="text" class="form-control" [(ngModel)]="CashSummaryHeader.DebitAmount"\n                    [readonly]="CashSummaryHeader.TransType == \'REC\'">\n                </td>\n\n                <td><input type="text" class="form-control" [(ngModel)]="CashSummaryHeader.CreditAmount"\n                    [readonly]="CashSummaryHeader.TransType == \'PAY\'"></td>\n                <td>\n                  \x3c!-- <select class="form-control" [(ngModel)]="CashSummaryHeader.Narration">\n                    <option [ngValue]="null">Select</option>\n                    <option *ngFor="let list of NarrationList" [value]="list.Narration">\n                      {{list.Narration}}</option>\n                  </select> --\x3e\n                  \x3c!-- <ng-select [items]="NarrationList" bindLabel="Narration" [virtualScroll]="true"\n                  bindValue="Narration" appendTo="body" placeholder="Select"\n                  [(ngModel)]="CashSummaryHeader.Narration" [typeahead]="typeahead">\n                  </ng-select> --\x3e\n                  <input list="narrationList" class="form-control" name="narration" [(ngModel)]="CashSummaryHeader.Narration"/>\n                    <datalist id="narrationList">\n                      <option [ngValue]="null">Select</option>\n                      <option *ngFor="let list of NarrationList" [value]="list.Narration">\n                        {{list.Narration}}</option>\n                    </datalist>\n                </td>\n                <td><input type="text" class="form-control" [(ngModel)]="CashSummaryHeader.ReceiptNo"></td>\n                <td>\n                  <ng-container *ngIf="EnableAdd">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                       (click)="PostCashVoucher();">\n                      <i class="far fa-plus-circle" style="padding-right:10px"></i>Add</button>\n                  </ng-container>\n                  <ng-container *ngIf="EnableSave">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                      (click)="PutCashVoucher();">\n                      <i class="fas fa-save" style="padding-right:10px"></i>Save</button>\n                  </ng-container>\n                  <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary" (click)="clear()">\n                    <i class="far fa-window-close" style="padding-right:10px"></i>Clear</button>\n                  \x3c!-- <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" type="button"\n                    (click)="clear();"> Clear</button> --\x3e\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    \x3c!-- <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary" type="button"\n      (click)="PostCashVoucher();"><i class="fal fa-save"></i> Save</button> --\x3e\n  </div>\n</div>\n<div class="card" [hidden]="CashSummaryHeader.AccountCodeMaster == null || CashSummaryHeader.TransType == null">\n  <div class="card-body">\n    <div class="row" >\n      <div class="table-responsive">\n        <table class="table table-bordered">\n          <thead class="topbar">\n            <tr>\n              <th>Action</th>\n              <th>Sl. No.</th>\n              <th>Voucher No</th>\n              <th>Account Name</th>\n              <th>Debit</th>\n              <th>Credit</th>\n              <th>Naration</th>\n              <th>Ref. No</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor="let table of CashVoucherList;let i = index">\n              <td><i class="fas fa-edit" title="Edit" (click)="Data(table)" style="padding-right:10px"></i>\n                \x3c!-- <i class="fas fa-trash-alt" title="Delete" style="padding-right:10px" (click)="deleteField(table)" ></i> --\x3e\n                <i class="fal fa-print" (click)="PrintVoucher(table)"></i> </td>\n              <td>{{i+1}}</td>\n              <td>{{table.VoucherNo}}</td>\n              <td>{{table.AccName}}</td>\n              <td>{{table.Debit}}</td>\n              <td>{{table.Credit}}</td>\n              <td>{{table.Narration}}</td>\n              <td>{{table.RefNo}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n<div class="modal fade" id="ReprintCashVoucher" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"\n  aria-hidden="true">\n  <div class="modal-dialog modal-lg" role="document" style="max-width: 1400px">\n    <div class="modal-content">\n      <div class="modal-header">\n        <button type="button" class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary"\n          id="exampleModalLabel" (click)=print()><i class="fal fa-print"></i> Print</button>\n        <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n          <span aria-hidden="true">&times;</span>\n        </button>\n      </div>\n      <div class="print">\n        <span>\n          <div id="DisplayData" [innerHTML]=\'PrintDetails\'></div>\n        </span></div>\n    </div>\n  </div>\n</div>\n\x3c!-- <pre>{{CashSummaryHeader | json}}</pre> --\x3e'},x8xV:function(t,e,n){"use strict";n.r(e),e.default='.card-title {\r\n    margin-bottom: -0.3rem !important;\r\n}\r\n\r\n.table-responsive {\r\n    display: block;\r\n    width: 99.9% !important;\r\n    overflow-x: auto;\r\n    -ms-overflow-style: -ms-autohiding-scrollbar;\r\n}\r\n\r\n.card-header{\r\n    border-radius: 15px !important;\r\n  }\r\n\r\n.card{\r\n    border-radius: 15px !important;\r\n  \r\n  }\r\n\r\n.card-body{ \r\n    padding: 10px 30px 0px 30px !important; \r\n    border-bottom: 2px solid black;\r\n    border-radius: 15px;\r\n  }\r\n\r\n.p-38 { height: 38px; }\r\n\r\n.text-white { color: white;}\r\n\r\n.Pointer { cursor: pointer; }\r\n\r\n.footer {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n.hide{\r\n   display: hide;\r\n  }\r\n\r\n.show{\r\n    display: block;\r\n  }\r\n\r\n.accordion .card-header.collapsed:after {\r\n    /* symbol for "collapsed" panels */\r\n    content: "\\f067"; \r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    transition: .3s transform ease-in-out;\r\n  }\r\n\r\n.accordion .card-header:after {\r\n    font-family: \'FontAwesome\';  \r\n    content: "\\f068";\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    margin-top: -25px;\r\n  }\r\n\r\n.text-red{\r\n    color:red;\r\n  }\r\n\r\n.text-green{\r\n  color:#16d616; \r\n  }\r\n  \r\n  \r\n  '}}]);