(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{"0Kn8":function(e,t,n){"use strict";n.r(t),t.default='<div class="card">\n  <div class="card-body">\n    <form class="form-horizontal">\n      <div class="row">\n        <div class="col-sm-12">\n          <div class="row">\n            <div class="col-sm-6">\n              <div class="form-group">\n                <label class="control-label" for="ReceiptNo">C.R. No.</label>\n                <input type="text" class="form-control" name="ReceiptNo"\n                  [(ngModel)]="CreditrecieptSummaryHeader.ReceiptNo"\n                  (change)="GetReceiptValues(CreditrecieptSummaryHeader.ReceiptNo)" />\n              </div>\n            </div>\n            <div class="col-sm-6">\n              <div class="form-group">\n                <label class="control-label" for="ReceiptDate">CR. Date</label>\n                <input type="text" class="form-control" readonly name="ReceiptDate"\n                  [(ngModel)]="CreditrecieptSummaryHeader.ReceiptDate" />\n              </div>\n            </div>\n          </div>\n\n          <div class="row">\n            <div class="col-sm-6">\n              <div class="form-group">\n                <label class="control-label" for="CustomerName">Customer Name</label>\n                <input type="text" class="form-control" readonly name="CustomerName"\n                  [(ngModel)]="CreditrecieptSummaryHeader.CustomerName"/>\n              </div>\n            </div>\n            <div class="col-sm-6">\n              <div class="form-group">\n                <label class="control-label" for="Address1">Address</label>\n                <input type="text" class="form-control" readonly name="Address1"\n                  [(ngModel)]="CreditrecieptSummaryHeader.Address1" />\n                <input type="text" class="form-control" readonly name="Address2"\n                  [(ngModel)]="CreditrecieptSummaryHeader.Address2" />\n                <input type="text" class="form-control" readonly name="Address3"\n                  [(ngModel)]="CreditrecieptSummaryHeader.Address3" />\n              </div>\n            </div>\n          </div>\n          <div class="row">\n            <div class="col-sm-6">\n              <div class="form-group">\n                <label class="control-label" for="PhoneNo">Phone No</label>\n                <input type="text" class="form-control" readonly name="PhoneNo"\n                  [(ngModel)]="CreditrecieptSummaryHeader.PhoneNo" />\n              </div>\n            </div>\n            <div class="col-sm-6">\n              <div class="form-group">\n                <label class="control-label" for="MobileNo">Mobile No</label>\n                <input type="text" class="form-control" readonly name="MobileNo"\n                  [(ngModel)]="CreditrecieptSummaryHeader.MobileNo" />\n              </div>\n            </div>\n          </div>\n          <div class="row">\n            <div class="col-sm-6">\n              <div class="form-group">\n                <label class="control-label" for="Amount">Amount</label>\n                <input type="text" class="form-control" readonly name="Amount"\n                  [(ngModel)]="CreditrecieptSummaryHeader.Amount" />\n              </div>\n            </div>\n            <div class="col-sm-6">\n              <div class="form-group">\n                <label class="control-label" for="Remarks">Remarks</label>\n                <input type="text" class="form-control" name="Remarks"\n                  [(ngModel)]="CreditrecieptSummaryHeader.Remarks" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="row">\n          <div class="col-sm-6">\n            <a class="btn btn-success waves-effect waves-light btn-rounded btn-secondary MT-2" href="javascript:void(0)"\n              (click)="PostCancelReceipt()">\n              Cancel Credit Receipt\n            </a>\n          </div>\n        </div>\n\n      </div>\n    </form>\n  </div>\n</div>\n\x3c!-- <pre>{{CreditrecieptSummaryHeader | json}}</pre> --\x3e'},"0qk6":function(e,t,n){"use strict";n.r(t);var i=n("mrSG"),r=n("fXoL"),a=n("ofXK"),s=n("3Pt+"),o=n("tyNb"),l=n("09Xa"),d=n("5nbR"),c=n("JmCs"),m=n("GUC0"),p=n.n(m),u=n("E2Nj"),h=n("NFKh"),b=n("3TGi"),y=n("qlSq"),g=n("eya4"),v=n("wd/R");let C=class{constructor(e,t,n,i,r,a,s,o){this.fb=e,this.creditreceiptservice=t,this.appConfigService=n,this._CustomerService=i,this._paymentservice=r,this._router=a,this._masterService=s,this.datepipe=o,this.leavePage=!1,this.ccode="",this.bcode="",this.model={option:"Current Fin Year"},this.NoRecordsPaymentSummary=!1,this.toggleCurFinYear=!0,this.EnableCustomer=!1,this.EnablePayments=!1,this.togglePrevFinYear=!1,this.EnableReadOnlyControls=!1,this.EnableSubmitButton=!0,this.BalanceAmount=0,this.EnableReprint=!1,this.pageName="CR",this.PrevYear=[{YearCode:2012},{YearCode:2013},{YearCode:2014},{YearCode:2015},{YearCode:2016},{YearCode:2017},{YearCode:2018}],this.CurYear=[{YearCode:v(new Date).format("YYYY")}],this.CreditrecieptSummaryHeader={BillNo:null,LastReceiptNo:null,ReceiptDate:null,CustomerName:null,FinancialYear:null,SalesAmount:null,PaidAmount:null,BalanceAmount:null,CurrentBalance:null,Address1:null,Address2:null,Address3:null,City:null,State:null,Pincode:null,MobileNo:null,PhoneNo:null,EmailID:null,PANNo:null,IDType:null,DateOfBirth:null,lstOfPayment:[]},this.ReprintData={ReceiptNo:null},this.EnableCustomerTab=!0,this.ToggleCustomer=!1,this.TogglePayments=!1,this.EnablePaymentsTab=!1,this.creditList=[],this.PaymentSummary=[],this.radioItems=["Current Fin Year","Previous Fin Years"],this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=h.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(h.enc.Utf8),this.bcode=h.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(h.enc.Utf8)}confirmBeforeLeave(){return 1!=this.leavePage||!!confirm("You have unsaved changes! If you leave, your changes will be lost.")&&(this.leavePage=!1,!0)}ngOnInit(){this.getApplicationDate(),this.DetailsToCustomerComp(),this.GetPaymentSummary(),this.CreditrecieptSummaryHeader.FinancialYear=2019,this.CreditrecieptForm=this.fb.group({BillNo:null,LastReceiptNo:null,ReceiptDate:null,CustomerName:null,FinancialYear:2019,SalesAmount:null,PaidAmount:null,BalanceAmount:null,CurrentBalance:null,Address1:null,Address2:null,Address3:null,City:null,State:null,Pincode:null,MobileNo:null,PhoneNo:null,EmailID:null,PANNo:null,IDType:null,DateOfBirth:null}),this._paymentservice.castParentJSON.subscribe(e=>{this.paymentDetails=e,0==this.isEmptyObject(this.paymentDetails)&&null!=this.isEmptyObject(this.paymentDetails)&&(this.paymentPaidAmt=0,this.paymentDetails.lstOfPayment.forEach(e=>{this.paymentPaidAmt+=parseInt(e.PayAmount)}),this.CreditrecieptSummaryHeader.CurrentBalance=Number(this.CreditrecieptSummaryHeader.SalesAmount-this.CreditrecieptSummaryHeader.PaidAmount-this.paymentPaidAmt))}),this.CreditrecieptForm.controls.FinancialYear.setValue(v(new Date).format("YYYY"))}ToggleCustomerData(){1==this.ToggleCustomer&&(this.EnableCustomerTab=!1)}TogglePaymentData(){1==this.ToggleCustomer?this.EnablePaymentsTab=!1:p()("Warning","Please select Customer Details to continue","warning")}DetailsToCustomerComp(){this._CustomerService.cast.subscribe(e=>{this.Customer=e,0==this.isEmptyObject(this.Customer)&&null!=this.isEmptyObject(this.Customer)?(this.EnableCustomerTab=!0,this.ToggleCustomer=!0,this.EnablePaymentsTab=!0,this.TogglePayments=!0,this.leavePage=!0):(this.EnableCustomerTab=!0,this.ToggleCustomer=!1,this.EnablePaymentsTab=!0,this.TogglePayments=!1)})}isEmptyObject(e){return e&&0===Object.keys(e).length}Changed(e){"Current Fin Year"===e?(this.toggleCurFinYear=!0,this.togglePrevFinYear=!1,this.model.option=e,this.CreditrecieptForm.reset(),this.CreditrecieptForm.controls.FinancialYear.setValue(v(new Date).format("YYYY"))):"Previous Fin Years"===e&&(this.toggleCurFinYear=!1,this.togglePrevFinYear=!0,this.model.option=e,this.CreditrecieptForm.reset())}getApplicationDate(){this._masterService.getApplicationDate().subscribe(e=>{let t=e;this.applicationDate=t.applcationDate,this.CreditrecieptSummaryHeader.ReceiptDate=this.datepipe.transform(this.applicationDate,"dd/MM/yyyy")})}getvalues(e){null==e.value.FinancialYear||""==e.value.FinancialYear?alert("Please select the financial year"):(this.BalanceAmount=0,this.creditreceiptservice.getValues(e.value.BillNo,e.value.FinancialYear).subscribe(e=>{this.creditList=e,this.CreditrecieptSummaryHeader=e,null!=this.creditList&&(this.leavePage=!0,this.CreditrecieptSummaryHeader.SalesAmount=Math.round(this.creditList.SalesAmount),this.CreditrecieptSummaryHeader.BalanceAmount=Math.round(this.creditList.BalanceAmount),this.BalanceAmount=Math.round(this.creditList.BalanceAmount),0==this.BalanceAmount?(this.EnablePayments=!1,p()("warning","Balance Amount is NIL","warning")):this.EnablePayments=!0,this.CreditrecieptSummaryHeader.CurrentBalance=Number(this.CreditrecieptSummaryHeader.SalesAmount-this.CreditrecieptSummaryHeader.PaidAmount),this._CustomerService.getCustomerDtls(this.creditList.CustID).subscribe(e=>{const t=e;null!=t&&(this._CustomerService.sendCustomerDtls_To_Customer_Component(t),this._paymentservice.inputData(this.CreditrecieptSummaryHeader),this.EnablePaymentsTab=!1,this.EnableCustomer=!0)}))}))}GetPaymentSummary(){this._paymentservice.CastPaymentSummaryData.subscribe(e=>{this.PaymentSummary=e,0==this.isEmptyObject(this.PaymentSummary)&&null!=this.isEmptyObject(this.PaymentSummary)?null==this.PaymentSummary.Amount?(this.NoRecordsPaymentSummary=!1,this.EnableSubmitButton=!0):(this.NoRecordsPaymentSummary=!0,this.EnableSubmitButton=!1):(this.NoRecordsPaymentSummary=!1,this.EnableSubmitButton=!0)})}CreditPost(){if(null==this.CreditrecieptSummaryHeader.BillNo)p()("warning","Please enter bill number to continue","warning");else if(0==this.CreditrecieptSummaryHeader.lstOfPayment.length)p()("warning","Please enter payment details","warning");else{confirm("Do you want to save Credit Receipt??")&&(this.creditreceiptservice.postCreditReceipt(this.CreditrecieptSummaryHeader.FinancialYear,this.CreditrecieptSummaryHeader.BillNo,this.CreditrecieptSummaryHeader.lstOfPayment).subscribe(e=>{this.Save=e,p()("success","Credit Receipt No:"+this.Save.ReceiptNo+" Saved Successfully!!!","success"),"/credit-receipt/credit-receipt"===this._router.url?(this.EnableReprint=!0,this.ReprintData={ReceiptNo:this.Save.ReceiptNo},this.creditreceiptservice.SendReceiptNoToComp(this.ReprintData),this.clearCreditReceiptComponents()):this.EnableReprint=!1}),this.leavePage=!1)}}clearCreditReceiptComponents(){this._CustomerService.SendCustDataToEstComp(null),this._paymentservice.SendPaymentSummaryData(null),this._CustomerService.sendCustomerDtls_To_Customer_Component(null),this._paymentservice.outputData(null),this._paymentservice.inputData(null),this._paymentservice.OutputParentJSONFunction(null),this.EnablePaymentsTab=!0,this.CreditrecieptSummaryHeader.FinancialYear=2019,this.CreditrecieptSummaryHeader.BillNo=null,this.CreditrecieptSummaryHeader.LastReceiptNo=null,this.CreditrecieptSummaryHeader.ReceiptDate=null,this.CreditrecieptSummaryHeader.SalesAmount=null,this.CreditrecieptSummaryHeader.CustomerName=null,this.CreditrecieptSummaryHeader.PaidAmount=null,this.CreditrecieptSummaryHeader.BalanceAmount=null}ngOnDestroy(){this._CustomerService.SendCustDataToEstComp(null),this._CustomerService.sendCustomerDtls_To_Customer_Component(null),this._paymentservice.outputData(null),this._paymentservice.inputData(null),this._paymentservice.OutputParentJSONFunction(null),this._paymentservice.SendPaymentSummaryData(null)}};C.ctorParameters=()=>[{type:s.FormBuilder},{type:c.a},{type:y.a},{type:u.a},{type:b.a},{type:o.c},{type:g.a},{type:a.DatePipe}],C=i.a([Object(r.Component)({selector:"app-credit-receipt",template:i.b(n("JPDJ")).default,styles:[i.b(n("5ViO")).default]}),i.c("design:paramtypes",[s.FormBuilder,c.a,y.a,u.a,b.a,o.c,g.a,a.DatePipe])],C);let f=class{constructor(e,t){this.creditreceiptservice=e,this.appConfigService=t,this.ccode="",this.bcode="",this.leavePage=!1,this.CreditrecieptSummaryHeader={CompanyCode:this.ccode,BranchCode:this.bcode,ReceiptNo:null,ReceiptDate:null,CustomerName:null,CustID:null,Address1:null,Address2:null,Address3:null,City:null,State:null,Pincode:null,MobileNo:null,PhoneNo:null,Amount:null,Remarks:null},this.ReceiptList=[],this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=h.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(h.enc.Utf8),this.bcode=h.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(h.enc.Utf8)}ngOnInit(){}GetReceiptValues(e){this.creditreceiptservice.getReceiptValues(e).subscribe(e=>{this.ReceiptList=e,null!=this.ReceiptList&&(this.CreditrecieptSummaryHeader=this.ReceiptList,this.leavePage=!0)})}clear(){this.CreditrecieptSummaryHeader.ReceiptNo=null,this.CreditrecieptSummaryHeader.CustomerName=null,this.CreditrecieptSummaryHeader.ReceiptDate=null,this.CreditrecieptSummaryHeader.PhoneNo=null,this.CreditrecieptSummaryHeader.Remarks=null,this.CreditrecieptSummaryHeader.Amount=null,this.CreditrecieptSummaryHeader.Address1=null,this.CreditrecieptSummaryHeader.Address2=null,this.CreditrecieptSummaryHeader.Address3=null,this.CreditrecieptSummaryHeader.MobileNo=null}PostCancelReceipt(){null==this.CreditrecieptSummaryHeader.ReceiptNo?p()("warning","Please enter Receipt Number","warning"):confirm("Do you want to cancel the Credit Receipt - "+this.CreditrecieptSummaryHeader.ReceiptNo)&&this.creditreceiptservice.postCancelReceipt(this.CreditrecieptSummaryHeader).subscribe(e=>{this.Post=e,p()("success",this.CreditrecieptSummaryHeader.ReceiptNo+" - Cancelled Succeccfully","success"),this.clear(),this.leavePage=!1},e=>{this.clear(),this.CreditrecieptSummaryHeader.ReceiptNo=null})}confirmBeforeLeave(){return 1!=this.leavePage||!!confirm("You have unsaved changes! If you leave, your changes will be lost.")&&(this.leavePage=!1,!0)}};f.ctorParameters=()=>[{type:c.a},{type:y.a}],f=i.a([Object(r.Component)({selector:"app-cancel-credit-receipt",template:i.b(n("0Kn8")).default,styles:[i.b(n("hJZN")).default]}),i.c("design:paramtypes",[c.a,y.a])],f);let S=class{constructor(e,t){this.Service=e,this._router=t,this.ShowHide=!0,this.SummaryHeader={ReceiptNo:null,BillNo:null,BalanceAmount:null,BilledDate:null},this.ReceiptDetails=[],this.Linesarray=[],this.ShowroomList=[]}ngOnInit(){"/credit-receipt/reprint-credit-receipt"==this._router.url?this.ShowHide=!0:this.Service.castReceiptNo.subscribe(e=>{this.ReprintData=e,0==this.isEmptyObject(this.ReprintData)&&null!=this.isEmptyObject(this.ReprintData)&&(this.getReceiptPrint(this.ReprintData.ReceiptNo),this.Service.SendReceiptNoToComp(null)),this.ShowHide=!1})}isEmptyObject(e){return e&&0===Object.keys(e).length}getReceiptPrint(e){e?this.Service.getReceiptValuesForPrint(e).subscribe(e=>{this.ReceiptDetails=e,this.Linesarray=this.ReceiptDetails.lstOfPayment,this.getShowroomDetails(),this.getbillDetails(this.ReceiptDetails.BillNo,this.ReceiptDetails.FinYear),$("#exampleModal").modal("show")}):(alert("Please enter ReceiptNo"),$("#exampleModal").modal("hide"))}getShowroomDetails(){this.Service.getShowroom().subscribe(e=>{this.ShowroomList=e})}getbillDetails(e,t){this.Service.getValues(e,t).subscribe(e=>{this.BillDetails=e,this.SummaryHeader.BillNo=this.BillDetails.BillNo,this.SummaryHeader.BalanceAmount=this.BillDetails.BalanceAmount})}print(){let e,t;e=document.getElementById("print-section").innerHTML,t=window.open("","_blank","top=0,left=0,height=100%,width=auto"),t.document.open(),t.document.write(`\n      <html>\n        <head>\n          <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">\n          <title>Print tab</title>\n          <style>\n         .htmlPrint{display:none;}\n\n          @media print {\n            .table-bordered\n        {\n            border-style: solid;\n            border: 3px solid rgb(0, 0, 0);\n        }\n        .margin{\n          margin-top:-24px;\n        }\n        .mb{\n          vertical-align:middle;position:absolute;\n        }\n        tr.spaceUnder>td {\n          padding-bottom: 40px !important;\n        }\n        .top {\n          margin-top:10px;\n          border-bottom: 3px solid rgb(0, 0, 0) !important;\n          line-height: 1.6;\n        }\n        .modal-content{\n          font-family: "Times New Roman", Times, serif;\n\n        }\n       .padding-top {\n         padding-top:20px;\n       }\n        .watermark{\n          -webkit-transform: rotate(331deg);\n          -moz-transform: rotate(331deg);\n          -o-transform: rotate(331deg);\n          transform: rotate(331deg);\n          font-size: 15em;\n          color: rgba(255, 5, 5, 0.37);\n          position: absolute;\n          text-transform:uppercase;\n          padding-left: 10%;\n          margin-top:-10px;\n        }\n        .right{\n          text-align:left;\n        }\n        .px-2 {\n          padding-left: 10px !important;\n        }\n        // thead > tr\n        // {\n        //     border-style: solid;\n        //     border: 3px solid rgb(0, 0, 0);\n        // }\n        table tr td.classname{\n          border-right: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr td.bottom{\n          border-bottom: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr td.left{\n          border-left: 3px solid rgb(0, 0, 0) !important;\n        }\n        table tr th.classname{\n          border-right: 3px solid rgb(0, 0, 0) !important;\n        }\n        .divborder {\n          border-right: 3px solid rgb(0, 0, 0) !important;\n          line-height: 1.6;\n        }\n        .lastdivborder{\n          line-height: 1.6;\n        }\n    .border{\n      border-right: 3px solid rgb(0, 0, 0) !important;\n      border-bottom: 3px solid rgb(0, 0, 0) !important;\n    }\n\n    .tdborder{\n      border-right: 3px solid rgb(0, 0, 0) !important;\n    }\n        .invoice {\n          margin-top: 250px;\n      }\n        .card{\n          border-style: solid;\n          border-width: 5px;\n          border: 3px solid rgb(0, 0, 0);\n      }\n        .printMe {\n          display: none !important;\n        }\n      }\n      body{\n            font-size: 15px;\n            line-height: 18px;\n      }\n </style>\n        </head>\n    <body onload="window.print();window.close()">\n    ${e}</body>\n      </html>`),t.document.close()}};S.ctorParameters=()=>[{type:c.a},{type:o.c}],S=i.a([Object(r.Component)({selector:"app-reprint-credit-receipt",template:i.b(n("VGoD")).default,styles:[i.b(n("e+kl")).default]}),i.c("design:paramtypes",[c.a,o.c])],S);const R=[{path:"credit-receipt",canDeactivate:[l.a],canActivate:[d.a],canActivateChild:[d.a],component:C,data:{title:"Credit Receipt",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Credit Receipt"}]}},{path:"cancel-credit-receipt",canDeactivate:[l.a],canActivate:[d.a],canActivateChild:[d.a],component:f,data:{title:"Cancel Credit Receipt",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Cancel Credit Receipt"}]}},{path:"reprint-credit-receipt",canActivate:[d.a],canActivateChild:[d.a],component:S,data:{title:"Reprint Credit Receipt",urls:[{title:"Dashboard",url:"/dashboard"},{title:"Reprint Credit Receipt"}]}}];let P=class{};P=i.a([Object(r.NgModule)({imports:[o.d.forChild(R)],exports:[o.d]})],P);var N=n("OclH"),x=n("GFhY"),D=n("NSaA");n.d(t,"CreditReceiptModule",(function(){return w}));let w=class{};w=i.a([Object(r.NgModule)({declarations:[C,f,S],imports:[a.CommonModule,P,s.FormsModule,s.ReactiveFormsModule,N.CustomerModule,D.a,x.a],schemas:[r.CUSTOM_ELEMENTS_SCHEMA]})],w)},"5ViO":function(e,t,n){"use strict";n.r(t),t.default='.card-header{\r\n    border-radius: 15px !important;\r\n  }\r\n  .card{\r\n    border-radius: 15px !important;\r\n  \r\n  }\r\n  .card-body{ \r\n    padding: 10px 30px 0px 30px !important; \r\n    border-bottom: 2px solid black;\r\n    border-radius: 15px;\r\n  }\r\n  .p-38 { height: 38px; }\r\n  .text-white { color: white;}\r\n  .Pointer { cursor: pointer; }\r\n  .footer {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n  }\r\n  .accordion .card-header:after {\r\n    font-family: \'FontAwesome\';  \r\n    content: "\\f068";\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    \r\n    \r\n  }\r\n  .accordion .card-header.collapsed:after {\r\n    /* symbol for "collapsed" panels */\r\n    content: "\\f067"; \r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n  \r\n    line-height: 1;\r\n    margin-top: -25px;\r\n    transition: .3s transform ease-in-out;\r\n  \r\n  }\r\n  .hide{\r\n   display: hide;\r\n  }\r\n  \r\n\r\n  '},JPDJ:function(e,t,n){"use strict";n.r(t),t.default='  <div style="color: brown; text-align: right; font-style: italic;">\n    <app-lastdocno></app-lastdocno>\n  </div>\n\n<div class="card">\n  <div class="card-body">\n    <form [formGroup]="CreditrecieptForm">\n      <div class="row">\n        <div class="col-sm-6">\n          <div class="form-group">\n            <div class="input-group" *ngFor="let radiobutton of radioItems">\n              <ul class="list-group">\n                <div class="col-md-12">\n                  <label class="form-check-inline">\n                    <input type="radio" name="option" class="form-check-input" [value]="radiobutton"\n                      [checked]="radiobutton === model.option" (change)="Changed(radiobutton)">\n                    <h4 style="margin-top: 5px;"> {{radiobutton}}</h4>\n                  </label>\n                </div>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div class="col-sm-4">\n          <div *ngIf="model.option == \'Current Fin Year\'">\n            <div class="form-group">\n              <label class="control-label" for="FinancialYear">Finacial Year</label>\n              <select class="form-control" formControlName="FinancialYear">\n                <option *ngFor="let _uom of CurYear" [ngValue]="_uom.YearCode">\n                  {{_uom.YearCode}}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div *ngIf="model.option == \'Previous Fin Years\'">\n            <div class="form-group">\n              <label class="control-label" for="UOM">Finacial Year</label>\n              <select class="form-control" formControlName ="FinancialYear">\n                <option [ngValue]="null">Select</option>\n                <option *ngFor="let _fin of PrevYear" [ngValue]="_fin.YearCode">\n                  {{_fin.YearCode}}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="row">\n        <div class="col-sm-3">\n          <div class="form-group">\n            <label class="control-label" for="BillNo">Bill Number</label>\n            \x3c!--  --\x3e\n            <input type="text" class="form-control" formControlName="BillNo"\n              (keyup.enter)="getvalues(CreditrecieptForm)"  [(ngModel)]="CreditrecieptSummaryHeader.BillNo"/>\n          </div>\n        </div>\n      </div>\n      <div class="row">\n        <div class="col-sm-8">\n          <div class="row">\n            <div class="col-sm-6">\n              <div class="form-group">\n                <label class="control-label" for="CustomerName">Customer Name</label>\n                <input type="text" class="form-control" readonly formControlName="CustomerName"\n                  [(ngModel)]="CreditrecieptSummaryHeader.CustomerName" />\n              </div>\n            </div>\n            <div class="col-sm-6">\n              <div class="form-group">\n                <label class="control-label" for="SalesAmount">Sales Amount</label>\n                <input type="text" class="form-control" readonly formControlName="SalesAmount"\n                  [(ngModel)]="CreditrecieptSummaryHeader.SalesAmount" />\n              </div>\n            </div>\n          </div>\n\n          <div class="row">\n            <div class="col-sm-6">\n              <div class="form-group">\n                <label class="control-label" for="PaidAmount">Paid Amount</label>\n                <input type="text" class="form-control" readonly formControlName="PaidAmount"\n                  [(ngModel)]="CreditrecieptSummaryHeader.PaidAmount" />\n              </div>\n            </div>\n            <div class="col-sm-6">\n              <div class="form-group">\n                <label class="control-label" for="BalanceAmount">Balance Amount</label>\n                <input type="text" class="form-control" readonly formControlName="BalanceAmount"\n                  [(ngModel)]="CreditrecieptSummaryHeader.BalanceAmount" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="col-sm-4">\n          <div class="form-group">\n            <label class="control-label" for="ReceiptDate">Receipt Date</label>\n            <input type="text" class="form-control" readonly formControlName="ReceiptDate"\n              [(ngModel)]="CreditrecieptSummaryHeader.ReceiptDate"/>              \n          </div>\n          <div class="form-group">\n            <label class="control-label" for="ReceiptDate">Current Balance</label>\n            <input type="text" class="form-control" readonly formControlName="CurrentBalance"\n              [(ngModel)]="CreditrecieptSummaryHeader.CurrentBalance"/>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n<div id="accordian" class="accordion">\n  <ng-Container *ngIf="EnableCustomer">\n  <div class="card mb-0">\n    <div class="card-header Pointer" (click)="ToggleCustomerData()"\n      [attr.data-toggle]="EnableCustomerTab ? \'\':\'collapse\'" href="#Customer"\n      style="background-color: #fdfdfd; box-shadow: 1px 2px 0px 0px rgba(0, 0, 0, 0.52);"\n      [ngClass]="EnableCustomerTab ? \'collapsed\' : \'\'">\n      <div class="row">\n        <div class="col-md-2 ">\n          <a class="card-title align-middle Pointer" style="color:#0096FF">\n            <i class="fas fa-2x fa-users mr-2 align-middle"></i>\n            <span class="align-middle Pointer"><ins>Customer Details </ins>\n              <div class="tooltipdesign"> <i class="fal fa-question-circle"></i>\n                <span class="tooltiptext tooltip-top">Capture the New customer\n                  information and Existing customer information</span>\n              </div>\n            </span>\n          </a>\n        </div>\n        \x3c!-- <ng-container *ngIf=" ToggleCustomer"> --\x3e\n        <ng-container *ngIf="ToggleCustomer">\n          <div class="col-md-4 pull-right">\n            <h4><span class="align-middle"> Customer: {{Customer.CustName}} </span></h4>\n          </div>\n          <div class="col-md-4 pull-right">\n            <h4><span class="align-middle"> MobileNo: {{Customer.MobileNo}} </span></h4>\n          </div>\n\n        </ng-container>\n        \x3c!-- </ng-container> --\x3e\n      </div>\n    </div>\n    <div id="Customer" class="card-body collapse" [hidden]="EnableCustomerTab">\n      <app-customer>\n      </app-customer>\n    </div>\n  </div>\n  </ng-Container>\n  <br>\n  <ng-Container *ngIf="EnablePayments">\n  <div class="card mb-0">\n    <div class="card-header Pointer" href="#Payment" [ngClass]="EnablePaymentsTab ? \'collapsed\' : \'\'"\n      [attr.data-toggle]="EnablePaymentsTab ? \'\':\'collapse\'"\n      style="background-color: #fdfdfd; box-shadow: 1px 2px 0px 0px rgba(0, 0, 0, 0.52);" (click)="TogglePaymentData()">\n      <div class="row">\n        <div class="col-md-2 ">\n          <a class="card-title align-middle" style="color:#005BFF">\n            \x3c!-- <i class="fal fa-cash-register "></i> --\x3e\n            <i class="fal fa-rupee-sign fa-2x mr-2 align-middle"></i>\n            <span class="align-middle Pointer"><ins>Receipt Details </ins>\n              <div class="tooltipdesign"> <i class="fal fa-question-circle"></i>\n                <span class="tooltiptext tooltip-top">Capture additional payment advance receiving\n                  details</span>\n              </div>\n            </span>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div id="Payment" class="card-body collapse" [hidden]="EnablePaymentsTab">\n      <app-payment [RepairBalanceAmount]="BalanceAmount" [argPageName]="pageName"></app-payment>\n    </div>\n  </div>\n  </ng-Container>\n\n  <div class="row" style="margin-top:25px;">\n        <div class="col-md-2">\n          <button class="btn btn-success waves-effect waves-light btn-rounded btn-secondary MT-2"\n            (click)="CreditPost()" [hidden]="EnableSubmitButton">Save</button>\n            \n        </div>\n      </div>\n </div>\n<ng-container *ngIf="EnableReprint">\n  <app-reprint-credit-receipt></app-reprint-credit-receipt>\n</ng-container>\n\n\x3c!-- <pre>{{CreditrecieptSummaryHeader.lstOfPayment | json}}</pre> --\x3e'},JmCs:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var i=n("mrSG"),r=n("fXoL"),a=n("tk/3"),s=n("NFKh"),o=n("2Vo4"),l=n("qlSq");let d=class{constructor(e,t){this._http=e,this.appConfigService=t,this.ccode="",this.bcode="",this.ReceiptNo=new o.a({}),this.castReceiptNo=this.ReceiptNo.asObservable(),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=s.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(s.enc.Utf8),this.bcode=s.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(s.enc.Utf8)}getValues(e,t){return this._http.get(this.apiBaseUrl+"api/Credit/CreditReceipt/CreditBillDetails/"+this.ccode+"/"+this.bcode+"/"+t+"/"+e)}getReceiptValues(e){return this._http.get(this.apiBaseUrl+"api/Credit/CreditReceipt/CreditReceiptDetails/"+this.ccode+"/"+this.bcode+"/"+e)}getReceiptValuesForPrint(e){return this._http.get(this.apiBaseUrl+"api/Credit/CreditReceipt/CreditReceiptDetailsForPrint/"+this.ccode+"/"+this.bcode+"/"+e)}getShowroom(){return this._http.get(this.apiBaseUrl+"api/master/companymaster/get/"+this.ccode+"/"+this.bcode)}postCancelReceipt(e){let t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/Credit/CreditReceipt/CancelCreditReceipt",t)}postCreditReceipt(e,t,n){let i=JSON.stringify(n);return this._http.post(this.apiBaseUrl+"api/Credit/CreditReceipt/Post/"+e+"/"+t,i)}SendReceiptNoToComp(e){this.ReceiptNo.next(e),e=""}};d.ctorParameters=()=>[{type:a.b},{type:l.a}],d=i.a([Object(r.Injectable)({providedIn:"root"}),i.c("design:paramtypes",[a.b,l.a])],d)},VGoD:function(e,t,n){"use strict";n.r(t),t.default='<div class="row" style="display:block;margin: auto;width: 30%;">\n  <form class="form-horizontal">\n    <div class="col-md-12" *ngIf="ShowHide">\n      <div class="card">\n        <div class="card-body">\n\n          <div class="row">\n            <div class="col-md-12 ">\n              <div class="form-group">\n                <label for="">Receipt Number</label>\n                <input class="form-control" name="ReceiptNo" type="number" [(ngModel)]="SummaryHeader.ReceiptNo">\n              </div>\n            </div>\n          </div>\n          <div class="row">\n            <div class="col-md-12">\n              <div class="form-group">\n                <button class="printMe btn btn-success waves-effect waves-light btn-rounded btn-secondary"\n                  (click)="getReceiptPrint(SummaryHeader.ReceiptNo)"><i class="fal fa-print"></i>\n                  Reprint </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n  <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"\n    aria-hidden="true">\n    <div class="modal-dialog modal-lg" role="document" style="max-width: 1400px">\n      <div class="modal-content">\n        <div class="modal-header">\n          <button type="button"\n            class="btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary"\n            id="exampleModalLabel" (click)=print()><i class="fal fa-print"></i> Print</button>\n          <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n            <span aria-hidden="true">&times;</span>\n          </button>\n        </div>\n        <div class="container invoice-box htmlPrint" id="print-section" style="max-width: 1400px;border-width: 2em">\n          <div class="invoice">\n            <h3 style="text-align:center">CREDIT RECEIPT</h3>\n            <div class="card">\n              <div class="card-body">\n                <div class="row mb-4 margin">\n                  <div class="col-md-4 divborder bottom">\n                    <h5 class="mb-3 top"> CUSTOMER DETAILS:</h5>\n                    <table>\n                      <tbody>\n                        <tr>\n                          <td>Name</td>\n                          <td><b>{{ReceiptDetails.CustomerName}}</b></td>\n                        </tr>\n                        <tr>\n                          <td>Address</td>\n                          <td><b>{{ReceiptDetails.Address1}}</b>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td></td>\n                          <td> <b>{{ReceiptDetails.Address2}}</b></td>\n                        </tr>\n                        <tr>\n                          <td>State</td>\n                          <td><b>{{ReceiptDetails.State}}</b></td>\n                        </tr>\n                        <tr>\n                          <td>Mobile No</td>\n                          <td><b>{{ReceiptDetails.MobileNo}}</b></td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n\n                  <div class="col-md-4 divborder bottom">\n                    <h5 class="mb-3 top">Bill Receipt</h5>\n                    <table>\n                      <tbody>\n                        <tr>\n                          <td>Receipt No</td>\n                          <td><b>{{ReceiptDetails.ReceiptNo }}</b></td>\n                        </tr>\n                        <tr>\n                          <td>Receipt Date</td>\n                          <td><b>{{ReceiptDetails.ReceiptDate | date: \'d/M/y\'}}</b></td>\n                        </tr>\n\n                      </tbody>\n                    </table>\n\n                  </div>\n                  <div class="col-md-4 lastdivborder">\n                    <h5 class="mb-3 top"> SHOWROOM ADDRESS</h5>\n                    <table>\n                      <tbody>\n                        <tr>\n                          <td>Name</td>\n                          <td><b>{{ShowroomList.CompanyName }}</b></td>\n                        </tr>\n                        <tr class="spaceUnder">\n                          <td>Address</td>\n                          <td class="mb" style="width: 150px;\n                                                  word-break: break-all;white-space: normal;">\n                            <b>{{ShowroomList.Address1}}</b></td>\n\n                        </tr>\n                        <tr>\n                          <td></td>\n                          <td><b>{{ShowroomList.Address2}}</b>\n                        </tr>\n                        \x3c!-- <tr>\n                          <td>State</td>\n                          <td><b>{{ShowroomList.State}}</b></td>\n                        </tr>\n                        <tr>\n                          <td>Code</td>\n                          <td><b>{{ShowroomList.StateCode}}</b></td>\n                        </tr> --\x3e\n                        <tr>\n                          <td>Phone</td>\n                          <td><b>{{ShowroomList.PhoneNo}}</b></td>\n                        </tr>\n                        <tr>\n                          <td>TIN</td>\n                          <td><b>{{ShowroomList.TinNo}}</b></td>\n                        </tr>\n                        <tr>\n                          <td>E-mail</td>\n                          <td><b>{{ShowroomList.EMailID}}</b></td>\n                        </tr>\n                        <tr>\n                          <td>Website</td>\n                          <td><b>{{ShowroomList.Website}}</b></td>\n                        </tr>\n\n                      </tbody>\n\n                    </table>\n\n                  </div>\n                </div>\n                <div class="row">\n                  <div class="col-md-12">\n                    <div *ngIf="ReceiptDetails.CFlag==\'Y\'" class="watermark">Cancelled</div>\n                    <div class="table-responsive">\n                      <table class="table table-bordered table-striped">\n                        <thead>\n                          <tr>\n                            <th style="text-align: center">Original/Duplicate</th>\n\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <td>Received with thanks from Mr./Mrs./M/s. <b>{{ReceiptDetails.CustomerName}}</b>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>The Sum of Rs.<b>{{ReceiptDetails.Amount}} ( {{ReceiptDetails.Amount |numberToWords }}\n                                )</b>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td> Towards the Bill Number: <b>{{SummaryHeader.BillNo}}</b> Dated:\n                              <b>{{ReceiptDetails.BilledDate | date: \'d/M/y\'}}</b></td>\n                          </tr>\n                          <tr>\n                            <td>Customer Credit Balance Amount Rs :<b>{{ReceiptDetails.CreditBalance}}</b>\n                            </td>\n                          </tr>\n                          <tr *ngFor="let _array of Linesarray">\n                            <td *ngIf="_array.PayMode==\'D\'">By cheque/DD : <b>{{_array.PayAmount}}</b> , cheque/DD No.\n                              <b>{{_array.ChequeNo}}</b>,\n                              Dated: <b>{{_array.ChequeDate | date: \'d/M/y\'}}</b>, Drawn on <b>{{_array.Bank}}</b>\n                            </td>\n                            <td *ngIf="_array.PayMode==\'C\'">Cash Received: <b>{{_array.PayAmount}}</b></td>\n                            <td *ngIf="_array.PayMode==\'EP\'">E-Payment: <b>{{_array.PayAmount}}</b></td>\n                            <td *ngIf="_array.PayMode==\'R\'">By CC: {{_array.PayAmount}} ,{{_array.BankName}} ,\n                              {{_array.Bank}} , {{_array.CardType}} , {{_array.CardAppNo}} </td>\n\n                            <td *ngIf="_array.PayMode==\'Q\'">By cheque/DD: <b>{{_array.PayAmount}} , ChequeNo:\n                                {{_array.ChequeNo}} , Dated: {{_array.ChequeDate | date: \'d/M/y\'}} , Drawn on:\n                                {{_array.Bank}}</b></td>\n\n                          </tr>\n                          <tr>\n                            <td>Balance Amount: <b>{{ReceiptDetails.BalanceAmount | round}}</b> </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                <div class="row" *ngIf="ReceiptDetails.lstOfPayment">\n                  <div class="col-md-6">\n                    <div>Operator Code :{{ReceiptDetails.lstOfPayment[0].OperatorCode}}<b></b></div>\n                  </div>\n                </div>\n\n                <div class="row">\n                  <div class="col-md-6 float-left">\n                    <div class="mb-5"></div>\n                    Customer Signature\n                  </div>\n                  <div class="col-md-6" style="text-align: right">\n                    <div class="mb-5">For {{ShowroomList.CompanyName}}</div>\n                    Authorized Signature\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>'},"e+kl":function(e,t,n){"use strict";n.r(t),t.default='body{\r\n    font-size: 5px;\r\n    line-height: 18px;\r\n}\r\n.watermark {\r\n  transform: rotate(331deg);\r\n  font-size: 10em;\r\n  color: rgba(255, 5, 5, 0.37);\r\n  position: absolute;\r\n  text-transform:uppercase;\r\n  padding-left: 10%;\r\n}\r\nthead > tr {\r\n  color:black !important;\r\n  font-weight: 300;\r\n  background-color: blanchedalmond;\r\n}\r\n.modal-header{\r\npadding-left: 20rem !important;\r\n}\r\n.material-switch > input[type="checkbox"] {\r\ndisplay: none;   \r\n}\r\ntr.spaceUnder>td {\r\npadding-bottom: 0px;\r\n}\r\n.material-switch > label {\r\ncursor: pointer;\r\nheight: 0px;\r\nposition: relative; \r\nwidth: 40px;  \r\n}\r\n.material-switch > label::before {\r\nbackground: rgb(0, 0, 0);\r\nbox-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.5);\r\nborder-radius: 8px;\r\ncontent: \'\';\r\nheight: 16px;\r\nmargin-top: -8px;\r\nposition:absolute;\r\nopacity: 0.3;\r\ntransition: all 0.4s ease-in-out;\r\nwidth: 40px;\r\n}\r\n.material-switch > label::after {\r\nbackground: rgb(255, 255, 255);\r\nborder-radius: 16px;\r\nbox-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3);\r\ncontent: \'\';\r\nheight: 24px;\r\nleft: -4px;\r\nmargin-top: -8px;\r\nposition: absolute;\r\ntop: -4px;\r\ntransition: all 0.3s ease-in-out;\r\nwidth: 24px;\r\n}\r\n.material-switch > input[type="checkbox"]:checked + label::before {\r\nbackground: inherit;\r\nopacity: 0.5;\r\n}\r\n.material-switch > input[type="checkbox"]:checked + label::after {\r\nbackground: inherit;\r\nleft: 20px;\r\n}\r\n\r\n'},hJZN:function(e,t,n){"use strict";n.r(t),t.default=""}}]);