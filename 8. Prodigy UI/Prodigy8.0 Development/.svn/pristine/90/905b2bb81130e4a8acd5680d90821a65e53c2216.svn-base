(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{"5fg7":function(t,e,i){"use strict";i.d(e,"a",(function(){return c}));var a=i("mrSG"),n=i("fXoL"),s=i("tk/3"),r=i("NFKh"),o=i("qlSq");let c=class{constructor(t,e,i){this.url=t,this.http=e,this.appConfigService=i,this.ccode="",this.bcode="",this.AuthJWT=localStorage.getItem("Token"),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getValueFromTop(t,e){return this.http.get(this.url+"list?$top="+t+"&$skip="+e)}getSearchCustomer(t,e,i){return this.http.post(this.url+"searchByParam?$top="+t+"&$skip="+e,i)}getCB(){this.ccode=r.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(r.enc.Utf8),this.bcode=r.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(r.enc.Utf8)}getAll(){return this.http.get(this.url+"list")}get(){return this.http.get(this.url)}getCount(){return this.http.get(this.url+"count")}getSearchCount(t,e){return this.http.get(this.url+"searchByParamCount/"+t+"/"+e+"/"+this.ccode+"/"+this.bcode)}getSearchDataPagination(t,e,i){var a=JSON.stringify(i);return this.http.post(this.url+"searchByParam?$top="+t+"&$skip="+e,a)}getValueFromId(t){return this.http.get(this.url+"GetByID/"+t+"/"+this.ccode+"/"+this.bcode)}post(t){var e=JSON.stringify(t);return this.http.post(this.url+"post",e)}put(t){var e=JSON.stringify(t);return this.http.put(this.url+"put?id="+t.ID,e)}tempPut(t){var e=JSON.stringify(t);return this.http.put(this.url+"post",e)}delete(t){return this.http.delete(this.url+"delete/?id="+t)}deleteRecord(t){var e='{"id":'+t+"}";return this.http.post(this.url+"delete",e)}getReportData(t,e){var i=JSON.stringify('{ "SimpleTextBox":"sample","BranchSelector":"RJR", "fromDate":"01/01/2019","toDate":"01/01/2019","Summary":1,"Detailde":0}');return this.http.post(this.url+"&top="+t+"&skip="+e,i)}getReportCount(){var t=JSON.stringify('{"SimpleTextBox":"sample","BranchSelector":"RJR", "fromDate":"01/01/2019","toDate":"01/01/2019","Summary":1,"Detailde":0}');return this.http.post(this.apiBaseUrl+"api/genericreport/count?id=1",t)}getList(t,e){return this.http.get(this.url+"list?pageIndex="+e+"&pageSize="+t)}getPdfExcelReport(){var t=JSON.stringify('{"SimpleTextBox":"sample","BranchSelector":"RJR", "fromDate":"01/01/2019","toDate":"01/01/2019","Summary":1,"Detailde":0}');return this.http.post(this.apiBaseUrl+"api/genericreport/allrecords?id=1",t)}};c.ctorParameters=()=>[{type:String},{type:s.b},{type:o.a}],c=a.a([Object(n.Injectable)(),a.c("design:paramtypes",[String,s.b,o.a])],c)},KG7w:function(t,e,i){"use strict";i.r(e),e.default='<div class="row">\n  <div class="col-md-12">\n    <div class="card">\n      <div class="card-body">\n        <form [formGroup]="MachineForm" class="form-horizontal">\n          <div class="row">\n            <div class="col-md-3">\n              <div class="form-group">\n\n                <label class="control-label" for="MachineName">Machine <span class="textRed"> <i\n                      class="fas fa-star-of-life"></i></span></label>\n                <select class="form-control" formControlName="MachineName" [(ngModel)]="MachineListData.MachineName">\n                  <option [ngValue]="null">Select</option>\n                  <option *ngFor="let _MachineList of MachineList" [ngValue]="_MachineList.ComputerName">\n                    {{_MachineList.ComputerName}}\n                  </option>\n                </select>\n              </div>\n            </div>\n            <div class="col-md-3">\n              <div class="form-group">\n                <label class="control-label" for="BillCounter">Counter<span class="textRed"> <i\n                      class="fas fa-star-of-life"></i></span>\n                </label>\n                <select class="form-control" formControlName="BillCounter" [(ngModel)]="MachineListData.BillCounter">\n                  <option [ngValue]="null">Select</option>\n                  <option *ngFor="let _List of BillCounterList" [ngValue]="_List.BillCode">\n                    {{_List.BillCode}}\n                  </option>\n                </select>\n              </div>\n            </div>\n\n          </div>\n          <div class="row">\n            <div class="col-md-6">\n              <div class="form-group">\n                <button type="submit" class="btn btn-success waves-effect waves-light btn-rounded btn-secondary"\n                  (click)="onSubmit(MachineForm)"><i class="fal fa-save"></i> Submit</button>\n                <button type="submit"\n                  class="btn btn-danger  waves-effect waves-light btn-rounded btn-secondary">Cancel</button>\n              </div>\n            </div>\n            <div class="col-md-6" style="text-align:right">\n              <span class="textRed"> <i class="fas fa-star-of-life"></i></span> Mandatory fields\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  <pre>{{ MachineListData | json }}</pre>\n</div>\n'},QkTh:function(t,e,i){"use strict";i.r(e),e.default=""},keE6:function(t,e,i){"use strict";i.r(e);var a=i("mrSG"),n=i("fXoL"),s=i("ofXK"),r=i("3Pt+"),o=i("tyNb"),c=i("5nbR"),l=i("tk/3"),h=i("qLqq"),d=i("5fg7"),u=i("qlSq");let p=class extends d.a{constructor(t,e){super(h.a.API_ENDPOINT+"api/Master/MachineRegistration/",t,e),this._http=t}getMachine(){return this._http.get(h.a.API_ENDPOINT+"api/Master/MachineRegistration/List")}getMachineDropdown(){return this._http.get(h.a.API_ENDPOINT+"api/Views/ListofMachineNames")}getBillCounter(){return this._http.get(h.a.API_ENDPOINT+"api/Views/ListofBillcodeNames")}deleteMachine(t){return this._http.delete(h.a.API_ENDPOINT+"api/Master/MachineRegistration/Delete/"+t)}};p.ctorParameters=()=>[{type:l.b},{type:u.a}],p=a.a([Object(n.Injectable)({providedIn:"root"}),a.c("design:paramtypes",[l.b,u.a])],p);let g=class{constructor(t,e){this._router=t,this._MachineRegistrationService=e}ngOnInit(){this.getMachineLists()}addMachineRecord(){this._router.navigate(["machine-registration/add"])}getMachineLists(){this._MachineRegistrationService.getMachine().subscribe(t=>{this.MachineList=t})}deleteMachineRecord(t){alert(t),confirm("Do you want to delete")&&this._MachineRegistrationService.deleteMachine(t).subscribe(e=>{console.log("success"+t),this.getMachineLists()})}};g.ctorParameters=()=>[{type:o.c},{type:p}],g=a.a([Object(n.Component)({selector:"app-machine-registration",template:a.b(i("ywPH")).default,styles:[a.b(i("uS3j")).default]}),a.c("design:paramtypes",[o.c,p])],g);var m=i("5eHb");let b=class{constructor(t,e,i,a){this.fb=t,this._MachineRegistrationService=e,this._router=i,this.toastr=a,this.hasErrors=!1,this.MachineListData={MachineName:null,BillCounter:null}}ngOnInit(){this.getMachine(),this.getBillCounter(),this.MachineForm=this.fb.group({MachineName:null,BillCounter:null})}getMachine(){this._MachineRegistrationService.getMachineDropdown().subscribe(t=>{this.MachineList=t,console.log(this.MachineList)})}getBillCounter(){this._MachineRegistrationService.getBillCounter().subscribe(t=>{this.BillCounterList=t})}onSubmit(t){null==t.value.MachineName||""===t.value.MachineName?alert("Please select Machine Name"):null==t.value.BillCounter||""===t.value.BillCounter?alert("Please select Bill Counter"):(this.errors=[],this._MachineRegistrationService.post(t.value).subscribe(t=>{this.successfulSave=!0,this.toastr.success("New Record Added Succcessfully","Success!"),this._router.navigate(["/machine-registration"])},t=>{this.successfulSave=!1}))}};b.ctorParameters=()=>[{type:r.FormBuilder},{type:p},{type:o.c},{type:m.b}],b=a.a([Object(n.Component)({selector:"app-manage-machine-registration",template:a.b(i("KG7w")).default,styles:[a.b(i("QkTh")).default]}),a.c("design:paramtypes",[r.FormBuilder,p,o.c,m.b])],b);const f=[{path:"",canActivate:[c.a],canActivateChild:[c.a],component:g,data:{title:"Machine-Registration",urls:[{title:"Dashboard",url:"javascript:void(0)"},{title:"Machine-Registration"}]}},{path:"",canActivate:[c.a],canActivateChild:[c.a],children:[{path:"add",data:{title:"Manage - Machine-Registration",urls:[{title:"Machine-Registration",url:"/machine-registration"},{title:"Add"}]},component:b},{path:"edit/:id",data:{title:"Manage - Machine-Registration",urls:[{title:"Machine-Registration",url:"/machine-registration"},{title:"Edit"}]},component:b}]}];let v=class{};v=a.a([Object(n.NgModule)({imports:[o.d.forChild(f)],exports:[o.d]})],v),i.d(e,"MachineRegistrationModule",(function(){return M}));let M=class{};M=a.a([Object(n.NgModule)({declarations:[g,b],imports:[s.CommonModule,v,r.FormsModule,r.ReactiveFormsModule]})],M)},qLqq:function(t,e,i){"use strict";i.d(e,"a",(function(){return a}));class a{}a.API_ENDPOINT="http://192.168.10.202/Magnawebpos/",a.Pwd="#SDAQ@$%^&*BNHJK"},uS3j:function(t,e,i){"use strict";i.r(e),e.default=".my-custom-scrollbar {\r\n    position: relative;\r\n    height: 300px;\r\n    overflow: auto;\r\n    }\r\n    .card-header{\r\n        border-radius: 15px !important;\r\n      }\r\n    .card{\r\n        border-radius: 15px !important;\r\n      \r\n      }\r\n    .card-body{ \r\n        padding: 10px 30px 0px 30px !important; \r\n        border-bottom: 2px solid black;\r\n        border-radius: 15px;\r\n      }"},ywPH:function(t,e,i){"use strict";i.r(e),e.default='<div class="row">\n  <div class="col-md-12">\n    <div class="card">\n      <div class="card-body">\n        <div class="row">\n          <div class="col-md-5">\n            <h3>Machine Registration</h3>\n          </div>\n          <div class="col-md-4"></div>\n          <div class="col-md-3">\n            <button class="btn btn-success float-right" (click)="addMachineRecord()">\n              Add\n            </button>\n\n          </div>\n        </div>\n        <h6 class="card-subtitle"></h6>\n        <div class="table-responsive my-custom-scrollbar">\n          <table class="table table-bordered">\n            <thead class="topbar">\n              <tr>\n                \x3c!-- <th>ID</th>--\x3e\n               \n                <th>Sl.No</th>\n                <th>Machine</th>\n                <th>Counter</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              \x3c!-- <tr *ngFor="let kar of Location | search: searchText | paginate: { itemsPerPage:top, totalItems:MainCount, currentPage: p }" [ngClass]="{\'btn-primary\': cust.ID == currentId }"> --\x3e\n              <tr *ngFor="let List of MachineList; let i=index">\n                \x3c!-- <td>{{currency.ID}}</td>--\x3e\n               <td>{{i+1}}</td>\n                <td>{{List.MachineName}}</td>\n                <td>{{List.BillCounter}}</td>\n                <td>\n                  <i class="fas fa-trash-alt pointer" style="color:red" title="Delete" (click)="deleteMachineRecord(List.ObjID)"></i> \n                \n                  \x3c!-- <i class="far fa-pencil-alt pointer mr-4" style="color:orange" title="Edit"></i> --\x3e\n                    \x3c!-- <i class="fas fa-window-close pointer" style="color:red" title="Close"></i> --\x3e\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n'}}]);