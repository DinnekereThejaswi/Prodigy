(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"+OR5":function(e,t,a){"use strict";a.d(t,"a",(function(){return d}));var n=a("mrSG"),s=a("2Vo4"),r=a("fXoL"),o=a("tk/3"),i=a("NFKh"),l=a("qlSq");let d=class{constructor(e,t){this._http=e,this.appConfigService=t,this.ccode="",this.bcode="",this.ItemLinesSummaryData=new s.a({}),this.cast=this.ItemLinesSummaryData.asObservable(),this.SRNoToReprintComp=new s.a({}),this.castSRNoToReprintComp=this.SRNoToReprintComp.asObservable(),this.SRBillNoToReprintComp=new s.a({}),this.castSRBillNoToReprintComp=this.SRBillNoToReprintComp.asObservable(),this.SRHide=new s.a(!1),this.castSRHide=this.SRHide.asObservable(),this.SREnablePrint=new s.a(!1),this.castSREnablePrint=this.SREnablePrint.asObservable(),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=i.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(i.enc.Utf8),this.bcode=i.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(i.enc.Utf8)}getBilledBranch(){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/BilledBranch?companyCode="+this.ccode+"&branchCode="+this.bcode)}GetsalesBillNo(e){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/Get?companyCode="+this.ccode+"&branchCode="+this.bcode+"&billNo="+e)}post(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/SalesReturnEst/Post",t)}getSalesReturnDetails(e){return this._http.get(this.apiBaseUrl+"api/SalesReturn/Get/"+this.ccode+"/"+this.bcode+"/"+e)}ConfirmSR(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/SalesReturn/Post",t)}getSearchParams(){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/searchParams")}getAttachSalesReturnList(e,t){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/GetSRAttachSearch?companyCode="+this.ccode+"&branchCode="+this.bcode+"&searchType="+e+"&searchValue="+t)}getSalesReturnAttachedList(e){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/GetAttachedSR?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}PostAttachementSalesReturn(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/SalesReturnEst/PostSRAttachment",t)}deleteSRAttachment(e){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/RemoveAttachment?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}getSRList(e,t){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/GetAllSRAttach?companyCode="+this.ccode+"&branchCode="+this.bcode+"&$top="+e+"&$skip="+t)}getSRForPrint(e){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/GetAttachedSRForPrint?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}getSRForPrintTotal(e){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/GetAttachedSRTotalForPrint?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}getSRBill(e){return this._http.get(this.apiBaseUrl+"api/SalesReturn/GetDetByBillNo/"+this.ccode+"/"+this.bcode+"/"+e)}CancelSRBill(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/SalesReturn/CancelSRBill",t)}getSRPrintbyEstNo(e){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/Print/"+this.ccode+"/"+this.bcode+"/"+e)}getSRPrintbyBillNo(e){return this._http.get(this.apiBaseUrl+"api/SalesReturn/Print/"+this.ccode+"/"+this.bcode+"/"+e)}getSRPrintDotMatrixbyBillNo(e){return this._http.get(this.apiBaseUrl+"api/SalesReturn/DotMatrixPrint/"+this.ccode+"/"+this.bcode+"/"+e)}getSREstNoList(){return this._http.get(this.apiBaseUrl+"api/SalesReturnEst/GetAllSREst/"+this.ccode+"/"+this.bcode)}deleteSREstNo(e){return this._http.delete(this.apiBaseUrl+"api/SalesReturnEst/Delete/"+this.ccode+"/"+this.bcode+"/"+e)}sendItemDatatoItemComp(e){this.ItemLinesSummaryData.next(e),e=""}SendSRNoToReprintComp(e){this.SRNoToReprintComp.next(e),e=""}SendSRBillNoToReprintComp(e){this.SRBillNoToReprintComp.next(e),e=""}SendSRToHide(e){this.SRHide.next(e),e=""}SendSREnablePrint(e){this.SREnablePrint.next(e),e=""}};d.ctorParameters=()=>[{type:o.b},{type:l.a}],d=n.a([Object(r.Injectable)({providedIn:"root"}),n.c("design:paramtypes",[o.b,l.a])],d)},"/i8d":function(e,t,a){"use strict";a.d(t,"a",(function(){return d}));var n=a("mrSG"),s=a("tk/3"),r=a("2Vo4"),o=a("fXoL"),i=a("NFKh"),l=a("qlSq");let d=class{constructor(e,t){this._http=e,this.appConfigService=t,this.ccode="",this.bcode="",this.apiBaseUrl="",this.SalesURL=this.apiBaseUrl+"api/Masters/Salesman?companyCode="+this.ccode+"&branchCode="+this.bcode,this.EstNo=new r.a(""),this.SubjectEstNo=this.EstNo.asObservable(),this.NewExistingEstNo=new r.a(""),this.SubjectNewExistingEstNo=this.NewExistingEstNo.asObservable(),this.OrderAttachmentSummaryData=new r.a({}),this.CastOrderAttachmentSummaryData=this.OrderAttachmentSummaryData.asObservable(),this.SRAttachmentSummaryData=new r.a({}),this.CastSRAttachmentSummaryData=this.SRAttachmentSummaryData.asObservable(),this.NewExistingEstNoCtrls=new r.a(!1),this.CastNewExistingEstNoCtrls=this.NewExistingEstNoCtrls.asObservable(),this.OldGoldAttachmentSummaryData=new r.a({}),this.CastOldGoldAttachmentSummaryData=this.OldGoldAttachmentSummaryData.asObservable(),this.paymentorReceipt=new r.a(""),this.SubjectpaymentorReceipt=this.paymentorReceipt.asObservable(),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=i.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(i.enc.Utf8),this.bcode=i.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(i.enc.Utf8)}getEstimationDetailsfromAPI(e){return this._http.get(this.SalesURL+e)}getEstimationOrderDetailsfromAPI(e){return this._http.get(this.apiBaseUrl+"api/sales/estimation/getOrderForSales/"+e)}postSalesBilling(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/SalesBilling/Post",t)}postdifferenceDiscountAmt(e,t,a,n){return this._http.post(this.apiBaseUrl+"api/SalesBilling/ReceivableCalc?companyCode="+a+"&branchCode="+n+"&estimateNo="+e+"&differenceDiscountAmt="+t,null)}getBillNoDetails(e){return this._http.get(this.apiBaseUrl+"api/SalesBilling/Print/"+this.ccode+"/"+this.bcode+"/"+e)}getBillNo(e,t){return this._http.get(this.apiBaseUrl+"api/SalesBilling/AllBill/"+this.ccode+"/"+this.bcode+"/"+e+"/"+t)}SendEstNo(e){this.EstNo.next(e),e=""}SendNewExistingEstNo(e){this.NewExistingEstNo.next(e),e=""}SendOrderAttachmentSummaryData(e){this.OrderAttachmentSummaryData.next(e),e=""}SendSRAttachmentSummaryData(e){this.SRAttachmentSummaryData.next(e),e=""}SendNewExistingEstNoCtrls(e){this.NewExistingEstNoCtrls.next(e),console.log(this.NewExistingEstNoCtrls),e=""}SendOldGoldAttachmentSummaryData(e){this.OldGoldAttachmentSummaryData.next(e),e=""}SendpaymentorReceipt(e){this.paymentorReceipt.next(e),e=""}};d.ctorParameters=()=>[{type:s.b},{type:l.a}],d=n.a([Object(o.Injectable)({providedIn:"root"}),n.c("design:paramtypes",[s.b,l.a])],d)},"5JmU":function(e,t,a){"use strict";a.r(t),t.default=".table-responsive {\r\n    display: block;\r\n    width: 99.9999% !important;\r\n    overflow-x: auto;\r\n}\r\n\r\nfieldset.scheduler-border {\r\n\tborder: 2px groove black !important;\r\n\tpadding: 0 1.4em 1.4em 1.4em !important;\r\n\tmargin: 0 0 1.5em 0 !important;\r\n\tbox-shadow:  0px 0px 0px 0px black;\r\n\t\tborder-radius: 15px;\r\n  }\r\n\r\nlegend.scheduler-border {\r\n\t  font-size: 20px !important;\r\n\t  text-align: left !important;\r\n\t  width:auto;\r\n\t  padding:0 10px;\r\n\t  border-bottom:none;\r\n\t}\r\n  "},Fm4u:function(e,t,a){"use strict";a.r(t),t.default='<form [formGroup]="PaymentForm" class="form-horizontal">\n  <div class="row">\n    <div class="col-lg-12">\n      <div class="form-body">\n        <div class="row" *ngIf="EnableDisPayControls">\n          <div class="col-md-4">\n            <div class="form-group has-success">\n              <label for="PayMode">Payment Mode</label>\n              <select class="form-control mr-auto mt-2 mt-lg-0" #PayMode formControlName="PayMode"\n                (change)="onchangePaymode(PayMode.value)" [(ngModel)]="PaymentHeaders.PayMode">\n                <option [ngValue]="null">Select</option>\n                <option *ngFor="let _paymentModes of PaymentModes" [value]="_paymentModes.PayMode">\n                  {{_paymentModes.PayName}}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <div class="row">\n          <div class="col-md-2"\n            *ngIf="toggle == \'Others\' || toggle == \'SR\' || toggle == \'Scheme\' || toggle == \'OrdAdj\' || toggle == \'PurEst\' || toggle == \'PurBill\' || toggle == \'SREst\' || toggle == \'SRBill\'">\n            <div class="form-group">\n              <label>Ref No</label>\n              <ng-container *ngIf="toggle == \'Scheme\'">\n                <input type="text" class="form-control" (click)="openChitAdjustment()"\n                  [(ngModel)]="PaymentHeaders.RefBillNo" formControlName="RefBillNo" readonly NumberFieldvalidator>\n                <p style="color: red">Click textbox to Open Scheme Adj screen</p>\n              </ng-container>\n              <ng-container *ngIf="toggle == \'OrdAdj\'">\n                <input type="text" class="form-control" (click)="openOrderAdjustment()"\n                  [(ngModel)]="PaymentHeaders.RefBillNo" formControlName="RefBillNo" readonly NumberFieldvalidator>\n                <p style="color: red">Click textbox to Open Order Adj screen</p>\n              </ng-container>\n              <ng-container *ngIf="toggle == \'PurEst\'">\n                <input type="text" class="form-control" (click)="openPurEstAdjustment()"\n                  [(ngModel)]="PaymentHeaders.RefBillNo" formControlName="RefBillNo" readonly NumberFieldvalidator>\n                <p style="color: red">Click textbox to Open Pur.Est. Adj screen</p>\n              </ng-container>\n              <ng-container *ngIf="toggle == \'PurBill\'">\n                <input type="text" class="form-control" (click)="openPurBillAdjustment()"\n                  [(ngModel)]="PaymentHeaders.RefBillNo" formControlName="RefBillNo" readonly NumberFieldvalidator>\n                <p style="color: red">Click textbox to Open Pur.Bill. Adj screen</p>\n              </ng-container>\n              <ng-container *ngIf="toggle == \'SREst\'">\n                <input type="text" class="form-control" (click)="openSREstAdjustment()"\n                  [(ngModel)]="PaymentHeaders.RefBillNo" formControlName="RefBillNo" readonly NumberFieldvalidator>\n                <p style="color: red">Click textbox to Open SR Est. Adj screen</p>\n              </ng-container>\n              <ng-container *ngIf="toggle == \'SRBill\'">\n                <input type="text" class="form-control" (click)="openSRBillAdjustment()"\n                  [(ngModel)]="PaymentHeaders.RefBillNo" formControlName="RefBillNo" readonly NumberFieldvalidator>\n                <p style="color: red">Click textbox to Open SR Bill. Adj screen</p>\n              </ng-container>\n            </div>\n          </div>\n          <ng-container *ngIf="toggle == \'Card\'">\n            <div class="col-md-2">\n              <div class="form-group">\n                <label>Card No</label>\n                <input type="text" class="form-control" [(ngModel)]="PaymentHeaders.RefBillNo" maxlength="16"\n                  formControlName="RefBillNo" placeholder="\u2022\u2022\u2022\u2022 \u2022\u2022\u2022\u2022 \u2022\u2022\u2022\u2022 \u2022\u2022\u2022\u2022" NumberFieldvalidator>\n              </div>\n            </div>\n          </ng-container>\n          <div class="col-md-2" *ngIf="toggle == \'Card\'">\n            <div class="form-group">\n              <label>Card Type</label>\n              \x3c!-- <input type="text" class="form-control" [(ngModel)]="PaymentHeaders.CardType" formControlName="CardType"\n                placeholder="Visa/Master/Amex" AlphabetFieldValidator> --\x3e\n              <select class="form-control" formControlName="CardType" [(ngModel)]="PaymentHeaders.CardType">\n                <option [value]="null">Select</option>\n                <option *ngFor="let _cardType of CardType" [value]="_cardType.card_name">\n                  {{_cardType.card_name}}\n                </option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- <div class="col-md-2" *ngIf="toggle == \'Card\' || toggle == \'Cheque\'">\n            <div class="form-group">\n              <label>Bank name</label>\n\n              <input *ngIf="argPageName !=\'OC\'"  type="text" class="form-control" [(ngModel)]="PaymentHeaders.BankName"\n                formControlName="BankName" placeholder="E.g. HDFC Bank" required AlphabetFieldValidator>\n\n              <select *ngIf="argPageName==\'OC\'" class="form-control" formControlName="BankName"\n                [(ngModel)]="PaymentHeaders.BankName" (change)="getChequeNumber($event.target.value)">\n                <option [value]="null">Select Bank</option>\n                <option *ngFor="let _chequeName of ChequeName" [value]="_chequeName.acc_code">\n                  {{_chequeName.acc_name}}\n                </option>\n              </select>\n\n            </div>\n          </div> --\x3e\n\n          \x3c!--Added as per eshwar request from BankName to Bank Field.Above code is commented--\x3e\n          <div class="col-md-2" *ngIf="toggle == \'Card\' || toggle == \'Cheque\' || toggle == \'DD\'">\n            <div class="form-group">\n              <label>Bank name</label>\n              <input *ngIf="argPageName !=\'OC\' && argPageName !=\'SR\'" type="text" class="form-control"\n                [(ngModel)]="PaymentHeaders.BankName" formControlName="BankName" placeholder="E.g. HDFC Bank" required\n                AlphabetFieldValidator>\n              <select *ngIf="argPageName == \'OC\' || argPageName == \'SR\'" class="form-control" formControlName="BankName"\n                [(ngModel)]="PaymentHeaders.BankName" (change)="getChequeNumber($event.target.value)">\n                <option [value]="null">Select Bank</option>\n                <option *ngFor="let _chequeName of ChequeName" [value]="_chequeName.acc_code">\n                  {{_chequeName.acc_name}}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class="col-md-2" *ngIf="toggle == \'Card\'">\n            <div class="form-group">\n              <label for="Bank">EDC </label>\n              <select class="form-control mr-auto mt-2 mt-lg-0" #Bank formControlName="Bank"\n                [(ngModel)]="PaymentHeaders.Bank" (change)="getBankdetailsonchange(PaymentHeaders.Bank)">\n                <option [ngValue]="null">Select</option>\n                <option *ngFor="let _BankList of BankList" [value]="_BankList.Code">\n                  {{_BankList.BankName}}\n                </option>\n              </select>\n              \x3c!-- <select class="form-control mr-auto mt-2 mt-lg-0" #Bank formControlName="BankName"\n                [(ngModel)]="PaymentHeaders.BankName">\n                <option [ngValue]="null">Select</option>\n                <option *ngFor="let _BankList of BankList" [value]="_BankList.Code">\n                  {{_BankList.BankName}}\n                </option>\n              </select> --\x3e\n            </div>\n          </div>\n          <div class="col-md-2" *ngIf="toggle == \'Card\'">\n            <div class="form-group">\n              <label>Expire Date</label>\n              <input type="text" class="form-control" [(ngModel)]="PaymentHeaders.ExpiryDate"\n                formControlName="ExpiryDate" id="expiry" placeholder="ExpiryDate" bsDatepicker\n                [bsConfig]="ExpirydatePickerConfig">\n            </div>\n          </div>\n          <div class="col-md-2" *ngIf="toggle == \'Others\' || toggle == \'Card\'">\n            <div class="form-group">\n              <label>Card.AppNo</label>\n              <input type="text" class="form-control" [(ngModel)]="PaymentHeaders.CardAppNo" formControlName="CardAppNo"\n                placeholder="Card.AppNo" IntegerDecimalFieldValidator>\n            </div>\n          </div>\n          <div class="col-md-2" *ngIf="toggle == \'Cheque\' || toggle == \'DD\'">\n            <div class="form-group">\n              <label>Chq/ DD No</label>\n              <input *ngIf="argPageName!=\'OC\'" type="text" class="form-control" [(ngModel)]="PaymentHeaders.ChequeNo"\n                formControlName="ChequeNo" placeholder="Enter Chq/ DD No" maxlength="6" required NumberFieldvalidator>\n\n              <ng-select *ngIf="argPageName==\'OC\'" [items]="ChequeNo" bindLabel="chq_no" [virtualScroll]="true"\n                bindValue="chq_no" appendTo="body" placeholder="Select Cheque No" [(ngModel)]="PaymentHeaders.ChequeNo"\n                formControlName="ChequeNo">\n              </ng-select>\n\n            </div>\n          </div>\n          <div class="col-md-2" *ngIf="toggle == \'Cheque\' || toggle == \'DD\'">\n            <div class="form-group">\n              <label>Chq/ DD Date</label>\n              <input type="text" class="form-control" readonly [(ngModel)]="PaymentHeaders.ChequeDate"\n                formControlName="ChequeDate" placeholder="Cheque Date" bsDatepicker [bsConfig]="datePickerConfig">\n            </div>\n          </div>\n          <div class="col-md-2"\n            *ngIf="toggle == \'Card\' || toggle == \'Cash\' || toggle == \'Scheme\' || toggle == \'Cheque\' \n                || toggle == \'DD\' || toggle == \'BC\' || toggle == \'GV\' || toggle == \'SR\' || toggle == \'EP\' || toggle == \'OrdAdj\' || toggle == \'PurEst\' || toggle == \'PurBill\' || toggle == \'SREst\' || toggle == \'SRBill\' || toggle == \'SalesPromotion\' || toggle == \'UPI Payment\' || toggle == \'CREDIT NOTE\'">\n            <div class="form-group">\n              <label>Details/Remarks</label>\n              <input type="text" class="form-control" [(ngModel)]="PaymentHeaders.PayDetails"\n                formControlName="PayDetails" placeholder="Enter Details/Remarks" AlphaNumericFieldValidator>\n            </div>\n          </div>\n          <div class="col-md-2"\n            *ngIf="toggle == \'Card\' || toggle == \'Cash\' || toggle == \'Scheme\' || toggle == \'Cheque\' || \n                toggle == \'DD\' || toggle == \'BC\' || toggle == \'GV\' || toggle == \'SR\' || toggle == \'EP\' || toggle == \'OrdAdj\' || toggle == \'PurEst\' || toggle == \'PurBill\' || toggle == \'SREst\' || toggle == \'SRBill\' || toggle == \'SalesPromotion\' || toggle == \'UPI Payment\' || toggle == \'CREDIT NOTE\'">\n            <div class="form-group">\n              <label>Amount</label>\n              <ng-container\n                *ngIf="toggle == \'OrdAdj\' || toggle == \'PurEst\' || toggle == \'PurBill\' || toggle == \'SREst\' || toggle == \'SRBill\'">\n                <input type="number" min="0" class="form-control"\n                  oninput="this.value = this.value.replace(/[^0-9.]/g, \'\').replace(/(\\..*)\\./g, \'$1\');"\n                  placeholder="{{placeholder}}" [(ngModel)]="PaymentHeaders.PayAmount" formControlName="PayAmount"\n                  readonly>\n              </ng-container>\n              <ng-container\n                *ngIf="toggle != \'OrdAdj\' && toggle != \'PurEst\' && toggle != \'PurBill\' && toggle != \'SREst\' && toggle != \'SRBill\'">\n                <input type="number" min="0" class="form-control"\n                  oninput="this.value = this.value.replace(/[^0-9.]/g, \'\').replace(/(\\..*)\\./g, \'$1\');"\n                  placeholder="{{placeholder}}" [readonly]="readonly" [(ngModel)]="PaymentHeaders.PayAmount"\n                  formControlName="PayAmount">\n              </ng-container>\n            </div>\n          </div>\n          <div class="col-md-2" *ngIf="toggle == \'Others\' || toggle == \'Card\'">\n            <div class="form-group">\n              <label>Card Charges</label>\n              <input type="text" class="form-control" readonly [(ngModel)]="PaymentHeaders.CardCharges"\n                formControlName="CardCharges" placeholder="Card Charges" IntegerDecimalFieldValidator>\n            </div>\n          </div>\n          <div class="col-md-2" *ngIf="toggle == \'Card\'">\n            <div class="form-group">\n              <label>Card Swiped By</label>\n              <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="CardSwipedBy"\n                [(ngModel)]="PaymentHeaders.CardSwipedBy">\n                <option *ngFor="let _salesman of SalesManList" [value]="_salesman.sal_code">\n                  {{_salesman.CodeName}}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class="col-md-2" *ngIf="toggle == \'Others\' || toggle == \'Scheme\'">\n            <div class="form-group">\n              <label>Scheme Code</label>\n              <input type="text" class="form-control" [(ngModel)]="PaymentHeaders.SchemeCode"\n                formControlName="SchemeCode" readonly>\n            </div>\n          </div>\n          <div class="col-md-2" *ngIf="toggle == \'Others\' || toggle == \'Scheme\'">\n            <div class="form-group">\n              <label>Group Code</label>\n              <input type="text" class="form-control" [(ngModel)]="PaymentHeaders.GroupCode" formControlName="GroupCode"\n                readonly>\n            </div>\n          </div>\n          <div class="col-md-2" *ngIf="toggle == \'Others\' || toggle == \'Scheme\'">\n            <div class="form-group">\n              <label>Branch</label>\n              <input type="text" class="form-control" [(ngModel)]="PaymentHeaders.CTBranch" formControlName="CTBranch"\n                AlphabetFieldValidator readonly>\n            </div>\n          </div>\n          <div class="col-md-2">\n            <div class="form-group">\n              <div class="form-actions pd-5" [hidden]="toggle==\'Invalid\'">\n                <button type="submit" style="margin-top:20px;"\n                  class=" btn btn-outline-success waves-effect waves-light btn-rounded btn-outline-secondary"\n                  (click)="addRow(PaymentForm)">Add</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<p *ngIf="!EnableDisPayControls">Order Receipt History</p>\n<div class="table-responsive">\n  <table class="table table-bordered">\n    <thead class="topbar">\n      <tr>\n        <th *ngIf="!EnableDisPayControls">Receipt No</th>\n        <th>Payment Mode</th>\n        <th>Card No/Ref.No</th>\n        <th>Chq/DD No</th>\n        <th>Amount</th>\n        <th>Details</th>\n        <th>Scheme</th>\n        <th>Card Swiped By</th>\n        <th *ngIf="!EnableDisPayControls">Receipt Date</th>\n        <th *ngIf="EnableDisPayControls">Action</th>\n      </tr>\n    </thead>\n    <tbody *ngFor="let _arrayList of ArrayList; let i = index">\n      <td *ngIf="!EnableDisPayControls">{{_arrayList.ReceiptNo}}</td>\n      <td>{{_arrayList.PayMode | payment:_arrayList.PayMode}}</td>\n      <td>{{_arrayList.RefBillNo}}</td>\n      <td>{{_arrayList.ChequeNo}}</td>\n      <td>{{_arrayList.PayAmount | number : \'1.2-2\'}}</td>\n      <td>{{_arrayList.PayDetails | uppercase}}</td>\n      <td>{{_arrayList.SchemeCode}}</td>\n      <td>{{_arrayList.CardSwipedBy}}</td>\n\n      <td *ngIf="!EnableDisPayControls">{{_arrayList.PayDate | date}}</td>\n      <td *ngIf="EnableDisPayControls">\n        <i class="far fa-trash-alt fa-1-5x pointer" style=\'color: red; font-size: 1.5em !important;\'\n          (click)="DeleteRow(i,PaymentForm)"></i>\n      </td>\n    </tbody>\n    <tr *ngIf="!EnableDisPayControls">\n      <td class="border-none"></td>\n      <td class="border-none"></td>\n      <td class="border-none"></td>\n      <td class="border-none"><b>Total:</b></td>\n      <td class="border-none">{{Amount(ArrayList) | number : \'1.2-2\'}}</td>\n      <td class="border-none"></td>\n      <td class="border-none"></td>\n      <td class="border-none"></td>\n      <td class="border-none"></td>\n    </tr>\n    <tr *ngIf="EnableDisPayControls">\n      <td class="border-none"></td>\n      <td class="border-none"></td>\n      <td class="border-none"><b>Total:</b></td>\n      <td class="border-none">{{Amount(ArrayList) | number : \'1.2-2\'}}</td>\n      <td class="border-none"></td>\n      <td class="border-none"></td>\n      <td class="border-none"></td>\n      <td class="border-none"></td>\n    </tr>\n  </table>\n</div>\n\n\n\n<div *ngIf="enableClosedOrderDetails">\n  <button class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary" style="margin-bottom: 25px;"\n    type="button" data-toggle="modal" data-target="#openClosedOrderHistory">\n    <i class="far fa-eye"></i> View Closed Order History</button>\n\n  <div id="openClosedOrderHistory" class="modal fade" role="dialog">\n    <div class="modal-dialog" style="max-width: 1200px;">\n\n      \x3c!-- Modal content--\x3e\n      <div class="modal-content">\n        \x3c!-- <div class="modal-header">\n              <h4 class="modal-title">Update PAN No</h4>\n            </div> --\x3e\n        <div class="modal-body">\n          <fieldset class="scheduler-border">\n            <legend class="scheduler-border"> Closed Receipts Details History</legend>\n            <div class="table-responsive">\n              <table class="table table-bordered">\n                <thead class="topbar">\n                  <tr>\n                    <th>Payment Mode</th>\n                    <th>Card No/Ref.No</th>\n                    <th>Chq/DD No</th>\n                    <th>Amount</th>\n                    <th>Details</th>\n                    <th>Scheme</th>\n                    <th>Card Swiped By</th>\n                    <th>Receipt Close Date</th>\n                    <th>Status</th>\n                  </tr>\n                </thead>\n                <tbody *ngFor="let _arrayListClosed of ArrayListClosed; let i = index">\n                  <td>{{_arrayListClosed.PayMode | payment:_arrayListClosed.PayMode}}</td>\n                  <td>{{_arrayListClosed.RefBillNo}}</td>\n                  <td>{{_arrayListClosed.ChequeNo}}</td>\n                  <td>{{_arrayListClosed.PayAmount | number : \'1.2-2\'}}</td>\n                  <td>{{_arrayListClosed.PayDetails | uppercase}}</td>\n                  <td>{{_arrayListClosed.SchemeCode}}</td>\n                  <td>{{_arrayListClosed.CardSwipedBy}}</td>\n                  <td>{{_arrayListClosed.PayDate | date}}</td>\n                  <th>\n                    <h3 style="color:red">Closed</h3>\n                  </th>\n                </tbody>\n                <tr>\n                  <td class="border-none"></td>\n                  <td class="border-none"></td>\n                  <td class="border-none"><b>Total:</b></td>\n                  <td class="border-none">{{AmountClosed(ArrayListClosed) | number : \'1.2-2\'}}</td>\n                  <td class="border-none"></td>\n                  <td class="border-none"></td>\n                  <td class="border-none"></td>\n                  <td class="border-none"></td>\n                </tr>\n              </table>\n            </div>\n          </fieldset>\n\n        </div>\n        <div class="modal-footer">\n          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n\n</div>\n\n\n\x3c!-- <pre>{{ParentJSON | json}}</pre> --\x3e\n\x3c!-- <ng-container *ngIf="!EnableSubmitButton && EnableDisPayControls">\n<button class="btn btn-success btn-rounded" type="button" (click)="Submit()"><i\n  class="fal fa-save"></i>Submit</button>\n</ng-container> --\x3e\n\x3c!-- <pre>{{PaymentHeaders | json}}</pre>  --\x3e\n\x3c!-- <pre>{{ArrayList | json}}</pre>  --\x3e\n\x3c!-- <pre>{{OrderDetails | json}}</pre> --\x3e\n\n\x3c!-- Scheme Details--\x3e\n\n\x3c!-- The Modal --\x3e\n<form [formGroup]="SchemeAdjustmentForm">\n  <div class="modal fade" id="ChitAdjustment">\n    <div class="modal-dialog" style="max-width: 750px;">\n      <div class="modal-content">\n\n        \x3c!-- Modal Header --\x3e\n        <div class="modal-header">\n          <h3 class="modal-title">Scheme Adjustment <div class="tooltipdesign"> <i class="fal fa-question-circle"></i>\n              <span class="tooltiptext ">Captures information like Saving scheme members, scheme amount, closed\n                amount with Bonus information like Ref.no as Membership number , Scheme Code, Group code etc.</span>\n            </div>\n          </h3>\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\n        </div>\n\n        \x3c!-- Modal body --\x3e\n        <div class="modal-body">\n          <div class="container">\n            <div class="row">\n              <div class="col-md-12 my-6">\n                <div class="card ">\n                  <div class="card-body">\n                    <div class="form-group row">\n                      <label class="col-md-3 col-form-label form-control-label pull-right">Branch Code <div\n                          class="tooltipdesign"> <i class="fal fa-question-circle"></i>\n                          <span class="tooltiptext ">Enrolled Branch of the customer</span>\n                        </div></label>\n                      <div class="col-md-9">\n                        <select class="form-control" (change)="getScheme($event.target.value)"\n                          formControlName="BranchCode" [(ngModel)]="SchemeAdjusment.BranchCode">\n                          <option [value]="null">Select Branch Code</option>\n                          <option *ngFor="let Branch of BranchList" [value]="Branch.BranchCode">\n                            {{Branch.BranchCode}}\n                          </option>\n                        </select>\n\n                      </div>\n                    </div>\n                    <div class="form-group row">\n                      <label class="col-lg-3 col-form-label form-control-label">Scheme Code <div class="tooltipdesign">\n                          <i class="fal fa-question-circle"></i>\n                          <span class="tooltiptext ">Enrolled Scheme of the customer</span>\n                        </div></label>\n                      <div class="col-lg-9">\n                        <select class="form-control" (change)="getGroup($event.target.value)"\n                          formControlName="SchemeCode" [(ngModel)]="SchemeAdjusment.SchemeCode">\n                          <option [value]="null">Select Scheme Code</option>\n                          <option *ngFor="let Scheme of SchemeList" [value]="Scheme.SchemeCode">\n                            {{Scheme.SchemeCode}}\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                    <div class="form-group row">\n                      <label class="col-lg-3 col-form-label form-control-label">Group Code <div class="tooltipdesign">\n                          <i class="fal fa-question-circle"></i>\n                          <span class="tooltiptext ">Group joined by the customer</span>\n                        </div></label>\n                      <div class="col-lg-9">\n                        <select class="form-control" (change)="getMSNNo($event.target.value)"\n                          formControlName="GroupCode" [(ngModel)]="SchemeAdjusment.GroupCode">\n                          <option [value]="null">Select Group Code</option>\n                          <option *ngFor="let Group of GroupList" [value]="Group.GroupCode">\n                            {{Group.GroupCode}}\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                    <div class="form-group row">\n                      <label class="col-lg-3 col-form-label form-control-label">Start MSNo <div class="tooltipdesign">\n                          <i class="fal fa-question-circle"></i>\n                          <span class="tooltiptext ">Starting Membership Number of the Customer</span>\n                        </div></label>\n                      <div class="col-lg-9">\n                        <select class="form-control" (change)="getStartMSNo($event.target.value)"\n                          formControlName="StartMSNNo" [(ngModel)]="SchemeAdjusment.StartMSNNo">\n                          <option [value]="null">Select Start MSNo</option>\n                          <option *ngFor="let MSNNo of MSNNoList" [value]="MSNNo.ChitMembShipNo">\n                            {{MSNNo.ChitMembShipNo}}\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                    <div class="form-group row">\n                      <label class="col-lg-3 col-form-label form-control-label">End MSNo <div class="tooltipdesign"> <i\n                            class="fal fa-question-circle"></i>\n                          <span class="tooltiptext ">Ending Membership Number of the Customer</span>\n                        </div></label>\n                      <div class="col-lg-9">\n                        <select class="form-control" (change)="getchitAmount($event.target.value)"\n                          formControlName="EndMSNNo" [(ngModel)]="SchemeAdjusment.EndMSNNo">\n                          <option [value]="null">Select End MSNo</option>\n                          <option *ngFor="let MSNNo of MSNNoList" [value]="MSNNo.ChitMembShipNo">\n                            {{MSNNo.ChitMembShipNo}}\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                    <div class="form-group row">\n                      <label class="col-lg-3 col-form-label form-control-label">Scheme Amount</label>\n                      <div class="col-lg-9">\n                        <input formControlName="ChitAmount" [(ngModel)]="SchemeAdjusment.ChitAmount"\n                          class="form-control" min="0" type="number" readonly />\n                      </div>\n                    </div>\n                    <div class="form-group row">\n                      <label class="col-lg-3 col-form-label form-control-label">Total Amount</label>\n                      <div class="col-lg-9">\n                        <input formControlName="TotalAmount" [(ngModel)]="SchemeAdjusment.TotalAmount"\n                          class="form-control" type="text" readonly />\n                      </div>\n                    </div>\n                    <div class="form-group row">\n                      <label class="col-lg-3 col-form-label form-control-label">Bonus Amount <div class="tooltipdesign">\n                          <i class="fal fa-question-circle"></i>\n                          <span class="tooltiptext ">Amount given on paying all the installments</span>\n                        </div></label>\n                      <div class="col-lg-9">\n                        <input formControlName="BonusAmount" [(ngModel)]="SchemeAdjusment.BonusAmount"\n                          class="form-control" type="text" readonly />\n                      </div>\n                    </div>\n                    <div class="form-group row">\n                      <label class="col-lg-3 col-form-label form-control-label">Winner Amount <div\n                          class="tooltipdesign"> <i class="fal fa-question-circle"></i>\n                          <span class="tooltiptext ">Amount given for winning in lucky draw</span>\n                        </div></label>\n                      <div class="col-lg-9">\n                        <input formControlName="WinnerAmount" [(ngModel)]="SchemeAdjusment.WinnerAmount"\n                          class="form-control" type="text" readonly />\n                      </div>\n                    </div>\n                    <div class="form-group row">\n                      <label class="col-lg-3 col-form-label form-control-label"></label>\n                      <div class="col-lg-9">\n                        <input type="button" class="btn btn-success waves-effect waves-light btn-rounded btn-secondary"\n                          value="Save Changes" (click)="saveSchemeAdjustment()">\n                        <input type="reset" class="btn btn-danger waves-effect waves-light btn-rounded btn-secondary"\n                          value="Cancel" (click)="CancelSchemeAdjustment()">\n                      </div>\n                    </div>\n                    \x3c!-- {{SchemeAdjusment | json}} --\x3e\n                  </div>\x3c!-- card body --\x3e\n                </div> \x3c!-- card-outline --\x3e\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n\x3c!--Order Adjustment screen--\x3e\n\n<form [formGroup]="AttachOrderForm">\n  <div class="modal fade" id="OrderAdjustment">\n    <div class="modal-dialog " style="max-width: 750px;">\n      <div class="modal-content">\n\n        <div class="modal-header">\n          <h4 class="modal-title">Attach Customer Orders</h4>\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\n        </div>\n\n        <div class="modal-body">\n          <div class="">\n            <div class="row">\n              <div class="col-md-4">\n                <div class="form-group">\n                  <div class="form-group">\n                    <label for="salesPerson">Search By</label>\n                    <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="searchby">\n                      <option [ngValue]="null">Select</option>\n                      <option value="OrderNo">OrderNo</option>\n                      <option value="Customer">Customer</option>\n                      <option value="Date">Date</option>\n                      <option value="Amount">Amount</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="searchText">Search Text</label>\n                  <div class="input-group">\n                    <input class="form-control" id="searchText" formControlName="searchText" placeholder="Search Text"\n                      type="text">\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="Search"></label>\n                  <div class="input-group">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                      (click)="getSearchParamsForOrderAdj(AttachOrderForm)"><i class="fal fa-search"></i>\n                      Search</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class="row">\n              <div class="col-md-12">\n                <div class="table-responsive">\n                  <table class="table table-bordered">\n                    <thead class="topbar">\n                      <tr>\n                        <th>S.No</th>\n                        <th>Order No</th>\n                        <th>Ref No</th>\n                        <th>Customer</th>\n                        <th>Date</th>\n                        <th>Amount</th>\n                      </tr>\n                    </thead>\n\n                    <tbody\n                      *ngFor="let _OrderList of AttachOrderList | paginate: { itemsPerPage:top, totalItems:totalItems, currentPage: pagenumber }; let i = index;">\n                      <tr (click)="OrdAdjselectRecord(_OrderList)" class="pointer">\n                        <td>{{i + 1 }}</td>\n                        <td>{{_OrderList.OrderNo}}</td>\n                        <td>{{_OrderList.RefNo}}</td>\n                        <td>{{_OrderList.Customer}}</td>\n                        <td>{{_OrderList.Date | date:\'dd-MMM-yyyy\'}}</td>\n                        <td>{{_OrderList.Amount | number : \'1.2-2\'}}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div>\n                  <pagination-controls (pageChange)="onOrdAdjPageChange($event)"></pagination-controls>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \x3c!-- Modal footer --\x3e\n        <div class="modal-footer">\n          <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n\n\x3c!--Pur.Est Adjustment screen--\x3e\n\n<form [formGroup]="AttachOldGoldForm">\n  <div class="modal fade" id="PurEstAdj">\n    <div class="modal-dialog " style="max-width: 750px;">\n      <div class="modal-content">\n\n        \x3c!-- Modal Header --\x3e\n        <div class="modal-header">\n          <h4 class="modal-title">Attach Old Gold Estimate</h4>\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\n        </div>\n\n        \x3c!-- Modal body --\x3e\n        <div class="modal-body">\n          <div class="">\n            <div class="row">\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="salesPerson">Search By</label>\n                  <div class="form-group">\n                    <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="searchby">\n                      <option [ngValue]="null">Select</option>\n                      <option *ngFor="let _searchParamsList of SearchParamsList" [value]="_searchParamsList.Key">\n                        {{_searchParamsList.Value}}\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="searchText">Search Text</label>\n                  <div class="input-group">\n                    <input class="form-control" id="searchText" formControlName="searchText" placeholder="Search Text"\n                      type="text">\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="Search"></label>\n                  <div class="input-group">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                      (click)="getSearchParamsforPurEstAdj(AttachOldGoldForm)"><i class="fal fa-search"></i>\n                      Search</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class="row">\n              <div class="col-md-12">\n                <div class="table-responsive">\n                  <table class="table table-bordered">\n                    <thead class="topbar">\n                      <tr>\n                        <th>S.No</th>\n                        <th>EstNo</th>\n                        <th>Customer</th>\n                        <th>Date</th>\n                        <th>Amount</th>\n                        <th>Gross Wt</th>\n                        <th>Quantity</th>\n                      </tr>\n                    </thead>\n\n                    <tbody\n                      *ngFor="let _OldGoldList of AttachOldGoldList | paginate: { itemsPerPage:top, totalItems:totalItems, currentPage: pagenumber }; let i = index;">\n                      <tr (click)="PurEstAdjselectRecord(_OldGoldList)" class="pointer">\n                        <td>{{i + 1 }}</td>\n                        <td>{{_OldGoldList.EstNo}}</td>\n                        <td>{{_OldGoldList.Customer}}</td>\n                        <td>{{_OldGoldList.Date | date:\'MM/dd/yyyy\'}}</td>\n                        <td>{{_OldGoldList.Amount | number : \'1.2-2\'}}</td>\n                        <td>{{_OldGoldList.GrossWt | number : \'1.3-3\'}}</td>\n                        <td>{{_OldGoldList.Qty}}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div>\n                  <pagination-controls (pageChange)="PurEstAdjonPageChange($event)"></pagination-controls>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \x3c!-- Modal footer --\x3e\n        <div class="modal-footer">\n          <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n\n\n\x3c!--Pur.Bill Adjustment screen--\x3e\n\n<form [formGroup]="AttachPurBillForm">\n  <div class="modal fade" id="PurBillAdj">\n    <div class="modal-dialog " style="max-width: 750px;">\n      <div class="modal-content">\n\n        \x3c!-- Modal Header --\x3e\n        <div class="modal-header">\n          <h4 class="modal-title">Attach Purchase Bill</h4>\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\n        </div>\n\n        \x3c!-- Modal body --\x3e\n        <div class="modal-body">\n          <div class="">\n            <div class="row">\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="salesPerson">Search By</label>\n                  <div class="form-group">\n                    <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="searchby">\n                      <option [ngValue]="null">Select</option>\n                      <option *ngFor="let _searchParamsPurBill of SearchParamsPurBill"\n                        [value]="_searchParamsPurBill.Key">\n                        {{_searchParamsPurBill.Value}}\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="searchText">Search Text</label>\n                  <div class="input-group">\n                    <input class="form-control" id="searchText" formControlName="searchText" placeholder="Search Text"\n                      type="text">\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="Search"></label>\n                  <div class="input-group">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                      (click)="getSearchParamsforPurBillAdj(AttachPurBillForm)"><i class="fal fa-search"></i>\n                      Search</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class="row">\n              <div class="col-md-12">\n                <div class="table-responsive">\n                  <table class="table table-bordered">\n                    <thead class="topbar">\n                      <tr>\n                        <th>S.No</th>\n                        <th>BillNo</th>\n                        <th>Customer</th>\n                        <th>Date</th>\n                        <th>Amount</th>\n                        <th>Gross Wt</th>\n                        <th>Quantity</th>\n                      </tr>\n                    </thead>\n\n                    <tbody\n                      *ngFor="let _PurBillList of AttachPurBillList | paginate: { itemsPerPage:top, totalItems:totalItems, currentPage: pagenumber }; let i = index;">\n                      <tr (click)="PurBillAdjselectRecord(_PurBillList)" class="pointer">\n                        <td>{{i + 1 }}</td>\n                        <td>{{_PurBillList.BillNo}}</td>\n                        <td>{{_PurBillList.Customer}}</td>\n                        <td>{{_PurBillList.Date | date:\'MM/dd/yyyy\'}}</td>\n                        <td>{{_PurBillList.Amount | number : \'1.2-2\'}}</td>\n                        <td>{{_PurBillList.GrossWt | number : \'1.3-3\'}}</td>\n                        <td>{{_PurBillList.Quantity}}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div>\n                  <pagination-controls (pageChange)="PurBillAdjonPageChange($event)"></pagination-controls>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \x3c!-- Modal footer --\x3e\n        <div class="modal-footer">\n          <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n\n\x3c!--SR Est Adjustment screen--\x3e\n\n<form [formGroup]="AttachSREstForm">\n  <div class="modal fade" id="SREstModal">\n    <div class="modal-dialog " style="max-width: 900px;">\n      <div class="modal-content">\n\n        \x3c!-- Modal Header --\x3e\n        <div class="modal-header">\n          <h4 class="modal-title">Attach SR Estimate</h4>\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\n        </div>\n\n        \x3c!-- Modal body --\x3e\n        <div class="modal-body">\n          <div class="">\n            <div class="row">\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="salesPerson">Search By</label>\n                  <div class="form-group">\n                    <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="searchby">\n                      <option [ngValue]="null">Select</option>\n                      <option *ngFor="let _searchSEParamsList of SearchSEParamsList" [value]="_searchSEParamsList.Key">\n                        {{_searchSEParamsList.Value}}\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="searchText">Search Text</label>\n                  <div class="input-group">\n                    <input class="form-control" id="searchText" formControlName="searchText" placeholder="Search Text"\n                      type="text">\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="Search"></label>\n                  <div class="input-group">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"><i\n                        class="fal fa-search"></i> Search</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class="row">\n              <div class="col-md-12">\n                <div class="table-responsive">\n                  <table class="table table-bordered">\n                    <thead class="topbar">\n                      <tr>\n                        <th>S.No</th>\n                        <th>SR EstNo</th>\n                        <th>Date</th>\n                        <th>Amount</th>\n                      </tr>\n                    </thead>\n                    <tbody\n                      *ngFor="let _SalesReturnList of AttachSalesReturnList | paginate: { itemsPerPage:top, totalItems:totalItems, currentPage: pagenumber }; let i = index;">\n                      <tr (click)="SREstselectRecord(_SalesReturnList)" class="pointer">\n                        <td>{{i + 1 }}</td>\n                        <td>{{_SalesReturnList.SrEstNo}}</td>\n                        <td>{{_SalesReturnList.Date}}</td>\n                        <td>{{_SalesReturnList.Amount | number : \'1.2-2\'}}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div>\n                  <pagination-controls (pageChange)="SREstonPageChange($event)"></pagination-controls>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \x3c!-- Modal footer --\x3e\n        <div class="modal-footer">\n          <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n\n\n\n\x3c!--SR Bill Adjustment screen--\x3e\n\n<form [formGroup]="AttachSRBillForm">\n  <div class="modal fade" id="SRBillAdj">\n    <div class="modal-dialog " style="max-width: 900px;">\n      <div class="modal-content">\n\n        \x3c!-- Modal Header --\x3e\n        <div class="modal-header">\n          <h4 class="modal-title">Attach SR Bill</h4>\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\n        </div>\n\n        \x3c!-- Modal body --\x3e\n        <div class="modal-body">\n          <div class="">\n            <div class="row">\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="salesPerson">Search By</label>\n                  <div class="form-group">\n                    <select class="form-control mr-auto mt-2 mt-lg-0" formControlName="searchby">\n                      <option [ngValue]="null">Select</option>\n                      <option *ngFor="let _searchSRBillParamsList of SearchSRBillParamsList"\n                        [value]="_searchSRBillParamsList.Key">\n                        {{_searchSRBillParamsList.Value}}\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="searchText">Search Text</label>\n                  <div class="input-group">\n                    <input class="form-control" id="searchText" formControlName="searchText" placeholder="Search Text"\n                      type="text">\n                  </div>\n                </div>\n              </div>\n              <div class="col-md-4">\n                <div class="form-group">\n                  <label for="Search"></label>\n                  <div class="input-group">\n                    <button class="btn waves-effect waves-light btn-rounded btn-outline-secondary"\n                      (click)="getSearchParamsforSRBillAdj(AttachSRBillForm)"><i class="fal fa-search"></i>\n                      Search</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class="row">\n              <div class="col-md-12">\n                <div class="table-responsive">\n                  <table class="table table-bordered">\n                    <thead class="topbar">\n                      <tr>\n                        <th>S.No</th>\n                        <th>SR No</th>\n                        <th>Date</th>\n                        <th>Amount</th>\n                      </tr>\n                    </thead>\n                    <tbody\n                      *ngFor="let _SRBillList of AttachSRBillList | paginate: { itemsPerPage:top, totalItems:totalItems, currentPage: pagenumber }; let i = index;">\n                      <tr (click)="SRBillAdjselectRecord(_SRBillList)" class="pointer">\n                        <td>{{i + 1 }}</td>\n                        <td>{{_SRBillList.SRNo}}</td>\n                        <td>{{_SRBillList.Date}}</td>\n                        <td>{{_SRBillList.Amount | number : \'1.2-2\'}}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div>\n                  <pagination-controls (pageChange)="SRBillAdjonPageChange($event)"></pagination-controls>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \x3c!-- Modal footer --\x3e\n        <div class="modal-footer">\n          <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\x3c!-- <pre>{{arrayLines | json}}</pre> --\x3e'},NSaA:function(e,t,a){"use strict";var n=a("mrSG"),s=a("GFhY"),r=a("fXoL"),o=a("ofXK"),i=a("tyNb");let l=class{};l=n.a([Object(r.NgModule)({imports:[i.d.forChild([])],exports:[i.d]})],l);var d=a("3Pt+"),c=a("3TGi"),h=a("/i8d"),m=a("giQ8"),u=a("db5x"),p=a("+OR5"),g=a("eya4"),b=a("GUC0"),S=a.n(b),y=a("NFKh"),v=a("qLqq"),C=a("5eHb");let P=class{constructor(e,t,a,n,s,o,i,l,d){this._paymentService=e,this.formBuilder=t,this._orderservice=a,this._salesBillingService=n,this.Toastr=s,this._purchaseService=o,this._salesreturnService=i,this._masterService=l,this._router=d,this.orderNo=null,this.modifyOrderNo=null,this.SearchParamsList=[],this.SearchSRBillParamsList=[],this.SearcList=[],this.EnableSubmitButton=!0,this.EnableDisPayControls=!0,this.EnableReadOnlyControls=!1,this.OrderAmount=0,this.RepairBalanceAmount=0,this.repairAmt=0,this.PaidAmountChange=new r.EventEmitter,this.autoFillAmount=0,this.placeholder="",this.password=v.a.Pwd,this.enableClosedOrderDetails=!1,this.ParentJSON=[],this.SchemeData=[],this.ccode="",this.bcode="",this.PaymentSummaryData={Amount:null},this.PaymentHeaders={ObjID:null,CompanyCode:null,BranchCode:null,SeriesNo:null,ReceiptNo:null,SNo:null,TransType:null,PayMode:null,PayDetails:null,PayDate:null,PayAmount:null,RefBillNo:null,PartyCode:null,BillCounter:null,IsPaid:null,Bank:null,BankName:null,ChequeDate:null,CardType:null,ExpiryDate:null,CFlag:null,CardAppNo:null,SchemeCode:null,SalBillType:null,OperatorCode:null,SessionNo:null,UpdateOn:null,GroupCode:null,AmtReceived:null,BonusAmt:null,WinAmt:null,CTBranch:null,FinYear:null,CardCharges:null,ChequeNo:null,NewBillNo:null,AddDisc:null,IsOrderManual:null,CurrencyValue:null,ExchangeRate:null,CurrencyType:null,TaxPercentage:null,CancelledBy:null,CancelledRemarks:null,CancelledDate:null,IsExchange:null,ExchangeNo:null,NewReceiptNo:null,GiftAmount:null,CardSwipedBy:null,Version:null,GSTGroupCode:null,SGSTPercent:null,CGSTPercent:null,IGSTPercent:null,HSN:null,SGSTAmount:null,CGSTAmount:null,IGSTAmount:null,PayAmountBeforeTax:null,PayTaxAmount:null,IsCashMarking:null,ReceivedCash:null,AdditionalDiscount:null},this.SchemeAdjusment={BranchCode:null,SchemeCode:null,GroupCode:null,StartMSNNo:null,EndMSNNo:null,ChitAmount:null,TotalAmount:null,BonusAmount:null,WinnerAmount:null,PayMode:"CT"},this.BranchList=[],this.SchemeList=[],this.BranchCode="",this.GroupList=[],this.SchemeCode="",this.MSNNoList=[],this.GroupCode="",this.StartMSNo="",this.ChitAmount=0,this.TotalAmount=0,this.BonusAmount=0,this.WinnerAmount=0,this.chitAmountList=[],this.EndMSNo="",this.toggle="Invalid",this.DuplicateSchemeAdj=!1,this.ArrayList=[],this.ArrayListClosed=[],this.PaymentList=[],this.ChequeName=[],this.ChequeNo=[],this.payAmount=0,this.PaidAmount=0,this.pagenumber=1,this.top=50,this.skip=(this.pagenumber-1)*this.top,this.SelectedOldGoldList=[],this.submitted=!1,this.SearchParamsPurBill=[],this.SearchSEParamsList=[];let c=new Date,h=c.getMonth(),m=c.getFullYear(),u=c.getDate(),p=new Date(c.setMonth(c.getMonth()+3)),g=p.getMonth(),b=p.getFullYear(),S=p.getDate(),y=new Date(m,h,u),C=new Date(b,g,S);this.datePickerConfig=Object.assign({},{containerClass:"theme-dark-blue",showWeekNumbers:!1,minDate:y,maxDate:C,dateInputFormat:"YYYY-MM-DD"}),this.ExpirydatePickerConfig=Object.assign({},{containerClass:"theme-dark-blue",showWeekNumbers:!1,minDate:y,dateInputFormat:"DD-MM-YYYY"}),this.getCB()}getCB(){this.ccode=y.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(y.enc.Utf8),this.bcode=y.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(y.enc.Utf8)}ngOnInit(){this.AttachOrderForm=this.formBuilder.group({searchby:[null,d.Validators.required],searchText:[null,d.Validators.required]}),this.AttachOldGoldForm=this.formBuilder.group({searchby:[null,d.Validators.required],searchText:[null,d.Validators.required]}),this.AttachPurBillForm=this.formBuilder.group({searchby:[null,d.Validators.required],searchText:[null,d.Validators.required]}),this.AttachSREstForm=this.formBuilder.group({searchby:[null,d.Validators.required],searchText:[null,d.Validators.required]}),this.AttachSRBillForm=this.formBuilder.group({searchby:[null,d.Validators.required],searchText:[null,d.Validators.required]}),this._purchaseService.getSearchParams().subscribe(e=>{this.SearcList=e;for(let t=0;t<this.SearcList.length;t++)t<6&&this.SearchParamsList.push(this.SearcList[t])}),this._paymentService.getSearchParamsSRBill().subscribe(e=>{this.SearchSRBillParamsList=e}),this.getCardType(),this.getPaymentMode(),this.getBank(),this.getSalesMan(),this.getApplicationdate(),this._paymentService.Data.subscribe(e=>{if(this.ParentJSON=e,null!=this.ParentJSON){if("0"!=this.modifyOrderNo&&null!=this.modifyOrderNo||(this.ArrayList=this.ParentJSON.lstOfPayment,this.EnableDisPayControls=!0,this.EnableReadOnlyControls=!1,this._orderservice.castOrderNoFromViewOrderComp.subscribe(e=>{this.orderNo=e,null!=this.orderNo&&(this.EnableDisPayControls=!1,this.EnableReadOnlyControls=!0,"Y"==this.ParentJSON.ClosedFlag?this._paymentService.getClosedOrderReceiptDetails(this.orderNo).subscribe(e=>{const t=e;null!=t&&(this.enableClosedOrderDetails=!0,this.ArrayListClosed=t)}):this.enableClosedOrderDetails=!1)}),this._paymentService.SendPaymentSummaryData(this.PaymentSummaryData)),null!=this.ParentJSON.OrderNo)for(var t=0;t<this.ParentJSON.lstOfOrderItemDetailsVM.length;t++)this.ParentJSON.lstOfOrderItemDetailsVM[t].OrderNo=this.ParentJSON.OrderNo}else"/salesreturn/ConfirmSalesReturn"==this._router.url?this.EnableDisPayControls=!0:this.EnableDisPayControls=!1}),this.PaymentForm=this.formBuilder.group({ObjID:null,CompanyCode:null,BranchCode:null,SeriesNo:0,ReceiptNo:0,SNo:0,TransType:null,PayMode:null,PayDetails:null,PayDate:null,PayAmount:null,RefBillNo:null,PartyCode:null,BillCounter:null,IsPaid:null,Bank:null,BankName:null,ChequeDate:null,CardType:null,ExpiryDate:null,CFlag:null,CardAppNo:null,SchemeCode:null,SalBillType:null,OperatorCode:null,SessionNo:null,UpdateOn:null,GroupCode:null,AmtReceived:null,BonusAmt:null,WinAmt:null,CTBranch:null,FinYear:null,CardCharges:null,ChequeNo:null,NewBillNo:null,AddDisc:null,IsOrderManual:null,CurrencyValue:null,ExchangeRate:null,CurrencyType:null,TaxPercentage:null,CancelledBy:null,CancelledRemarks:null,CancelledDate:null,IsExchange:null,ExchangeNo:null,NewReceiptNo:null,GiftAmount:null,CardSwipedBy:null,Version:null,GSTGroupCode:null,SGSTPercent:null,CGSTPercent:null,IGSTPercent:null,HSN:null,SGSTAmount:null,CGSTAmount:null,IGSTAmount:null,PayAmountBeforeTax:null,PayTaxAmount:null,IsCashMarking:null,ReceivedCash:null,AdditionalDiscount:null}),this.SchemeAdjustmentForm=this.formBuilder.group({BranchCode:null,SchemeCode:null,GroupCode:null,StartMSNNo:null,EndMSNNo:null,ChitAmount:null,TotalAmount:null,BonusAmount:null,WinnerAmount:null,PayMode:null}),this._orderservice.castModifyOrderDetsToOrderComp.subscribe(e=>{this.modifyOrderNo=e,null!=this.modifyOrderNo&&(this.EnableDisPayControls=!1)})}getBankdetailsonchange(e){this.PaymentHeaders.Bank=e}getPaymentMode(){this._paymentService.getPaymentMode(this.argPageName).subscribe(e=>{this.PaymentModes=e})}getCardType(){this._masterService.getCardType().subscribe(e=>{this.CardType=e})}getBank(){this._paymentService.getBank().subscribe(e=>{this.BankList=e})}ngOnDestroy(){this._paymentService.inputData(null)}openChitAdjustment(){"SR"==this.toggle?this.Toastr.warning("Reference No not found for SR Bill.","Alert!"):($("#ChitAdjustment").modal("show"),this.SchemeAdjustmentForm.reset(),this.getBranchList(),this.SchemeList=null,this.GroupList=null,this.MSNNoList=null,this.MSNNoList=null,this.chitAmountList=null)}getBranchList(){this._paymentService.getBranch().subscribe(e=>{this.BranchList=e})}getScheme(e){this.BranchCode=e,this._paymentService.getScheme(this.BranchCode).subscribe(e=>{this.SchemeList=e})}getGroup(e){this.SchemeCode=e,this._paymentService.getGroup(this.BranchCode,this.SchemeCode).subscribe(e=>{this.GroupList=e})}getMSNNo(e){this.GroupCode=e,this._paymentService.getMSNNo(this.BranchCode,this.SchemeCode,this.GroupCode).subscribe(e=>{this.MSNNoList=e})}getStartMSNo(e){this.StartMSNo=e}getchitAmount(e){this.EndMSNo=e,this._paymentService.getchitAmount(this.BranchCode,this.SchemeCode,this.GroupCode,this.StartMSNo,e).subscribe(e=>{this.chitAmountList=e,this.SchemeAdjusment.ChitAmount=this.chitAmountList.ChitAmount,this.SchemeAdjusment.TotalAmount=this.chitAmountList.TotalAmount,this.SchemeAdjusment.BonusAmount=this.chitAmountList.BonusAmount,this.SchemeAdjusment.WinnerAmount=this.chitAmountList.WinnerAount})}onchangePaymode(e){switch(this.PaymentHeaders.PayDetails=null,this.PaymentHeaders.PayAmount=null,this.PaymentHeaders.BankName=null,this.PaymentHeaders.RefBillNo=null,this.readonly=!1,this.placeholder="Enter Amount Received",this.ngOnChanges(),e){case"Q":this.toggle="Cheque","OC"==this.argPageName&&this.getChequeName();break;case"D":this.toggle="DD";break;case"C":this.toggle="Cash";break;case"R":this.toggle="Card";break;case"CT":this.toggle="Scheme",this.readonly=!0,this.placeholder="";break;case"BC":this.toggle="BC";break;case"GV":this.toggle="GV";break;case"SR":this.toggle="SRBill";break;case"EP":this.toggle="EP";break;case"OP":this.toggle="OrdAdj";break;case"PE":this.toggle="PurEst";break;case"PB":this.toggle="PurBill";break;case"SE":this.toggle="SREst";break;case"SR":this.toggle="SRBill";break;case"SP":this.toggle="SalesPromotion";break;case"UPI":this.toggle="UPI Payment";break;case"CN":this.toggle="CREDIT NOTE";break;default:this.toggle="Invalid"}}getApplicationdate(){this._orderservice.getApplicationDate().subscribe(e=>{let t=e;this.ApplicationDate=t.applcationDate,this.PaymentHeaders.ChequeDate=this.ApplicationDate})}addRow(e){"DD"==this.toggle||"Cash"==this.toggle||"BC"==this.toggle||"EP"==this.toggle||"GV"==this.toggle||"SR"==this.toggle||"OrdAdj"==this.toggle||"PurEst"==this.toggle||"PurBill"==this.toggle||"SREst"==this.toggle||"SRBill"==this.toggle||"SalesPromotion"==this.toggle||"UPI Payment"==this.toggle||"CREDIT NOTE"==this.toggle?"BC"!=this.toggle||null!=this.PaymentHeaders.PayDetails&&""!=this.PaymentHeaders.PayDetails?null==this.PaymentHeaders.PayAmount||""==this.PaymentHeaders.PayAmount?this.Toastr.warning("Please enter the amount.","Alert!"):this.SaveAddrow(e,this.toggle):this.Toastr.warning("Please Enter Details.","Alert!"):"Card"==this.toggle?null==this.PaymentHeaders.RefBillNo?this.Toastr.warning("Please enter the card number","Alert!"):this.PaymentHeaders.RefBillNo.length<4?this.Toastr.warning("Please enter valid card no","Alert!"):null==this.PaymentHeaders.BankName?this.Toastr.warning("Please select the bank name","Alert!"):null==this.PaymentHeaders.PayAmount?this.Toastr.warning("Please enter the amount","Alert!"):this.SaveAddrow(e,this.toggle):"Cheque"==this.toggle?null==this.PaymentHeaders.ChequeNo?this.Toastr.warning("Please enter the cheque number","Alert!"):this.PaymentHeaders.ChequeNo.length<6?this.Toastr.warning("Please enter the valid cheque no","Alert!"):null==this.PaymentHeaders.PayAmount?this.Toastr.warning("Please enter the amount","Alert!"):this.SaveAddrow(e,this.toggle):"Scheme"==this.toggle&&(null==this.PaymentHeaders.PayAmount||""==this.PaymentHeaders.PayAmount?this.Toastr.warning("Please enter the amount","Alert!"):this._paymentService.getchitDetails(this.SchemeAdjustmentForm.value.BranchCode,this.SchemeAdjustmentForm.value.SchemeCode,this.SchemeAdjustmentForm.value.GroupCode,this.SchemeAdjustmentForm.value.StartMSNNo,this.SchemeAdjustmentForm.value.EndMSNNo).subscribe(e=>{if(this.SchemeData=e,null!=this.SchemeData)if(this.DuplicateSchemeAdj=!1,this.ParentJSON.lstOfPayment.length>0){for(var t=0;t<this.SchemeData.length;t++){null!=this.ParentJSON.lstOfPayment.find(e=>e.RefBillNo==this.SchemeData[t].RefBillNo)&&(S()("error","Reference bill is already added","error"),this.DuplicateSchemeAdj=!0)}0==this.DuplicateSchemeAdj&&this.saveSchemeAdjustData()}else 0==this.DuplicateSchemeAdj&&this.saveSchemeAdjustData()}))}getChequeName(){this._paymentService.getChequeName().subscribe(e=>{this.ChequeName=e})}getChequeNumber(e){this._paymentService.getChequeList(e).subscribe(e=>{this.ChequeNo=e})}saveSchemeAdjustData(){for(var e=0;e<this.SchemeData.length;e++)this.PaymentHeaders.PayMode=this.SchemeData[e].PayMode,this.PaymentHeaders.RefBillNo=this.SchemeData[e].RefBillNo,this.PaymentHeaders.CTBranch=this.bcode,this.PaymentHeaders.PartyCode=this.SchemeData[e].CTBranch,this.PaymentHeaders.PayAmount=this.SchemeData[e].PayAmount,this.PaymentHeaders.PayDetails=this.SchemeData[e].SchemeCode+"/"+this.SchemeData[e].GroupCode+"/"+this.SchemeData[e].RefBillNo,this.PaymentHeaders.GroupCode=this.SchemeData[e].GroupCode,this.PaymentHeaders.SchemeCode=this.SchemeData[e].SchemeCode,this.PaymentHeaders.PayAmountBeforeTax=this.SchemeData[e].PayAmount,this.PaymentHeaders.CompanyCode=this.ccode,this.PaymentHeaders.BranchCode=this.bcode,this.PaymentHeaders.OperatorCode=localStorage.getItem("Login"),this.PaymentHeaders.AmtReceived=this.SchemeData[e].PayAmount,this.PaymentHeaders.CardSwipedBy="",this.ParentJSON.lstOfPayment.push(this.PaymentHeaders),this._paymentService.outputData(this.PaymentHeaders),this.PaymentHeaders={ObjID:null,CompanyCode:null,BranchCode:null,SeriesNo:null,ReceiptNo:null,SNo:null,TransType:null,PayMode:null,PayDetails:null,PayDate:null,PayAmount:null,RefBillNo:null,PartyCode:null,BillCounter:null,IsPaid:null,Bank:null,BankName:null,ChequeDate:null,CardType:null,ExpiryDate:null,CFlag:null,CardAppNo:null,SchemeCode:null,SalBillType:null,OperatorCode:null,SessionNo:null,UpdateOn:null,GroupCode:null,AmtReceived:null,BonusAmt:null,WinAmt:null,CTBranch:null,FinYear:null,CardCharges:null,ChequeNo:null,NewBillNo:null,AddDisc:null,IsOrderManual:null,CurrencyValue:null,ExchangeRate:null,CurrencyType:null,TaxPercentage:null,CancelledBy:null,CancelledRemarks:null,CancelledDate:null,IsExchange:null,ExchangeNo:null,NewReceiptNo:null,GiftAmount:null,CardSwipedBy:null,Version:null,GSTGroupCode:null,SGSTPercent:null,CGSTPercent:null,IGSTPercent:null,HSN:null,SGSTAmount:null,CGSTAmount:null,IGSTAmount:null,PayAmountBeforeTax:null,PayTaxAmount:null,IsCashMarking:null,ReceivedCash:null,AdditionalDiscount:null};this.EnableSubmitButton=!1,this._paymentService.SendPaymentSummaryData(this.PaymentSummaryData),this.EnableSubmitButton=!1,this.toggle="Invalid",this.PaymentForm.reset(),this._paymentService.OutputParentJSONFunction(this.ParentJSON),this.payAmount=0}SaveAddrow(e,t){if(this.ParentJSON.lstOfPayment.length>0){if(null!=this.ParentJSON.lstOfPayment.find(t=>t.PayMode==e.value.PayMode)&&"Scheme"!=t&&"OrdAdj"!=t&&"PurEst"!=t&&"PurBill"!=t&&"SREst"!=t&&"SRBill"!=t&&"Card"!=t&&"EP"!=t&&"UPI Payment"!=t&&"Cheque"!=t)S()("error",t+" mode is already added. Please select other mode of payment","error");else if("Scheme"==t){null!=this.ParentJSON.lstOfPayment.find(t=>t.RefBillNo==e.value.RefBillNo)?S()("error","Reference bill is already added","error"):this.SavePaymentData(e,t)}else if("OrdAdj"==t||"PurEst"==t||"PurBill"==t||"SREst"==t||"SRBill"==t){null!=this.ParentJSON.lstOfPayment.find(t=>t.RefBillNo==e.value.RefBillNo)?S()("error","Reference bill is already added","error"):this.SavePaymentData(e,t)}else this.SavePaymentData(e,t)}else this.SavePaymentData(e,t)}SavePaymentData(e,t){if(0==this.OrderAmount&&0==this.RepairBalanceAmount)this.PaymentData(e,t);else{if(0!=this.OrderAmount){for(var a=0;a<this.ParentJSON.lstOfPayment.length;a++)this.payAmount+=parseInt(this.ParentJSON.lstOfPayment[a].PayAmount);this.payAmount+=parseInt(e.value.PayAmount),this.payAmount>this.OrderAmount?(S()("warning","Amount is greater than Balance","warning"),this.payAmount=0):this.PaymentData(e,t)}if(0!=this.RepairBalanceAmount){for(a=0;a<this.ParentJSON.lstOfPayment.length;a++)this.payAmount+=parseInt(this.ParentJSON.lstOfPayment[a].PayAmount);this.payAmount+=parseInt(e.value.PayAmount),this.payAmount>this.RepairBalanceAmount?(S()("warning","Payment Amount is greater than Bill Amount","warning"),this.payAmount=0):this.PaymentData(e,t)}}}PaymentData(e,t){"Card"==t?e.value.RefBillNo=e.value.RefBillNo:"OrdAdj"!=t&&"PurEst"!=t&&"PurBill"!=t&&"SREst"!=t&&"SRBill"!=t||(e.value.TransType="S"),e.value.CompanyCode=this.ccode,e.value.BranchCode=this.bcode,e.value.OperatorCode=localStorage.getItem("Login"),this.ParentJSON.lstOfPayment.push(e.value),this.EnableSubmitButton=!1,this._paymentService.outputData(e.value),this._paymentService.SendPaymentSummaryData(this.PaymentSummaryData),this.EnableSubmitButton=!1,this.toggle="Invalid",this.PaymentForm.reset(),this._paymentService.OutputParentJSONFunction(this.ParentJSON),this.payAmount=0}saveSchemeAdjustment(){null==this.SchemeAdjusment.BranchCode?this.Toastr.warning("Please select the branch code","Alert!"):null==this.SchemeAdjusment.SchemeCode?this.Toastr.warning("Please select the scheme code","Alert!"):null==this.SchemeAdjusment.GroupCode?this.Toastr.warning("Please select the group code","Alert!"):null==this.SchemeAdjusment.StartMSNNo?this.Toastr.warning("Please select the start membership no","Alert!"):null==this.SchemeAdjusment.EndMSNNo?this.Toastr.warning("Please select the end membership no","Alert!"):(this.PaymentHeaders.RefBillNo=this.SchemeAdjusment.EndMSNNo,this.PaymentHeaders.PayDetails=this.SchemeAdjusment.GroupCode,this.PaymentHeaders.PayAmount=this.SchemeAdjusment.TotalAmount,this.PaymentHeaders.SchemeCode=this.SchemeAdjusment.SchemeCode,this.PaymentHeaders.GroupCode=this.SchemeAdjusment.GroupCode,this.PaymentHeaders.CTBranch=this.SchemeAdjusment.BranchCode,this.PaymentHeaders.CompanyCode=this.ccode,this.PaymentHeaders.BranchCode=this.bcode,this.PaymentHeaders.OperatorCode=localStorage.getItem("Login"),$("#ChitAdjustment").modal("hide"))}CancelSchemeAdjustment(){$("#ChitAdjustment").modal("hide")}getSalesMan(){this._orderservice.getSalesManData().subscribe(e=>{this.SalesManList=e,this.PaymentHeaders.CardSwipedBy="A"})}DeleteRow(e,t){confirm("Do you want to delete")&&(this.ParentJSON.lstOfPayment.splice(e,1),this.EnableDisableSubmit(),this._paymentService.outputData(t.value),"/credit-receipt/credit-receipt"==this._router.url&&this._paymentService.OutputParentJSONFunction(this.ParentJSON))}EnableDisableSubmit(){this.ArrayList.length<=0&&this._paymentService.SendPaymentSummaryData(null)}Amount(e=[]){let t=0;return e.forEach(e=>{t+=Number(e.PayAmount)}),this.PaymentSummaryData.Amount=t,this.PaymentAmountChanged(t),t}AmountClosed(e=[]){let t=0;return e.forEach(e=>{t+=Number(e.PayAmount)}),this.PaymentSummaryData.Amount=t,t}PaymentAmountChanged(e){this.PaidAmount=e,this.PaidAmountChange.emit(this.PaidAmount)}openOrderAdjustment(){$("#OrderAdjustment").modal("show"),this.getOrderList(this.top,this.skip)}getOrderList(e,t){this.top=50,this.skip=0,this.AttachOrderForm.reset(),this._orderservice.getAllOrdersCount().subscribe(a=>{this.AllRecordCount=a,this.totalItems=this.AllRecordCount.RecordCount,this.totalItems>0&&this._orderservice.getOrderList(e,t).subscribe(e=>{this.AttachOrderList=e})})}onSubmit(){this.submitted=!0,this.AttachOrderForm.invalid}getSearchParamsForOrderAdj(e){null!=e.value.searchby&&""!=e.value.searchby&&null!=e.value.searchText&&""!=e.value.searchText?this._orderservice.getAttachOrderList(e.value.searchby,e.value.searchText).subscribe(e=>{this.AttachOrderList=e,this.top=50,this.skip=0,this.totalItems=50},e=>{400===e.status&&(this.AttachOrderList=[])}):this.Toastr.warning("Please select required fields.","Alert!")}onOrdAdjPageChange(e){this.pagenumber=e;const t=(this.pagenumber-1)*this.top;this.getOrderList(this.top,t)}OrdAdjselectRecord(e){this.PaymentHeaders.RefBillNo=e.RefNo,this.PaymentHeaders.PayAmount=e.Amount,this.PaymentHeaders.CompanyCode=this.ccode,this.PaymentHeaders.BranchCode=this.bcode,this.PaymentHeaders.OperatorCode=localStorage.getItem("Login"),this.PaymentHeaders.PayMode="OP",$("#OrderAdjustment").modal("hide")}openPurEstAdjustment(){$("#PurEstAdj").modal("show"),this.getOGList(this.top,this.skip)}getOGList(e,t){this._purchaseService.getOldGoldList(e,t).subscribe(e=>{this.AttachOldGoldList=e})}PurEstAdjselectRecord(e){this.PaymentHeaders.RefBillNo=e.EstNo,this.PaymentHeaders.PayAmount=e.Amount,this.PaymentHeaders.CompanyCode=this.ccode,this.PaymentHeaders.BranchCode=this.bcode,this.PaymentHeaders.OperatorCode=localStorage.getItem("Login"),this.PaymentHeaders.PayMode="PE",$("#PurEstAdj").modal("hide")}getSearchParamsforPurEstAdj(e){null!=e.value.searchby&&null!=e.value.searchText&&this._purchaseService.getAttachOldGoldList(e.value.searchby,e.value.searchText).subscribe(e=>{this.AttachOldGoldList=e})}PurEstAdjonPageChange(e){this.pagenumber=e;const t=(this.pagenumber-1)*this.top;this.getOGList(this.top,t)}openPurBillAdjustment(){$("#PurBillAdj").modal("show"),this.AttachPurBillForm.reset(),this._paymentService.getSearchParamsPurBill().subscribe(e=>{this.SearchParamsPurBill=e,this._paymentService.getPurBillList().subscribe(e=>{this.AttachPurBillList=e})})}getSearchParamsforPurBillAdj(e){null!=e.value.searchby&&""!=e.value.searchby&&null!=e.value.searchText&&""!=e.value.searchText?this._paymentService.getPurBillSearch(e.value.searchby,e.value.searchText,this.ApplicationDate).subscribe(e=>{this.AttachPurBillList=e,this.top=50,this.skip=0,this.totalItems=50},e=>{400===e.status&&(this.AttachPurBillList=[])}):this.Toastr.warning("Please select required fields.","Alert!")}getSearchParamsforSRBillAdj(e){null!=e.value.searchby&&""!=e.value.searchby&&null!=e.value.searchText&&""!=e.value.searchText?this._paymentService.getSRBillSearch(e.value.searchby,e.value.searchText).subscribe(e=>{this.AttachSRBillList=e,this.top=50,this.skip=0,this.totalItems=50},e=>{400===e.status&&(this.AttachSRBillList=[])}):this.Toastr.warning("Please select required fields.","Alert!")}PurBillAdjonPageChange(e){this.pagenumber=e;this.pagenumber,this.top}PurBillAdjselectRecord(e){this.PaymentHeaders.RefBillNo=e.BillNo,this.PaymentHeaders.PayAmount=e.Amount,this.PaymentHeaders.CompanyCode=this.ccode,this.PaymentHeaders.BranchCode=this.bcode,this.PaymentHeaders.OperatorCode=localStorage.getItem("Login"),this.PaymentHeaders.PayMode="PB",$("#PurBillAdj").modal("hide")}openSREstAdjustment(){$("#SREstModal").modal("show"),this.SearchSEParamsList=[],this._purchaseService.getSearchParams().subscribe(e=>{this.SearcList=e;for(let t=0;t<this.SearcList.length;t++)t<4&&1!=t&&this.SearchSEParamsList.push(this.SearcList[t]);this.getSalesReturnList(this.top,this.skip)})}getSalesReturnList(e,t){this._salesreturnService.getSRList(e,t).subscribe(e=>{this.AttachSalesReturnList=e})}SREstonPageChange(e){this.pagenumber=e;const t=(this.pagenumber-1)*this.top;this.getSalesReturnList(this.top,t)}SREstselectRecord(e){this.PaymentHeaders.RefBillNo=e.SrEstNo,this.PaymentHeaders.PayAmount=e.Amount,this.PaymentHeaders.CompanyCode=this.ccode,this.PaymentHeaders.BranchCode=this.bcode,this.PaymentHeaders.OperatorCode=localStorage.getItem("Login"),this.PaymentHeaders.PayMode="SE",$("#SREstModal").modal("hide")}openSRBillAdjustment(){$("#SRBillAdj").modal("show"),this.AttachSRBillForm.reset(),this._paymentService.getSRBillList().subscribe(e=>{this.AttachSRBillList=e})}SRBillAdjonPageChange(e){this.pagenumber=e;this.pagenumber,this.top}SRBillAdjselectRecord(e){this.PaymentHeaders.RefBillNo=e.SRNo,this.PaymentHeaders.PayAmount=e.Amount,this.PaymentHeaders.CompanyCode=this.ccode,this.PaymentHeaders.BranchCode=this.bcode,this.PaymentHeaders.OperatorCode=localStorage.getItem("Login"),this.PaymentHeaders.PayMode="SR",$("#SRBillAdj").modal("hide")}ngOnChanges(){this.getPaymentMode(),this.PaymentHeaders.PayAmount=this.autoFillAmount}};P.ctorParameters=()=>[{type:c.a},{type:d.FormBuilder},{type:m.a},{type:h.a},{type:C.b},{type:u.a},{type:p.a},{type:g.a},{type:i.c}],n.a([Object(r.Input)(),n.c("design:type",Number)],P.prototype,"OrderAmount",void 0),n.a([Object(r.Input)(),n.c("design:type",Number)],P.prototype,"RepairBalanceAmount",void 0),n.a([Object(r.Input)(),n.c("design:type",Number)],P.prototype,"repairAmt",void 0),n.a([Object(r.Output)(),n.c("design:type",Object)],P.prototype,"PaidAmountChange",void 0),n.a([Object(r.Input)(),n.c("design:type",Number)],P.prototype,"autoFillAmount",void 0),n.a([Object(r.Input)(),n.c("design:type",Object)],P.prototype,"argPageName",void 0),P=n.a([Object(r.Component)({selector:"app-payment",template:n.b(a("Fm4u")).default,styles:[n.b(a("5JmU")).default]}),n.c("design:paramtypes",[c.a,d.FormBuilder,m.a,h.a,C.b,u.a,p.a,g.a,i.c])],P);var f=a("hzby"),A=a("CaAu"),B=a("oOf3");a.d(t,"a",(function(){return N}));let N=class{};N=n.a([Object(r.NgModule)({declarations:[P],imports:[o.CommonModule,l,d.ReactiveFormsModule,d.FormsModule,f.b.forRoot(),s.a,A.a,B.a],exports:[P],schemas:[r.CUSTOM_ELEMENTS_SCHEMA]})],N)},db5x:function(e,t,a){"use strict";a.d(t,"a",(function(){return d}));var n=a("mrSG"),s=a("2Vo4"),r=a("fXoL"),o=a("tk/3"),i=a("NFKh"),l=a("qlSq");let d=class{constructor(e,t){this._http=e,this.appConfigService=t,this.ccode="",this.bcode="",this.purchaseSummaryData=new s.a({}),this.cast=this.purchaseSummaryData.asObservable(),this.CustDtls=new s.a({}),this.castCustNo=this.CustDtls.asObservable(),this.DiamondAmount=new s.a({}),this.castDiamondAmt=this.CustDtls.asObservable(),this.DiamondDetails=new s.a({}),this.castDiamondDetails=this.DiamondDetails.asObservable(),this.StoneDetails=new s.a({}),this.castStoneDetails=this.StoneDetails.asObservable(),this.ReprintPurchaseData=new s.a({}),this.castReprintPurchaseData=this.ReprintPurchaseData.asObservable(),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getCB(){this.ccode=i.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(i.enc.Utf8),this.bcode=i.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(i.enc.Utf8)}getPurchaseDetailsfromAPI(e){return this._http.get(this.apiBaseUrl+"api/purchase/Get?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}post(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/purchase/Post",t)}getSearchParams(){return this._http.get(this.apiBaseUrl+"api/purchase/searchParams")}getOldStone(){return this._http.get(this.apiBaseUrl+"api/purchase/OldStone/"+this.ccode+"/"+this.bcode)}getOldDiamond(){return this._http.get(this.apiBaseUrl+"api/purchase/OldDiamond/"+this.ccode+"/"+this.bcode)}PostAttachementOldGold(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/purchase/PostAttachment",t)}getAttachOldGoldList(e,t){return this._http.get(this.apiBaseUrl+"api/purchase/Search?companyCode="+this.ccode+"&branchCode="+this.bcode+"&searchType="+e+"&searchValue="+t)}getOldGoldttachedList(e){return this._http.get(this.apiBaseUrl+"api/purchase/GetAttachedOGEst?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}deleteOldGoldAttachment(e){return this._http.get(this.apiBaseUrl+"api/purchase/RemoveAttachment?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}getOldGoldList(e,t){return this._http.get(this.apiBaseUrl+"api/purchase/AllPurchaseEst?companyCode="+this.ccode+"&branchCode="+this.bcode+"&$top="+e+"&$skip="+t)}postPurchaseBilling(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/Purchase/Billing/Post",t)}getPurchaseBill(e){return this._http.get(this.apiBaseUrl+"api/Purchase/Billing/Get?companyCode="+this.ccode+"&branchCode="+this.bcode+"&billNo="+e)}CancelPurchaseBill(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/Purchase/Billing/CancelPurchaseBill",t)}AllPurchaseBill(e,t){return this._http.get(this.apiBaseUrl+"api/Purchase/Billing/AllPurchaseBill?companyCode="+this.ccode+"&branchCode="+this.bcode+"&date="+e+"&isCancelled="+t)}PrintPurchaseBill(e){return this._http.get(this.apiBaseUrl+"api/Purchase/Billing/Print?companyCode="+this.ccode+"&branchCode="+this.bcode+"&billNo="+e)}PrintPurEstDotMatrix(e){return this._http.get(this.apiBaseUrl+"api/purchase/DotMatrixPrint/"+this.ccode+"/"+this.bcode+"/"+e)}PrintPurBillDotMatrix(e){return this._http.get(this.apiBaseUrl+"api/Purchase/Billing/DotMatrixPrint/"+this.ccode+"/"+this.bcode+"/"+e)}getOldDmdName(){return this._http.get(this.apiBaseUrl+"api/purchase/StoneDiamondName/"+this.ccode+"/"+this.bcode+"/OD")}getStnDmdRate(e,t){return this._http.get(this.apiBaseUrl+"api/purchase/StoneDiamondRate/"+this.ccode+"/"+this.bcode+"/"+e+"/"+t)}sendPurchaseDatatoEstComp(e){this.purchaseSummaryData.next(e),e=""}SendSalesDataToEstComp(e){this.CustDtls.next(e),e=""}SendDiamondAmtFromDiamondComp(e){this.DiamondAmount.next(e),e=""}SendDiamondDetailsFromPurchaseComp(e){this.DiamondDetails.next(e),e=""}SendStoneDetailsFromPurchaseComp(e){this.StoneDetails.next(e),e=""}SendReprintPurchaseData(e){this.ReprintPurchaseData.next(e),e=""}};d.ctorParameters=()=>[{type:o.b},{type:l.a}],d=n.a([Object(r.Injectable)({providedIn:"root"}),n.c("design:paramtypes",[o.b,l.a])],d)},giQ8:function(e,t,a){"use strict";a.d(t,"a",(function(){return d}));var n=a("mrSG"),s=a("fXoL"),r=a("tk/3"),o=a("2Vo4"),i=a("NFKh"),l=a("qlSq");let d=class{constructor(e,t){this._http=e,this.appConfigService=t,this.ccode="",this.bcode="",this.existingOrderDetails=new o.a({}),this.castexistingOrderDetails=this.existingOrderDetails.asObservable(),this.OrderNo=new o.a(null),this.castOrderNoFromViewOrderComp=this.OrderNo.asObservable(),this.OrderNoToReprintComp=new o.a({}),this.castOrderNoToReprintComp=this.OrderNoToReprintComp.asObservable(),this.ReceiptNoToReprintComp=new o.a({}),this.castReceiptNoToReprintComp=this.ReceiptNoToReprintComp.asObservable(),this.OrderDetsToOrderComp=new o.a({}),this.castOrderDetsToOrderComp=this.OrderDetsToOrderComp.asObservable(),this.ModifyOrderDetsToOrderComp=new o.a(null),this.castModifyOrderDetsToOrderComp=this.ModifyOrderDetsToOrderComp.asObservable(),this.ReservedOrderDetsToSalesComp=new o.a({}),this.castReservedOrderDetsToSalesComp=this.ReservedOrderDetsToSalesComp.asObservable(),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.permissionCode=this.appConfigService.permissionCode,this.getCB()}getCB(){this.ccode=i.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(i.enc.Utf8),this.bcode=i.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(i.enc.Utf8)}getSalesManData(){return this._http.get(this.apiBaseUrl+"api/Masters/Salesman/"+this.ccode+"/"+this.bcode)}getKarat(){return this._http.get(this.apiBaseUrl+"api/Masters/Karat/"+this.ccode+"/"+this.bcode)}getGS(){return this._http.get(this.apiBaseUrl+"api/order/OrderGSType/"+this.ccode+"/"+this.bcode)}getRateperGram(e){return this._http.get(this.apiBaseUrl+"api/order/Rate?companyCode="+this.ccode+"&branchCode="+this.bcode+"&gsCode="+e.GS+"&karat="+e.Karat)}getPaymentMode(){return this._http.get(this.apiBaseUrl+"api/order/PayMode/"+this.ccode+"/"+this.bcode)}getBank(){return this._http.get(this.apiBaseUrl+"api/order/Bank/"+this.ccode+"/"+this.bcode)}getBarcodefromAPI(e){return this._http.get(this.apiBaseUrl+"api/order/ReservedOrder/"+this.ccode+"/"+this.bcode+"/"+e)}getCounter(){return this._http.get(this.apiBaseUrl+"api/order/Counter/"+this.ccode+"/"+this.bcode)}getMCTypes(){return this._http.get(this.apiBaseUrl+"api/masters/MCTypes/"+this.ccode+"/"+this.bcode)}getItemName(e,t){return this._http.get(this.apiBaseUrl+"api/order/Items/"+this.ccode+"/"+this.bcode+"/"+t+"/"+e)}get(e){return this._http.get(this.apiBaseUrl+"api/order/Get/"+this.ccode+"/"+this.bcode+"/"+e)}getOrderReceipt(e){return this._http.get(this.apiBaseUrl+"api/order/CancelReceiptGet/"+this.ccode+"/"+this.bcode+"/"+e)}getSearchParams(){return this._http.get(this.apiBaseUrl+"api/order/SearchParams/"+this.ccode+"/"+this.bcode)}getAttachOrderList(e,t){return"Customer"==e?(t=(t="'"+t+"'").toString().replace(/"/g,""),this._http.get(this.apiBaseUrl+"api/order/AllOrders/"+this.ccode+"/"+this.bcode+"?$top=100&$skip=0&$orderby=OrderNo%20desc&$filter=startswith("+e+","+t+")")):this._http.get(this.apiBaseUrl+"api/order/AllOrders/"+this.ccode+"/"+this.bcode+"?$top=100&$skip=0&$filter="+e+" eq "+t)}getAllOrdersCount(){return this._http.get(this.apiBaseUrl+"api/order/AllOrdersCount/"+this.ccode+"/"+this.bcode)}getOrderAttachedList(e){return this._http.get(this.apiBaseUrl+"api/order/GetAttachedOrder/"+this.ccode+"/"+this.bcode+"/"+e)}getAttachedList(e){return this._http.get(this.apiBaseUrl+"api/order/GetAttachment/"+this.ccode+"/"+this.bcode+"/"+e)}PostAttachementOrder(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/order/PostAttachment",t)}getShowroom(){return this._http.get(this.apiBaseUrl+"api/Master/CompanyMaster/get/"+this.ccode+"/"+this.bcode)}getReceipt(e){return this._http.get(this.apiBaseUrl+"api/order/ReceiptDet/"+this.ccode+"/"+this.bcode+"/"+e)}postOrder(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/order/Post",t)}putOrder(e,t){var a=JSON.stringify(e);return this._http.put(this.apiBaseUrl+"api/order/Put?orderNo="+t,a)}getOrderReceiptDetails(e){return this._http.get(this.apiBaseUrl+"api/order/OrderReceiptGet/"+this.ccode+"/"+this.bcode+"/"+e)}deleteOrderAttachment(e){return this._http.get(this.apiBaseUrl+"api/order/RemoveAttachment?companyCode="+this.ccode+"&branchCode="+this.bcode+"&estNo="+e)}postorderReceipt(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/order/OrderReceipt",t)}getCancelOrderView(e){return this._http.get(this.apiBaseUrl+"api/order/GetCancelOrderView/"+this.ccode+"/"+this.bcode+"/"+e)}cancelOrder(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/order/CancelOrder",t)}cancelReceipt(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/order/cancelReceipt",t)}viewOrder(e){return this._http.get(this.apiBaseUrl+"api/order/GetViewOrder/"+this.ccode+"/"+this.bcode+"/"+e)}getPrintOrder(e){return this._http.get(this.apiBaseUrl+"api/order/GetOrderPrint/"+this.ccode+"/"+this.bcode+"/"+e)}getPrintReceipt(e){return this._http.get(this.apiBaseUrl+"api/order/ReceiptDetPrint/"+this.ccode+"/"+this.bcode+"/"+e)}getApplicationDate(){return this._http.get(this.apiBaseUrl+"api/Masters/GetApplicationDate/"+this.ccode+"/"+this.bcode)}getOrderNo(e,t){return this._http.get(this.apiBaseUrl+"api/order/OrderPrintOrders/"+this.ccode+"/"+this.bcode+"/"+e+"/"+t)}getReceiptNo(e,t){return this._http.get(this.apiBaseUrl+"api/order/OrderPrintReceiptDetails/"+this.ccode+"/"+this.bcode+"/"+e+"/"+t)}getClosedOrder(e){return this._http.get(this.apiBaseUrl+"api/order/OrderPrintClosedOrders/"+this.ccode+"/"+this.bcode+"/"+e)}getTotal(e){return this._http.get(this.apiBaseUrl+"api/order/GetOrderReceiptTotalPrint/"+this.ccode+"/"+this.bcode+"/"+e)}getClosedTotal(e){return this._http.get(this.apiBaseUrl+"api/order/GetClosedOrderReceiptTotalPrint/"+this.ccode+"/"+this.bcode+"/"+e)}getWeightTotal(e){return this._http.get(this.apiBaseUrl+"api/order/GetOrderFormTotalPrint/"+this.ccode+"/"+this.bcode+"/"+e)}getReceiptTotal(e){return this._http.get(this.apiBaseUrl+"api/order/GetReceiptDetTotalPrint/"+this.ccode+"/"+this.bcode+"/"+e)}closeOrder(e){var t=JSON.stringify(e);return this._http.post(this.apiBaseUrl+"api/order/CloseOrder",t)}getOrderList(e,t){return this._http.get(this.apiBaseUrl+"api/order/AllOrders/"+this.ccode+"/"+this.bcode+"?$top="+e+"&$skip="+t+"&$orderby=OrderNo desc")}getGlobalOrderAmount(e){return this._http.get(this.apiBaseUrl+"api/order/GlobalOrderAmount/"+this.ccode+"/"+this.bcode+"/"+e)}getOrderItemType(){return this._http.get(this.apiBaseUrl+"api/order/OrderItemType/"+this.ccode+"/"+this.bcode)}getPermission(){return this._http.get(this.apiBaseUrl+"api/elevatedpermission/get?permissionCode="+this.permissionCode)}uploadCustOrderImg(e,t,a){return this._http.put(this.apiBaseUrl+"api/order/UploadOrderImage/"+this.ccode+"/"+this.bcode+"/"+e+"/"+t,a)}downloadCustOrderImg(e,t){return this._http.get(this.apiBaseUrl+"api/order/DownloadOrderImage/"+this.ccode+"/"+this.bcode+"/"+e+"/"+t)}getOrderPrintHTML(e){return this._http.get(this.apiBaseUrl+"api/order/GetOrderPrintDotMatrix/"+this.ccode+"/"+this.bcode+"/"+e)}getOrderReceiptPrintHTML(e){return this._http.get(this.apiBaseUrl+"api/order/ReceiptDetPrintDotMatrix/"+this.ccode+"/"+this.bcode+"/"+e)}getClosedOrderPrintHTML(e){return this._http.get(this.apiBaseUrl+"api/order/ClosedOrderPrintDotMatrix/"+this.ccode+"/"+this.bcode+"/"+e)}getModifyOrder(){return this._http.get(this.apiBaseUrl+"api/order/GetAllOrders/"+this.ccode+"/"+this.bcode)}getTopModifyOrder(e,t){return this._http.get(this.apiBaseUrl+"api/order/GetAllOrders/"+this.ccode+"/"+this.bcode+"?$top="+e+"&$skip="+t)}ValidateAttachOrder(e,t){return this._http.get(this.apiBaseUrl+"api/order/ValAttachOrderVal/"+this.ccode+"/"+this.bcode+"/"+e+"/"+t)}getorderRateType(e){return this._http.get(this.apiBaseUrl+"api/order/PurchasePlan/"+this.ccode+"/"+this.bcode+"/"+e)}getAdvancePercentDetail(e){return this._http.get(this.apiBaseUrl+"api/order/PurchasePlanDetail/"+this.ccode+"/"+this.bcode+"/"+e)}SendExistingOrderDetailsToSubComp(e){this.existingOrderDetails.next(e),e=""}SendOrderNoToComp(e){this.OrderNo.next(e),e=""}SendOrderNoToReprintComp(e){this.OrderNoToReprintComp.next(e),e=""}SendReceiptNoToReprintComp(e){this.ReceiptNoToReprintComp.next(e),e=""}SendOrderDetsToOrderComp(e){this.OrderDetsToOrderComp.next(e),e=""}SendModifyOrderNoToItemComp(e){this.ModifyOrderDetsToOrderComp.next(e),e=""}SendReservedOrderDetsToSalesComp(e){this.ReservedOrderDetsToSalesComp.next(e),e=""}};d.ctorParameters=()=>[{type:r.b},{type:l.a}],d=n.a([Object(s.Injectable)({providedIn:"root"}),n.c("design:paramtypes",[r.b,l.a])],d)}}]);