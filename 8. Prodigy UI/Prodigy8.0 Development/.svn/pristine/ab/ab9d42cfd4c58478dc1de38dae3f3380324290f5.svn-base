(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"5fg7":function(t,e,s){"use strict";s.d(e,"a",(function(){return l}));var r=s("mrSG"),i=s("fXoL"),o=s("tk/3"),a=s("NFKh"),n=s("qlSq");let l=class{constructor(t,e,s){this.url=t,this.http=e,this.appConfigService=s,this.ccode="",this.bcode="",this.AuthJWT=localStorage.getItem("Token"),this.apiBaseUrl=this.appConfigService.apiBaseUrl,this.password=this.appConfigService.Pwd,this.getCB()}getValueFromTop(t,e){return this.http.get(this.url+"list?$top="+t+"&$skip="+e)}getSearchCustomer(t,e,s){return this.http.post(this.url+"searchByParam?$top="+t+"&$skip="+e,s)}getCB(){this.ccode=a.AES.decrypt(localStorage.getItem("ccode"),this.password.trim()).toString(a.enc.Utf8),this.bcode=a.AES.decrypt(localStorage.getItem("bcode"),this.password.trim()).toString(a.enc.Utf8)}getAll(){return this.http.get(this.url+"list")}get(){return this.http.get(this.url)}getCount(){return this.http.get(this.url+"count")}getSearchCount(t,e){return this.http.get(this.url+"searchByParamCount/"+t+"/"+e+"/"+this.ccode+"/"+this.bcode)}getSearchDataPagination(t,e,s){var r=JSON.stringify(s);return this.http.post(this.url+"searchByParam?$top="+t+"&$skip="+e,r)}getValueFromId(t){return this.http.get(this.url+"GetByID/"+t+"/"+this.ccode+"/"+this.bcode)}post(t){var e=JSON.stringify(t);return this.http.post(this.url+"post",e)}put(t){var e=JSON.stringify(t);return this.http.put(this.url+"put?id="+t.ID,e)}tempPut(t){var e=JSON.stringify(t);return this.http.put(this.url+"post",e)}delete(t){return this.http.delete(this.url+"delete/?id="+t)}deleteRecord(t){var e='{"id":'+t+"}";return this.http.post(this.url+"delete",e)}getReportData(t,e){var s=JSON.stringify('{ "SimpleTextBox":"sample","BranchSelector":"RJR", "fromDate":"01/01/2019","toDate":"01/01/2019","Summary":1,"Detailde":0}');return this.http.post(this.url+"&top="+t+"&skip="+e,s)}getReportCount(){var t=JSON.stringify('{"SimpleTextBox":"sample","BranchSelector":"RJR", "fromDate":"01/01/2019","toDate":"01/01/2019","Summary":1,"Detailde":0}');return this.http.post(this.apiBaseUrl+"api/genericreport/count?id=1",t)}getList(t,e){return this.http.get(this.url+"list?pageIndex="+e+"&pageSize="+t)}getPdfExcelReport(){var t=JSON.stringify('{"SimpleTextBox":"sample","BranchSelector":"RJR", "fromDate":"01/01/2019","toDate":"01/01/2019","Summary":1,"Detailde":0}');return this.http.post(this.apiBaseUrl+"api/genericreport/allrecords?id=1",t)}};l.ctorParameters=()=>[{type:String},{type:o.b},{type:n.a}],l=r.a([Object(i.Injectable)(),r.c("design:paramtypes",[String,o.b,n.a])],l)},e3nW:function(t,e,s){"use strict";s.r(e),e.default=""},hRxY:function(t,e,s){"use strict";s.r(e),e.default="<p>\n  manage-gs-grouping works!\n</p>\n"},mtgm:function(t,e,s){"use strict";s.r(e),e.default='<div class="row">\n    <div class="col-md-12">\n      <div class="card">\n        <div class="card-body">\n          <div class="row">\n            <div class="col-md-5">\n              <h3>GS Grouping</h3>\n            </div>\n            <div class="col-md-4"></div>\n          </div>\n          <h6 class="card-subtitle"></h6>\n          <div class="table-responsive my-custom-scrollbar">\n            <table class="table table-bordered">\n              <thead class="topbar">\n                <tr>\n                  \x3c!-- <th>ID</th>--\x3e\n  \n                  <th>IR Type</th>\n                  <th>GS</th>\n                   <th>Ation</th>\n                </tr>\n              </thead>\n  \n              <tbody>\n                \x3c!-- <tr *ngFor="let kar of Location | search: searchText | paginate: { itemsPerPage:top, totalItems:MainCount, currentPage: p }" [ngClass]="{\'btn-primary\': cust.ID == currentId }"> --\x3e\n                <tr *ngFor="let List of GroupingList">\n                  <td>{{List.IRCode}}</td>\n                  <td>{{List.GSCode}}</td>\n                  <td>\n                    <i class="far fa-pencil-alt pointer mr-4" style="color:orange" title="Edit" (click)="editGSGroupRecord(List.ObjID)"></i>\n                    <i class="fas fa-trash-alt pointer" style="color:red" title="Delete" (click)="deleteGSGroupRecord(List.ObjID)" ></i>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <form [formGroup]="GSGroupForm" class="form-horizontal">\n              <div class="row">\n                <div class="col-md-3">\n                  <div class="form-group">\n                   <label class="control-label" for="IRCode">IR Type <span class="textRed"> <i\n                          class="fas fa-star-of-life"></i></span></label>\n                    <select class="form-control" formControlName="IRCode" \n                    [(ngModel)]="GSGroupListData.IRCode"  (click)="Mainlist(GSGroupListData.IRCode)">\n                      <option [ngValue]="null">Select</option>\n                      <option *ngFor="let _List of IRTypeList" [ngValue]="_List.IRCode">\n                        {{_List.IRName}}\n                      </option>\n                    </select>\n                  </div>\n                </div>\n                <div class="col-md-3">\n                  <div class="form-group">\n                    <label class="control-label" for="GSCode">GS<span class="textRed"> <i\n                          class="fas fa-star-of-life"></i></span>\n                    </label>\n                    <select class="form-control" formControlName="GSCode" [(ngModel)]="GSGroupListData.GSCode">\n                      <option [ngValue]="null">Select</option>\n                      <option *ngFor="let GsCode of GSGroupList" [ngValue]="GsCode.GsCode" >\n                        {{GsCode.GSName}}\n                      </option>\n                    </select>\n                  </div>\n                </div>\n    \n              </div>\n              <div class="row">\n                <div class="col-md-6">\n                  <div class="form-group">\n                    <button type="submit" class="btn btn-success waves-effect waves-light btn-rounded btn-secondary"\n                      (click)="onSubmit(GSGroupForm)"><i class="fal fa-save"></i> Submit</button>\n                    <button type="submit"\n                      class="btn btn-danger  waves-effect waves-light btn-rounded btn-secondary">Cancel</button>\n                  </div>\n                </div>\n                <div class="col-md-6" style="text-align:right">\n                  <span class="textRed"> <i class="fas fa-star-of-life"></i></span> Mandatory fields\n                </div>\n              </div>\n            </form>\n        </div>\n      </div>\n    </div>\n  </div>\n'},ojxS:function(t,e,s){"use strict";s.r(e),e.default=".my-custom-scrollbar {\r\n    position: relative;\r\n    height: 200px;\r\n    overflow: auto;\r\n    }"},qLqq:function(t,e,s){"use strict";s.d(e,"a",(function(){return r}));class r{}r.API_ENDPOINT="http://192.168.10.202/Magnawebpos/",r.Pwd="#SDAQ@$%^&*BNHJK"},wlao:function(t,e,s){"use strict";s.r(e);var r=s("mrSG"),i=s("fXoL"),o=s("ofXK"),a=s("3Pt+"),n=s("tyNb"),l=s("5nbR"),c=s("tk/3"),p=s("qLqq"),u=s("5fg7"),d=s("qlSq");let h=class extends u.a{constructor(t,e){super(p.a.API_ENDPOINT+"api/Master/GSGroup/",t,e),this._http=t}getGsGroupingList(t){return this._http.get(p.a.API_ENDPOINT+"api/Master/GSGroup/List/"+t)}getGSList(){return this._http.get(p.a.API_ENDPOINT+"api/Master/GSItemEntryMaster/List")}getIRType(){return this._http.get(p.a.API_ENDPOINT+"api/Views/ListOfIssueReceiptTypes")}deleteGSGroup(t){return this._http.delete(p.a.API_ENDPOINT+"api/Master/GSGroup/Delete/"+t)}editRecord(t){return this._http.get(p.a.API_ENDPOINT+"api/Master/GSGroup/ListOfDetails/"+t)}updateRecord(t){var e=JSON.stringify(t);return this._http.put(p.a.API_ENDPOINT+"api/Master/GSGroup/Put/"+t.ObjID,e)}};h.ctorParameters=()=>[{type:c.b},{type:d.a}],h=r.a([Object(i.Injectable)({providedIn:"root"}),r.c("design:paramtypes",[c.b,d.a])],h);var g=s("5eHb");let G=class{constructor(t,e,s,r){this.fb=t,this._GsGroupingService=e,this._router=s,this.toastr=r,this.hasErrors=!1,this.GSGroupListData={ObjID:null,IRCode:null,GSCode:null}}ngOnInit(){this.getGSList(),this.getIRType(),this.GSGroupForm=this.fb.group({IRCode:null,GSCode:null})}Mainlist(t){this._GsGroupingService.getGsGroupingList(t).subscribe(t=>{this.GroupingList=t})}getGSList(){this._GsGroupingService.getGSList().subscribe(t=>{this.GSGroupList=t,console.log(this.GSGroupList)})}getIRType(){this._GsGroupingService.getIRType().subscribe(t=>{this.IRTypeList=t})}deleteGSGroupRecord(t){confirm("Do you want to delete")&&this._GsGroupingService.deleteGSGroup(t).subscribe(t=>{this.Mainlist(this.GSGroupForm.value.IRCode)})}editGSGroupRecord(t){this._GsGroupingService.editRecord(t).subscribe(t=>{this.GSGroupListData=t})}onSubmit(t){""===t.value.IRCode||null==t.value.IRCode?alert("Please select IRType Code"):""===t.value.GSCode||null==t.value.GSCode?alert("Please select GS"):(this.errors=[],this._GsGroupingService.post(t.value).subscribe(t=>{this.successfulSave=!0,this.toastr.success("New Record Added Succcessfully","Success!"),this.Mainlist(this.GSGroupForm.value.IRCode)},t=>{this.successfulSave=!1}))}};G.ctorParameters=()=>[{type:a.FormBuilder},{type:h},{type:n.c},{type:g.b}],G=r.a([Object(i.Component)({selector:"app-gs-grouping",template:r.b(s("mtgm")).default,styles:[r.b(s("ojxS")).default]}),r.c("design:paramtypes",[a.FormBuilder,h,n.c,g.b])],G);const S=[{path:"",canActivate:[l.a],canActivateChild:[l.a],component:G,data:{title:"GS-Grouping",urls:[{title:"Dashboard",url:"javascript:void(0)"},{title:"GS-Grouping"}]}}];let m=class{};m=r.a([Object(i.NgModule)({imports:[n.d.forChild(S)],exports:[n.d]})],m);let f=class{constructor(){}ngOnInit(){}};f=r.a([Object(i.Component)({selector:"app-manage-gs-grouping",template:r.b(s("hRxY")).default,styles:[r.b(s("e3nW")).default]}),r.c("design:paramtypes",[])],f),s.d(e,"GsGroupingModule",(function(){return b}));let b=class{};b=r.a([Object(i.NgModule)({declarations:[G,f],imports:[o.CommonModule,m,a.FormsModule,a.ReactiveFormsModule]})],b)}}]);